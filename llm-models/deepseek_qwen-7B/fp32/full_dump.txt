sw.js:14 WebGPU is experimental on this platform. See https://github.com/gpuweb/gpuweb/wiki/Implementation-Status#implementation-status
sw.js:69 token_postproc_method:  byte_level
sw.js:69 prepend_space_in_encode:  false
sw.js:69 Cannot find function image_embed.
sw.js:69 Using prefillChunkSize:  1024
sw.js:69 Using contextWindowSize:  4096
// Dumped WGSL:
//----------------------------------------
// Function: reshape6_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_reshape : array<f32>;
@group(0) @binding(1) var<storage, read> lv285 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn reshape6_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_reshape[((v__1 * 256i) + i32(threadIdx.x))] = lv285[((v__1 * 256i) + i32(threadIdx.x))];
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize_NT_matmul9_kernel_1
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv787 : array<u32>;
@group(0) @binding(2) var<storage, read> lv788 : array<f32>;
@group(0) @binding(3) var<storage, read> take1 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize_NT_matmul9_kernel_1(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 8>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 8>;
  var NT_matmul_intermediate_pad_local : array<f32, 8>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 4i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 4i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 4i) + 1i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
    if (((i32(blockIdx.y) * 4i) + 2i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[4i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[5i]);
    }
    if (((i32(blockIdx.y) * 4i) + 3i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[6i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(take1[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[7i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 4i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 4i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.batch_size + 3i)>>2u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 4i) + ax0) < podArgs.batch_size)) {
        NT_matmul[((((i32(blockIdx.y) * 608256i) + (ax0 * 152064i)) + (v__1 * 2i)) + ax1_fused_2)] = NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)];
      }
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 68
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %reshape6_kernel "reshape6_kernel" %reshape6_kernel_workgroup_id_Input %reshape6_kernel_num_workgroups_Input %reshape6_kernel_local_invocation_id_Input
               OpExecutionMode %reshape6_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %reshape6_kernel_workgroup_id_Input "reshape6_kernel_workgroup_id_Input"
               OpName %reshape6_kernel_num_workgroups_Input "reshape6_kernel_num_workgroups_Input"
               OpName %reshape6_kernel_local_invocation_id_Input "reshape6_kernel_local_invocation_id_Input"
               OpName %reshape6_kernel_inner "reshape6_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %reshape6_kernel "reshape6_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %reshape6_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %reshape6_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %reshape6_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%reshape6_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%reshape6_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%reshape6_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %25 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
         %62 = OpTypeFunction %void
%reshape6_kernel_inner = OpFunction %void None %25
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %26 = OpLabel
         %27 = OpCompositeExtract %uint %blockIdx 2
         %28 = OpCompositeExtract %uint %gridDim 0
         %29 = OpIMul %uint %27 %28
         %30 = OpCompositeExtract %uint %blockIdx 0
         %31 = OpIAdd %uint %29 %30
         %32 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_1
         %36 = OpLoad %uint %32 None
         %37 = OpUGreaterThan %bool %31 %36
               OpSelectionMerge %39 None
               OpBranchConditional %37 %40 %39
         %40 = OpLabel
               OpReturn
         %39 = OpLabel
         %41 = OpCompositeExtract %uint %blockIdx 2
         %42 = OpCompositeExtract %uint %gridDim 0
         %43 = OpIMul %uint %41 %42
         %44 = OpCompositeExtract %uint %blockIdx 0
         %45 = OpIAdd %uint %43 %44
       %v__1 = OpBitcast %int %45
         %47 = OpIMul %int %v__1 %int_256
         %49 = OpCompositeExtract %uint %threadIdx 0
         %50 = OpBitcast %int %49
         %51 = OpIAdd %int %47 %50
         %52 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %51
         %54 = OpIMul %int %v__1 %int_256
         %55 = OpCompositeExtract %uint %threadIdx 0
         %56 = OpBitcast %int %55
         %57 = OpIAdd %int %54 %56
         %58 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %57
         %60 = OpLoad %float %58 None
               OpStore %52 %60 None
               OpReturn
               OpFunctionEnd
%reshape6_kernel = OpFunction %void None %62
         %63 = OpLabel
         %64 = OpLoad %v3uint %reshape6_kernel_workgroup_id_Input None
         %65 = OpLoad %v3uint %reshape6_kernel_num_workgroups_Input None
         %66 = OpLoad %v3uint %reshape6_kernel_local_invocation_id_Input None
         %67 = OpFunctionCall %void %reshape6_kernel_inner %64 %65 %66
               OpReturn
               OpFunctionEnd

// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize3_NT_matmul7_kernel_1
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv457 : array<u32>;
@group(0) @binding(2) var<storage, read> lv458 : array<f32>;
@group(0) @binding(3) var<storage, read> rms_norm115 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize3_NT_matmul7_kernel_1(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 8>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 8>;
  var NT_matmul_intermediate_pad_local : array<f32, 8>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 4i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 4i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 4i) + 1i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
    if (((i32(blockIdx.y) * 4i) + 2i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[5i]);
    }
    if (((i32(blockIdx.y) * 4i) + 3i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm115[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[7i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 4i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 4i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.seq_len + 3i)>>2u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 4i) + ax0) < podArgs.seq_len)) {
        NT_matmul[((((i32(blockIdx.y) * 151552i) + (ax0 * 37888i)) + (v__1 * 2i)) + ax1_fused_2)] = NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)];
      }
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize4_fused_NT_matmul3_add1_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv10 : array<f32>;
@group(0) @binding(2) var<storage, read> lv340 : array<f32>;
@group(0) @binding(3) var<storage, read> lv341 : array<f32>;
@group(0) @binding(4) var<storage, read> lv9 : array<u32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize4_fused_NT_matmul3_add1_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 4>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 4>;
  var NT_matmul_intermediate_pad_local : array<f32, 4>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 2i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 37i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>0u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[9i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>4u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[10i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>8u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[11i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>12u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[12i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>16u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[13i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>20u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[14i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>24u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[15i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>28u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    if ((i32(blockIdx.y) * 2i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[(((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[(((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 2i) + 1i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18944i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18945i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18946i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18947i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18948i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18949i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18950i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18951i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18944i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18945i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18946i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18947i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18948i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18949i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18950i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18951i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 2i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 2i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.batch_size + 1i)>>1u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 2i) + ax0) < podArgs.batch_size)) {
        T_add[((((i32(blockIdx.y) * 7168i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)] = (NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)] + lv340[((((i32(blockIdx.y) * 7168i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)]);
      }
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize1_fused_NT_matmul5_add2_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv451 : array<u32>;
@group(0) @binding(2) var<storage, read> lv452 : array<f32>;
@group(0) @binding(3) var<storage, read> model_layers_0_self_attn_c_attn_bias3 : array<f32>;
@group(0) @binding(4) var<storage, read> rms_norm114 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize1_fused_NT_matmul5_add2_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 4>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 4>;
  var NT_matmul_intermediate_pad_local : array<f32, 4>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 2i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 2i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 2i) + 1i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 2i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 2i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.seq_len + 1i)>>1u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 2i) + ax0) < podArgs.seq_len)) {
        T_add[((((i32(blockIdx.y) * 9216i) + (ax0 * 4608i)) + (v__1 * 2i)) + ax1_fused_2)] = (NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)] + model_layers_0_self_attn_c_attn_bias3[((v__1 * 2i) + ax1_fused_2)]);
      }
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv451 : array<u32>;
@group(0) @binding(2) var<storage, read> lv452 : array<f32>;
@group(0) @binding(3) var<storage, read> model_layers_0_self_attn_c_attn_bias3 : array<f32>;
@group(0) @binding(4) var<storage, read> rms_norm114 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> rms_norm114_reindex_pad_shared : array<f32, 256>;
var<workgroup> dequantize_reindex_shared : array<f32, 256>;
@compute @workgroup_size(8, 8, 1)
fn fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_reindex_pad_local : array<f32, 16>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var var_1 : i32 = 0; var_1 < 1i; var_1++) {
    NT_matmul_intermediate_reindex_pad_local[0i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[1i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[2i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[3i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[4i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[5i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[6i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[7i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[8i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[9i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[10i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[11i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[12i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[13i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[14i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[15i] = 0.000000e+00f;
    for (var ax3_0 : i32 = 0; ax3_0 < 448i; ax3_0++) {
      workgroupBarrier();
      if ((((v__1 * 32i) + (i32(threadIdx.y) * 4i)) + (i32(threadIdx.x)>>1u)) < podArgs.seq_len) {
        rms_norm114_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = rms_norm114[(((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i))];
        rms_norm114_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = rms_norm114[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 1i)];
        rms_norm114_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = rms_norm114[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 2i)];
        rms_norm114_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = rms_norm114[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 3i)];
      } else {
        rms_norm114_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = 0.000000e+00f;
        rms_norm114_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = 0.000000e+00f;
        rms_norm114_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = 0.000000e+00f;
        rms_norm114_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = 0.000000e+00f;
      }
      dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = ((f32(((lv451[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32(((i32(threadIdx.x) & 1i) * 16i))) & 15u)) - 7.000000e+00f) * lv452[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = ((f32(((lv451[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 4i))) & 15u)) - 7.000000e+00f) * lv452[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = ((f32(((lv451[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 8i))) & 15u)) - 7.000000e+00f) * lv452[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = ((f32(((lv451[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 12i))) & 15u)) - 7.000000e+00f) * lv452[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      workgroupBarrier();
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm114_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm114_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm114_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm114_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm114_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[15i]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      T_add[((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))] = (NT_matmul_intermediate_reindex_pad_local[0i] + model_layers_0_self_attn_c_attn_bias3[((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i))]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)] = (NT_matmul_intermediate_reindex_pad_local[1i] + model_layers_0_self_attn_c_attn_bias3[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 1i)]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)] = (NT_matmul_intermediate_reindex_pad_local[2i] + model_layers_0_self_attn_c_attn_bias3[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 2i)]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)] = (NT_matmul_intermediate_reindex_pad_local[3i] + model_layers_0_self_attn_c_attn_bias3[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 3i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 4608i)] = (NT_matmul_intermediate_reindex_pad_local[4i] + model_layers_0_self_attn_c_attn_bias3[((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i))]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 4609i)] = (NT_matmul_intermediate_reindex_pad_local[5i] + model_layers_0_self_attn_c_attn_bias3[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 1i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 4610i)] = (NT_matmul_intermediate_reindex_pad_local[6i] + model_layers_0_self_attn_c_attn_bias3[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 2i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 4611i)] = (NT_matmul_intermediate_reindex_pad_local[7i] + model_layers_0_self_attn_c_attn_bias3[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 3i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 9216i)] = (NT_matmul_intermediate_reindex_pad_local[8i] + model_layers_0_self_attn_c_attn_bias3[((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i))]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 9217i)] = (NT_matmul_intermediate_reindex_pad_local[9i] + model_layers_0_self_attn_c_attn_bias3[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 1i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 9218i)] = (NT_matmul_intermediate_reindex_pad_local[10i] + model_layers_0_self_attn_c_attn_bias3[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 2i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 9219i)] = (NT_matmul_intermediate_reindex_pad_local[11i] + model_layers_0_self_attn_c_attn_bias3[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 3i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 13824i)] = (NT_matmul_intermediate_reindex_pad_local[12i] + model_layers_0_self_attn_c_attn_bias3[((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i))]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 13825i)] = (NT_matmul_intermediate_reindex_pad_local[13i] + model_layers_0_self_attn_c_attn_bias3[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 1i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 13826i)] = (NT_matmul_intermediate_reindex_pad_local[14i] + model_layers_0_self_attn_c_attn_bias3[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 2i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 13827i)] = (NT_matmul_intermediate_reindex_pad_local[15i] + model_layers_0_self_attn_c_attn_bias3[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 3i)]);
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: tir_kv_cache_transpose_append_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read> k_data : array<f32>;
@group(0) @binding(1) var<storage, read_write> pages : array<f32>;
@group(0) @binding(2) var<storage, read> position_map : array<i32>;
@group(0) @binding(3) var<storage, read> v_data : array<f32>;

struct PODArgs {
  ntoken: i32,
  num_pages: i32,
  position_map_elem_offset: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn tir_kv_cache_transpose_append_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  if (position_map[((v__1>>1u) + podArgs.position_map_elem_offset)] != -1i) {
    let position : i32 = position_map[((v__1>>1u) + podArgs.position_map_elem_offset)];
    pages[((((((position>>4u) * 16384i) + ((v__1 & 1i) * 4096i)) + ((i32(threadIdx.x)>>7u) * 2048i)) + ((position & 15i) * 128i)) + (i32(threadIdx.x) & 127i))] = k_data[((v__1 * 256i) + i32(threadIdx.x))];
    let position_1 : i32 = position_map[((v__1>>1u) + podArgs.position_map_elem_offset)];
    pages[(((((((position_1>>4u) * 16384i) + ((v__1 & 1i) * 4096i)) + ((i32(threadIdx.x)>>7u) * 2048i)) + ((position_1 & 15i) * 128i)) + (i32(threadIdx.x) & 127i)) + 8192i)] = v_data[((v__1 * 256i) + i32(threadIdx.x))];
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2284
; Schema: 0
               OpCapability Shader
        %101 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize_NT_matmul9_kernel_1 "fused_fused_dequantize_NT_matmul9_kernel_1" %fused_fused_dequantize_NT_matmul9_kernel_1_workgroup_id_Input %fused_fused_dequantize_NT_matmul9_kernel_1_num_workgroups_Input %fused_fused_dequantize_NT_matmul9_kernel_1_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize_NT_matmul9_kernel_1 LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_1_workgroup_id_Input "fused_fused_dequantize_NT_matmul9_kernel_1_workgroup_id_Input"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_1_num_workgroups_Input "fused_fused_dequantize_NT_matmul9_kernel_1_num_workgroups_Input"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_1_local_invocation_id_Input "fused_fused_dequantize_NT_matmul9_kernel_1_local_invocation_id_Input"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_1_inner "fused_fused_dequantize_NT_matmul9_kernel_1_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_1 "fused_fused_dequantize_NT_matmul9_kernel_1"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize_NT_matmul9_kernel_1_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize_NT_matmul9_kernel_1_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize_NT_matmul9_kernel_1_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_8 ArrayStride 4
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBu
// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> input_embeds : array<f32>;
@group(0) @binding(2) var<storage, read> lv454 : array<u32>;
@group(0) @binding(3) var<storage, read> lv455 : array<f32>;
@group(0) @binding(4) var<storage, read> reshape227 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 8>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 8>;
  var NT_matmul_intermediate_pad_local : array<f32, 8>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 4i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 4i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 4i) + 1i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
    if (((i32(blockIdx.y) * 4i) + 2i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[5i]);
    }
    if (((i32(blockIdx.y) * 4i) + 3i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[7i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 4i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 4i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.seq_len + 3i)>>2u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 4i) + ax0) < podArgs.seq_len)) {
        T_add[((((i32(blockIdx.y) * 14336i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)] = (NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)] + input_embeds[((((i32(blockIdx.y) * 14336i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)]);
      }
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 157
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %tir_kv_cache_transpose_append_kernel "tir_kv_cache_transpose_append_kernel" %tir_kv_cache_transpose_append_kernel_workgroup_id_Input %tir_kv_cache_transpose_append_kernel_num_workgroups_Input %tir_kv_cache_transpose_append_kernel_local_invocation_id_Input
               OpExecutionMode %tir_kv_cache_transpose_append_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "ntoken"
               OpMemberName %PODArgs 1 "num_pages"
               OpMemberName %PODArgs 2 "position_map_elem_offset"
               OpMemberName %PODArgs 3 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %tir_kv_cache_transpose_append_kernel_workgroup_id_Input "tir_kv_cache_transpose_append_kernel_workgroup_id_Input"
               OpName %tir_kv_cache_transpose_append_kernel_num_workgroups_Input "tir_kv_cache_transpose_append_kernel_num_workgroups_Input"
               OpName %tir_kv_cache_transpose_append_kernel_local_invocation_id_Input "tir_kv_cache_transpose_append_kernel_local_invocation_id_Input"
               OpName %tir_kv_cache_transpose_append_kernel_inner "tir_kv_cache_transpose_append_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %position "position"
               OpName %position_1 "position_1"
               OpName %tir_kv_cache_transpose_append_kernel "tir_kv_cache_transpose_append_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 Coherent
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %PODArgs 2 Offset 8
               OpMemberDecorate %PODArgs 3 Offset 12
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %tir_kv_cache_transpose_append_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %tir_kv_cache_transpose_append_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %tir_kv_cache_transpose_append_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
%_runtimearr_int = OpTypeRuntimeArray %int
%tint_symbol_5 = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
          %9 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
%tint_symbol_7 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_7 = OpTypePointer StorageBuffer %tint_symbol_7
    
// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize2_fused_NT_matmul11_add5_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> input_embed : array<f32>;
@group(0) @binding(2) var<storage, read> lv1356 : array<u32>;
@group(0) @binding(3) var<storage, read> lv1357 : array<f32>;
@group(0) @binding(4) var<storage, read> lv1694 : array<f32>;

struct PODArgs {
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize2_fused_NT_matmul11_add5_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var NT_matmul_rf_local : array<f32, 1>;
  var lv1356_local : array<u32, 1>;
  var NT_matmul_rf_local_1 : array<f32, 1>;
  NT_matmul_rf_local[0i] = 0.000000e+00f;
  lv1356_local[0i] = lv1356[((v__1 * 448i) + i32(threadIdx.x))];
  NT_matmul_rf_local[0i] = fma(lv1694[(i32(threadIdx.x) * 8i)], ((f32(((lv1356_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1357[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1i)], ((f32(((lv1356_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1357[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2i)], ((f32(((lv1356_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1357[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 3i)], ((f32(((lv1356_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1357[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 4i)], ((f32(((lv1356_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1357[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 5i)], ((f32(((lv1356_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1357[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 6i)], ((f32(((lv1356_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1357[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 7i)], ((f32(((lv1356_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1357[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  lv1356_local[0i] = lv1356[(((v__1 * 448i) + i32(threadIdx.x)) + 64i)];
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 512i)], ((f32(((lv1356_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 513i)], ((f32(((lv1356_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 514i)], ((f32(((lv1356_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 515i)], ((f32(((lv1356_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 516i)], ((f32(((lv1356_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 517i)], ((f32(((lv1356_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 518i)], ((f32(((lv1356_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 519i)], ((f32(((lv1356_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  lv1356_local[0i] = lv1356[(((v__1 * 448i) + i32(threadIdx.x)) + 128i)];
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1024i)], ((f32(((lv1356_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1025i)], ((f32(((lv1356_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1026i)], ((f32(((lv1356_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1027i)], ((f32(((lv1356_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1028i)], ((f32(((lv1356_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1029i)], ((f32(((lv1356_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1030i)], ((f32(((lv1356_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1031i)], ((f32(((lv1356_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  lv1356_local[0i] = lv1356[(((v__1 * 448i) + i32(threadIdx.x)) + 192i)];
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1536i)], ((f32(((lv1356_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1537i)], ((f32(((lv1356_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1538i)], ((f32(((lv1356_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1539i)], ((f32(((lv1356_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1540i)], ((f32(((lv1356_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1541i)], ((f32(((lv1356_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1542i)], ((f32(((lv1356_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 1543i)], ((f32(((lv1356_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  lv1356_local[0i] = lv1356[(((v__1 * 448i) + i32(threadIdx.x)) + 256i)];
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2048i)], ((f32(((lv1356_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2049i)], ((f32(((lv1356_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2050i)], ((f32(((lv1356_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2051i)], ((f32(((lv1356_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2052i)], ((f32(((lv1356_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2053i)], ((f32(((lv1356_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2054i)], ((f32(((lv1356_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2055i)], ((f32(((lv1356_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  lv1356_local[0i] = lv1356[(((v__1 * 448i) + i32(threadIdx.x)) + 320i)];
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2560i)], ((f32(((lv1356_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2561i)], ((f32(((lv1356_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2562i)], ((f32(((lv1356_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2563i)], ((f32(((lv1356_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2564i)], ((f32(((lv1356_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2565i)], ((f32(((lv1356_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2566i)], ((f32(((lv1356_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 2567i)], ((f32(((lv1356_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  lv1356_local[0i] = lv1356[(((v__1 * 448i) + i32(threadIdx.x)) + 384i)];
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 3072i)], ((f32(((lv1356_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 3073i)], ((f32(((lv1356_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 3074i)], ((f32(((lv1356_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 3075i)], ((f32(((lv1356_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 3076i)], ((f32(((lv1356_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 3077i)], ((f32(((lv1356_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 3078i)], ((f32(((lv1356_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(lv1694[((i32(threadIdx.x) * 8i) + 3079i)], ((f32(((lv1356_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1357[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local_1[0i] = 0.000000e+00f;
  NT_matmul_rf_local_1[0i] = (NT_matmul_rf_local_1[0i] + NT_matmul_rf_local[0i]);
  workgroupBarrier();
  red_buf0[i32(threadIdx.x)] = NT_matmul_rf_local_1[0i];
  workgroupBarrier();
  if (i32(threadIdx.x) < 32i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 16i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 8i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 4i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 2i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 1i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) == 0i) {
    T_add[v__1] = (red_buf0[0i] + input_embed[v__1]);
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: compact_kv_copy_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read> copy_length_indptr : array<i32>;
@group(0) @binding(1) var<storage, read> copy_src_dst_pos : array<i32>;
@group(0) @binding(2) var<storage, read_write> pages : array<f32>;

struct PODArgs {
  batch_size: i32,
  copy_length_indptr_elem_offset: i32,
  copy_src_dst_pos_elem_offset: i32,
  num_pages: i32,
  total_copy_length: i32,
  packGridDimX: u32
}
@group(0) @binding(3) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn compact_kv_copy_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  if ((v__1 - (podArgs.batch_size * 2i)) < 0i) {
    for (var i : i32 = 0; i < (copy_length_indptr[(((v__1>>1u) + podArgs.copy_length_indptr_elem_offset) + 1i)] - copy_length_indptr[((v__1>>1u) + podArgs.copy_length_indptr_elem_offset)]); i++) {
      let src_pos : i32 = copy_src_dst_pos[((copy_length_indptr[((v__1>>1u) + podArgs.copy_length_indptr_elem_offset)] + i) + podArgs.copy_src_dst_pos_elem_offset)];
      let dst_pos : i32 = copy_src_dst_pos[(((podArgs.total_copy_length + copy_length_indptr[((v__1>>1u) + podArgs.copy_length_indptr_elem_offset)]) + i) + podArgs.copy_src_dst_pos_elem_offset)];
      pages[((((((dst_pos>>4u) * 16384i) + ((v__1 & 1i) * 4096i)) + ((i32(threadIdx.x)>>7u) * 2048i)) + ((dst_pos & 15i) * 128i)) + (i32(threadIdx.x) & 127i))] = pages[((((((src_pos>>4u) * 16384i) + ((v__1 & 1i) * 4096i)) + ((i32(threadIdx.x)>>7u) * 2048i)) + ((src_pos & 15i) * 128i)) + (i32(threadIdx.x) & 127i))];
      pages[(((((((dst_pos>>4u) * 16384i) + ((v__1 & 1i) * 4096i)) + ((i32(threadIdx.x)>>7u) * 2048i)) + ((dst_pos & 15i) * 128i)) + (i32(threadIdx.x) & 127i)) + 8192i)] = pages[(((((((src_pos>>4u) * 16384i) + ((v__1 & 1i) * 4096i)) + ((i32(threadIdx.x)>>7u) * 2048i)) + ((src_pos & 15i) * 128i)) + (i32(threadIdx.x) & 127i)) + 8192i)];
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2284
; Schema: 0
               OpCapability Shader
        %101 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize3_NT_matmul7_kernel_1 "fused_fused_dequantize3_NT_matmul7_kernel_1" %fused_fused_dequantize3_NT_matmul7_kernel_1_workgroup_id_Input %fused_fused_dequantize3_NT_matmul7_kernel_1_num_workgroups_Input %fused_fused_dequantize3_NT_matmul7_kernel_1_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize3_NT_matmul7_kernel_1 LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_1_workgroup_id_Input "fused_fused_dequantize3_NT_matmul7_kernel_1_workgroup_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_1_num_workgroups_Input "fused_fused_dequantize3_NT_matmul7_kernel_1_num_workgroups_Input"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_1_local_invocation_id_Input "fused_fused_dequantize3_NT_matmul7_kernel_1_local_invocation_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_1_inner "fused_fused_dequantize3_NT_matmul7_kernel_1_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_1 "fused_fused_dequantize3_NT_matmul7_kernel_1"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize3_NT_matmul7_kernel_1_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize3_NT_matmul7_kernel_1_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize3_NT_matmul7_kernel_1_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_8 ArrayStride 4
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
// Dumped WGSL:
//----------------------------------------
// Function: softmax_with_chunked_sum_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read> A : array<f32>;
@group(0) @binding(1) var<storage, read> chunked_max : array<f32>;
@group(0) @binding(2) var<storage, read> chunked_sum : array<f32>;
@group(0) @binding(3) var<storage, read_write> softmax : array<f32>;
@group(0) @binding(4) var<storage, read> temperature : array<f32>;

struct PODArgs {
  batch_size: i32,
  num_chunks: i32,
  vocab_size: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 256>;
var<workgroup> temp_max_shared : array<f32, 1>;
var<workgroup> red_buf0_1 : array<f32, 256>;
var<workgroup> temp_sum_shared : array<f32, 1>;
@compute @workgroup_size(32, 8, 1)
fn softmax_with_chunked_sum_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var in_thread_temp_max_shared : array<f32, 1>;
  var in_thread_temp_sum_shared : array<f32, 1>;
  in_thread_temp_max_shared[0i] = -3.402823e+38f;
  for (var ax0_0 : i32 = 0; ax0_0 < ((podArgs.num_chunks + 31i)>>5u); ax0_0++) {
    if (((ax0_0 * 32i) + i32(threadIdx.x)) < podArgs.num_chunks) {
      in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], chunked_max[(((ax0_0 * 32i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.num_chunks)) + i32(threadIdx.x))]);
    }
  }
  workgroupBarrier();
  red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = in_thread_temp_max_shared[0i];
  workgroupBarrier();
  if (i32(threadIdx.x) < 16i) {
    red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = max(red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))], red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 16i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 8i) {
    red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = max(red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))], red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 8i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 4i) {
    red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = max(red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))], red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 4i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 2i) {
    red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = max(red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))], red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 2i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 1i) {
    red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = max(red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))], red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 1i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) == 0i) {
    temp_max_shared[0i] = red_buf0[(i32(threadIdx.y) * 32i)];
  }
  in_thread_temp_sum_shared[0i] = 0.000000e+00f;
  workgroupBarrier();
  for (var ax0_0_1 : i32 = 0; ax0_0_1 < ((podArgs.num_chunks + 31i)>>5u); ax0_0_1++) {
    if (((ax0_0_1 * 32i) + i32(threadIdx.x)) < podArgs.num_chunks) {
      var condval : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval = exp(((chunked_sum[(((ax0_0_1 * 32i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.num_chunks)) + i32(threadIdx.x))] + chunked_max[(((ax0_0_1 * 32i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.num_chunks)) + i32(threadIdx.x))]) - temp_max_shared[0i]));
} else {
        condval = (f32((chunked_max[(((ax0_0_1 * 32i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.num_chunks)) + i32(threadIdx.x))] == temp_max_shared[0i])) * chunked_sum[(((ax0_0_1 * 32i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.num_chunks)) + i32(threadIdx.x))]);
}
      in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval);
    }
  }
  workgroupBarrier();
  red_buf0_1[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = in_thread_temp_sum_shared[0i];
  workgroupBarrier();
  if (i32(threadIdx.x) < 16i) {
    red_buf0_1[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0_1[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0_1[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 16i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 8i) {
    red_buf0_1[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0_1[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0_1[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 8i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 4i) {
    red_buf0_1[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0_1[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0_1[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 4i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 2i) {
    red_buf0_1[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0_1[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0_1[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 2i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 1i) {
    red_buf0_1[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0_1[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0_1[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 1i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) == 0i) {
    temp_sum_shared[0i] = red_buf0_1[(i32(threadIdx.y) * 32i)];
  }
  workgroupBarrier();
  if (((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) < podArgs.vocab_size) {
    var condval_1 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_1 = exp(((A[(((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x))] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_1 = (f32((A[(((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x))] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[(((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x))] = condval_1;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 256i) < podArgs.vocab_size) {
    var condval_2 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_2 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 256i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_2 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 256i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 256i)] = condval_2;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 512i) < podArgs.vocab_size) {
    var condval_3 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_3 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 512i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_3 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 512i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 512i)] = condval_3;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 768i) < podArgs.vocab_size) {
    var condval_4 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_4 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 768i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_4 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 768i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 768i)] = condval_4;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 1024i) < podArgs.vocab_size) {
    var condval_5 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_5 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1024i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_5 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1024i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1024i)] = condval_5;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 1280i) < podArgs.vocab_size) {
    var condval_6 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_6 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1280i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_6 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1280i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1280i)] = condval_6;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 1536i) < podArgs.vocab_size) {
    var condval_7 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_7 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1536i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_7 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1536i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1536i)] = condval_7;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 1792i) < podArgs.vocab_size) {
    var condval_8 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_8 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1792i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_8 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1792i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1792i)] = condval_8;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 2048i) < podArgs.vocab_size) {
    var condval_9 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_9 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2048i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_9 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2048i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2048i)] = condval_9;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 2304i) < podArgs.vocab_size) {
    var condval_10 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_10 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2304i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_10 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2304i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2304i)] = condval_10;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 2560i) < podArgs.vocab_size) {
    var condval_11 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_11 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2560i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_11 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2560i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2560i)] = condval_11;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 2816i) < podArgs.vocab_size) {
    var condval_12 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_12 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2816i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_12 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2816i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2816i)] = condval_12;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 3072i) < podArgs.vocab_size) {
    var condval_13 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_13 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3072i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_13 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3072i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3072i)] = condval_13;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 3328i) < podArgs.vocab_size) {
    var condval_14 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_14 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3328i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_14 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3328i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3328i)] = condval_14;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 3584i) < podArgs.vocab_size) {
    var condval_15 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_15 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3584i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_15 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3584i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3584i)] = condval_15;
  }
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + i32(threadIdx.x)) + 3840i) < podArgs.vocab_size) {
    var condval_16 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_16 = exp(((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3840i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]) - (log(temp_sum_shared[0i]) + temp_max_shared[0i])));
} else {
      condval_16 = (f32((A[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3840i)] == temp_max_shared[0i])) / temp_sum_shared[0i]);
}
    softmax[((((((v__1 % podArgs.num_chunks) * 4096i) + (i32(threadIdx.y) * 32i)) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3840i)] = condval_16;
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1603
; Schema: 0
               OpCapability Shader
        %103 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel" %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_workgroup_id_Input %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_num_workgroups_Input %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_workgroup_id_Input "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_num_workgroups_Input "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_local_invocation_id_Input "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_inner "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %12 DescriptorSet 0
               OpDecorate %12 Binding 3
               OpDecorate %12 NonWritable
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %15 DescriptorSet 0
               OpDecorate %15 Binding 4
               OpDecorate %15 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_workgroup_id_I
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1595
; Schema: 0
               OpCapability Shader
        %103 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel" %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_workgroup_id_Input %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_num_workgroups_Input %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_workgroup_id_Input "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_num_workgroups_Input "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_local_invocation_id_Input "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_inner "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_workgroup_id_I
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 227
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %compact_kv_copy_kernel "compact_kv_copy_kernel" %compact_kv_copy_kernel_workgroup_id_Input %compact_kv_copy_kernel_num_workgroups_Input %compact_kv_copy_kernel_local_invocation_id_Input
               OpExecutionMode %compact_kv_copy_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "copy_length_indptr_elem_offset"
               OpMemberName %PODArgs 2 "copy_src_dst_pos_elem_offset"
               OpMemberName %PODArgs 3 "num_pages"
               OpMemberName %PODArgs 4 "total_copy_length"
               OpMemberName %PODArgs 5 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpName %compact_kv_copy_kernel_workgroup_id_Input "compact_kv_copy_kernel_workgroup_id_Input"
               OpName %compact_kv_copy_kernel_num_workgroups_Input "compact_kv_copy_kernel_num_workgroups_Input"
               OpName %compact_kv_copy_kernel_local_invocation_id_Input "compact_kv_copy_kernel_local_invocation_id_Input"
               OpName %compact_kv_copy_kernel_inner "compact_kv_copy_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %i "i"
               OpName %src_pos "src_pos"
               OpName %dst_pos "dst_pos"
               OpName %compact_kv_copy_kernel "compact_kv_copy_kernel"
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 Coherent
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %PODArgs 2 Offset 8
               OpMemberDecorate %PODArgs 3 Offset 12
               OpMemberDecorate %PODArgs 4 Offset 16
               OpMemberDecorate %PODArgs 5 Offset 20
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpDecorate %compact_kv_copy_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %compact_kv_copy_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %compact_kv_copy_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
        %int = OpTypeInt 32 1
%_runtimearr_int = OpTypeRuntimeArray %int
%tint_symbol_1 = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
          %9 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %int %int %int %int %uint
%tint_symbol_7 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_7 = OpTypePointer Uniform %tint_symbol_7
         %14 = OpVariable %_ptr_Uniform_tint_symbol_7 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%compact_kv_copy_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%compact_kv_copy_kernel_num_workgroups_Input = OpVariable 
// Dumped WGSL:
//----------------------------------------
// Function: chunk_lse_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read> A : array<f32>;
@group(0) @binding(1) var<storage, read_write> chunked_max : array<f32>;
@group(0) @binding(2) var<storage, read_write> chunked_sum : array<f32>;
@group(0) @binding(3) var<storage, read> temperature : array<f32>;

struct PODArgs {
  batch_size: i32,
  num_chunks: i32,
  vocab_size: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
var<workgroup> temp_max_shared : array<f32, 1>;
var<workgroup> red_buf0_1 : array<f32, 64>;
var<workgroup> temp_sum_shared : array<f32, 1>;
@compute @workgroup_size(64, 1, 1)
fn chunk_lse_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var in_thread_temp_max_shared : array<f32, 1>;
  var in_thread_temp_sum_shared : array<f32, 1>;
  in_thread_temp_max_shared[0i] = -3.402823e+38f;
  var condval : f32;
  if (((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) < podArgs.vocab_size)) {
    var condval_1 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_1 = (A[((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x))] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_1 = A[((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x))];
}
    condval = condval_1;
} else {
    condval = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval);
  var condval_2 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 64i) < podArgs.vocab_size)) {
    var condval_3 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_3 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 64i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_3 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 64i)];
}
    condval_2 = condval_3;
} else {
    condval_2 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_2);
  var condval_4 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 128i) < podArgs.vocab_size)) {
    var condval_5 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_5 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 128i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_5 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 128i)];
}
    condval_4 = condval_5;
} else {
    condval_4 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_4);
  var condval_6 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 192i) < podArgs.vocab_size)) {
    var condval_7 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_7 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 192i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_7 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 192i)];
}
    condval_6 = condval_7;
} else {
    condval_6 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_6);
  var condval_8 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 256i) < podArgs.vocab_size)) {
    var condval_9 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_9 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 256i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_9 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 256i)];
}
    condval_8 = condval_9;
} else {
    condval_8 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_8);
  var condval_10 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 320i) < podArgs.vocab_size)) {
    var condval_11 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_11 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 320i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_11 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 320i)];
}
    condval_10 = condval_11;
} else {
    condval_10 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_10);
  var condval_12 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 384i) < podArgs.vocab_size)) {
    var condval_13 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_13 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 384i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_13 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 384i)];
}
    condval_12 = condval_13;
} else {
    condval_12 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_12);
  var condval_14 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 448i) < podArgs.vocab_size)) {
    var condval_15 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_15 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 448i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_15 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 448i)];
}
    condval_14 = condval_15;
} else {
    condval_14 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_14);
  var condval_16 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 512i) < podArgs.vocab_size)) {
    var condval_17 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_17 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 512i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_17 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 512i)];
}
    condval_16 = condval_17;
} else {
    condval_16 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_16);
  var condval_18 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 576i) < podArgs.vocab_size)) {
    var condval_19 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_19 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 576i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_19 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 576i)];
}
    condval_18 = condval_19;
} else {
    condval_18 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_18);
  var condval_20 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 640i) < podArgs.vocab_size)) {
    var condval_21 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_21 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 640i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_21 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 640i)];
}
    condval_20 = condval_21;
} else {
    condval_20 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_20);
  var condval_22 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 704i) < podArgs.vocab_size)) {
    var condval_23 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_23 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 704i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_23 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 704i)];
}
    condval_22 = condval_23;
} else {
    condval_22 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_22);
  var condval_24 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 768i) < podArgs.vocab_size)) {
    var condval_25 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_25 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 768i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_25 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 768i)];
}
    condval_24 = condval_25;
} else {
    condval_24 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_24);
  var condval_26 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 832i) < podArgs.vocab_size)) {
    var condval_27 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_27 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 832i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_27 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 832i)];
}
    condval_26 = condval_27;
} else {
    condval_26 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_26);
  var condval_28 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 896i) < podArgs.vocab_size)) {
    var condval_29 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_29 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 896i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_29 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 896i)];
}
    condval_28 = condval_29;
} else {
    condval_28 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_28);
  var condval_30 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 960i) < podArgs.vocab_size)) {
    var condval_31 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_31 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 960i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_31 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 960i)];
}
    condval_30 = condval_31;
} else {
    condval_30 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_30);
  var condval_32 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1024i) < podArgs.vocab_size)) {
    var condval_33 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_33 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1024i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_33 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1024i)];
}
    condval_32 = condval_33;
} else {
    condval_32 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_32);
  var condval_34 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1088i) < podArgs.vocab_size)) {
    var condval_35 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_35 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1088i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_35 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1088i)];
}
    condval_34 = condval_35;
} else {
    condval_34 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_34);
  var condval_36 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1152i) < podArgs.vocab_size)) {
    var condval_37 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_37 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1152i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_37 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1152i)];
}
    condval_36 = condval_37;
} else {
    condval_36 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_36);
  var condval_38 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1216i) < podArgs.vocab_size)) {
    var condval_39 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_39 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1216i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_39 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1216i)];
}
    condval_38 = condval_39;
} else {
    condval_38 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_38);
  var condval_40 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1280i) < podArgs.vocab_size)) {
    var condval_41 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_41 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1280i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_41 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1280i)];
}
    condval_40 = condval_41;
} else {
    condval_40 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_40);
  var condval_42 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1344i) < podArgs.vocab_size)) {
    var condval_43 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_43 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1344i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_43 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1344i)];
}
    condval_42 = condval_43;
} else {
    condval_42 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_42);
  var condval_44 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1408i) < podArgs.vocab_size)) {
    var condval_45 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_45 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1408i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_45 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1408i)];
}
    condval_44 = condval_45;
} else {
    condval_44 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_44);
  var condval_46 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1472i) < podArgs.vocab_size)) {
    var condval_47 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_47 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1472i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_47 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1472i)];
}
    condval_46 = condval_47;
} else {
    condval_46 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_46);
  var condval_48 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1536i) < podArgs.vocab_size)) {
    var condval_49 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_49 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1536i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_49 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1536i)];
}
    condval_48 = condval_49;
} else {
    condval_48 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_48);
  var condval_50 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1600i) < podArgs.vocab_size)) {
    var condval_51 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_51 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1600i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_51 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1600i)];
}
    condval_50 = condval_51;
} else {
    condval_50 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_50);
  var condval_52 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1664i) < podArgs.vocab_size)) {
    var condval_53 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_53 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1664i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_53 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1664i)];
}
    condval_52 = condval_53;
} else {
    condval_52 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_52);
  var condval_54 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1728i) < podArgs.vocab_size)) {
    var condval_55 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_55 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1728i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_55 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1728i)];
}
    condval_54 = condval_55;
} else {
    condval_54 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_54);
  var condval_56 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1792i) < podArgs.vocab_size)) {
    var condval_57 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_57 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1792i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_57 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1792i)];
}
    condval_56 = condval_57;
} else {
    condval_56 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_56);
  var condval_58 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1856i) < podArgs.vocab_size)) {
    var condval_59 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_59 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1856i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_59 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1856i)];
}
    condval_58 = condval_59;
} else {
    condval_58 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_58);
  var condval_60 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1920i) < podArgs.vocab_size)) {
    var condval_61 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_61 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1920i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_61 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1920i)];
}
    condval_60 = condval_61;
} else {
    condval_60 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_60);
  var condval_62 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1984i) < podArgs.vocab_size)) {
    var condval_63 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_63 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1984i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_63 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1984i)];
}
    condval_62 = condval_63;
} else {
    condval_62 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_62);
  var condval_64 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2048i) < podArgs.vocab_size)) {
    var condval_65 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_65 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2048i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_65 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2048i)];
}
    condval_64 = condval_65;
} else {
    condval_64 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_64);
  var condval_66 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2112i) < podArgs.vocab_size)) {
    var condval_67 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_67 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2112i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_67 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2112i)];
}
    condval_66 = condval_67;
} else {
    condval_66 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_66);
  var condval_68 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2176i) < podArgs.vocab_size)) {
    var condval_69 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_69 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2176i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_69 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2176i)];
}
    condval_68 = condval_69;
} else {
    condval_68 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_68);
  var condval_70 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2240i) < podArgs.vocab_size)) {
    var condval_71 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_71 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2240i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_71 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2240i)];
}
    condval_70 = condval_71;
} else {
    condval_70 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_70);
  var condval_72 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2304i) < podArgs.vocab_size)) {
    var condval_73 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_73 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2304i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_73 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2304i)];
}
    condval_72 = condval_73;
} else {
    condval_72 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_72);
  var condval_74 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2368i) < podArgs.vocab_size)) {
    var condval_75 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_75 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2368i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_75 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2368i)];
}
    condval_74 = condval_75;
} else {
    condval_74 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_74);
  var condval_76 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2432i) < podArgs.vocab_size)) {
    var condval_77 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_77 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2432i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_77 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2432i)];
}
    condval_76 = condval_77;
} else {
    condval_76 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_76);
  var condval_78 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2496i) < podArgs.vocab_size)) {
    var condval_79 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_79 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2496i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_79 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2496i)];
}
    condval_78 = condval_79;
} else {
    condval_78 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_78);
  var condval_80 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2560i) < podArgs.vocab_size)) {
    var condval_81 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_81 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2560i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_81 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2560i)];
}
    condval_80 = condval_81;
} else {
    condval_80 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_80);
  var condval_82 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2624i) < podArgs.vocab_size)) {
    var condval_83 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_83 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2624i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_83 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2624i)];
}
    condval_82 = condval_83;
} else {
    condval_82 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_82);
  var condval_84 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2688i) < podArgs.vocab_size)) {
    var condval_85 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_85 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2688i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_85 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2688i)];
}
    condval_84 = condval_85;
} else {
    condval_84 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_84);
  var condval_86 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2752i) < podArgs.vocab_size)) {
    var condval_87 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_87 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2752i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_87 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2752i)];
}
    condval_86 = condval_87;
} else {
    condval_86 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_86);
  var condval_88 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2816i) < podArgs.vocab_size)) {
    var condval_89 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_89 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2816i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_89 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2816i)];
}
    condval_88 = condval_89;
} else {
    condval_88 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_88);
  var condval_90 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2880i) < podArgs.vocab_size)) {
    var condval_91 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_91 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2880i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_91 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2880i)];
}
    condval_90 = condval_91;
} else {
    condval_90 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_90);
  var condval_92 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2944i) < podArgs.vocab_size)) {
    var condval_93 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_93 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2944i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_93 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2944i)];
}
    condval_92 = condval_93;
} else {
    condval_92 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_92);
  var condval_94 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3008i) < podArgs.vocab_size)) {
    var condval_95 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_95 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3008i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_95 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3008i)];
}
    condval_94 = condval_95;
} else {
    condval_94 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_94);
  var condval_96 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3072i) < podArgs.vocab_size)) {
    var condval_97 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_97 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3072i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_97 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3072i)];
}
    condval_96 = condval_97;
} else {
    condval_96 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_96);
  var condval_98 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3136i) < podArgs.vocab_size)) {
    var condval_99 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_99 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3136i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_99 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3136i)];
}
    condval_98 = condval_99;
} else {
    condval_98 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_98);
  var condval_100 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3200i) < podArgs.vocab_size)) {
    var condval_101 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_101 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3200i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_101 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3200i)];
}
    condval_100 = condval_101;
} else {
    condval_100 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_100);
  var condval_102 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3264i) < podArgs.vocab_size)) {
    var condval_103 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_103 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3264i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_103 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3264i)];
}
    condval_102 = condval_103;
} else {
    condval_102 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_102);
  var condval_104 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3328i) < podArgs.vocab_size)) {
    var condval_105 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_105 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3328i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_105 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3328i)];
}
    condval_104 = condval_105;
} else {
    condval_104 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_104);
  var condval_106 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3392i) < podArgs.vocab_size)) {
    var condval_107 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_107 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3392i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_107 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3392i)];
}
    condval_106 = condval_107;
} else {
    condval_106 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_106);
  var condval_108 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3456i) < podArgs.vocab_size)) {
    var condval_109 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_109 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3456i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_109 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3456i)];
}
    condval_108 = condval_109;
} else {
    condval_108 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_108);
  var condval_110 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3520i) < podArgs.vocab_size)) {
    var condval_111 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_111 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3520i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_111 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3520i)];
}
    condval_110 = condval_111;
} else {
    condval_110 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_110);
  var condval_112 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3584i) < podArgs.vocab_size)) {
    var condval_113 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_113 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3584i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_113 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3584i)];
}
    condval_112 = condval_113;
} else {
    condval_112 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_112);
  var condval_114 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3648i) < podArgs.vocab_size)) {
    var condval_115 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_115 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3648i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_115 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3648i)];
}
    condval_114 = condval_115;
} else {
    condval_114 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_114);
  var condval_116 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3712i) < podArgs.vocab_size)) {
    var condval_117 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_117 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3712i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_117 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3712i)];
}
    condval_116 = condval_117;
} else {
    condval_116 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_116);
  var condval_118 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3776i) < podArgs.vocab_size)) {
    var condval_119 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_119 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3776i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_119 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3776i)];
}
    condval_118 = condval_119;
} else {
    condval_118 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_118);
  var condval_120 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3840i) < podArgs.vocab_size)) {
    var condval_121 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_121 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3840i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_121 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3840i)];
}
    condval_120 = condval_121;
} else {
    condval_120 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_120);
  var condval_122 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3904i) < podArgs.vocab_size)) {
    var condval_123 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_123 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3904i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_123 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3904i)];
}
    condval_122 = condval_123;
} else {
    condval_122 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_122);
  var condval_124 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3968i) < podArgs.vocab_size)) {
    var condval_125 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_125 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3968i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_125 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3968i)];
}
    condval_124 = condval_125;
} else {
    condval_124 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_124);
  var condval_126 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 4032i) < podArgs.vocab_size)) {
    var condval_127 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_127 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 4032i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
      condval_127 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 4032i)];
}
    condval_126 = condval_127;
} else {
    condval_126 = -3.402823e+38f;
}
  in_thread_temp_max_shared[0i] = max(in_thread_temp_max_shared[0i], condval_126);
  workgroupBarrier();
  red_buf0[i32(threadIdx.x)] = in_thread_temp_max_shared[0i];
  workgroupBarrier();
  if (i32(threadIdx.x) < 32i) {
    red_buf0[i32(threadIdx.x)] = max(red_buf0[i32(threadIdx.x)], red_buf0[(i32(threadIdx.x) + 32i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 16i) {
    red_buf0[i32(threadIdx.x)] = max(red_buf0[i32(threadIdx.x)], red_buf0[(i32(threadIdx.x) + 16i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 8i) {
    red_buf0[i32(threadIdx.x)] = max(red_buf0[i32(threadIdx.x)], red_buf0[(i32(threadIdx.x) + 8i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 4i) {
    red_buf0[i32(threadIdx.x)] = max(red_buf0[i32(threadIdx.x)], red_buf0[(i32(threadIdx.x) + 4i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 2i) {
    red_buf0[i32(threadIdx.x)] = max(red_buf0[i32(threadIdx.x)], red_buf0[(i32(threadIdx.x) + 2i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 1i) {
    red_buf0[i32(threadIdx.x)] = max(red_buf0[i32(threadIdx.x)], red_buf0[(i32(threadIdx.x) + 1i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) == 0i) {
    temp_max_shared[0i] = red_buf0[0i];
  }
  in_thread_temp_sum_shared[0i] = 0.000000e+00f;
  workgroupBarrier();
  var condval_128 : f32;
  if (((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) < podArgs.vocab_size)) {
    var condval_129 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_130 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_130 = (A[((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x))] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_130 = A[((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x))];
}
      condval_129 = exp((condval_130 - temp_max_shared[0i]));
} else {
      var condval_131 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_131 = (A[((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x))] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_131 = A[((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x))];
}
      condval_129 = f32((condval_131 == temp_max_shared[0i]));
}
    condval_128 = condval_129;
} else {
    condval_128 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_128);
  var condval_132 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 64i) < podArgs.vocab_size)) {
    var condval_133 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_134 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_134 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 64i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_134 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 64i)];
}
      condval_133 = exp((condval_134 - temp_max_shared[0i]));
} else {
      var condval_135 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_135 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 64i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_135 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 64i)];
}
      condval_133 = f32((condval_135 == temp_max_shared[0i]));
}
    condval_132 = condval_133;
} else {
    condval_132 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_132);
  var condval_136 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 128i) < podArgs.vocab_size)) {
    var condval_137 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_138 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_138 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 128i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_138 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 128i)];
}
      condval_137 = exp((condval_138 - temp_max_shared[0i]));
} else {
      var condval_139 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_139 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 128i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_139 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 128i)];
}
      condval_137 = f32((condval_139 == temp_max_shared[0i]));
}
    condval_136 = condval_137;
} else {
    condval_136 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_136);
  var condval_140 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 192i) < podArgs.vocab_size)) {
    var condval_141 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_142 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_142 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 192i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_142 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 192i)];
}
      condval_141 = exp((condval_142 - temp_max_shared[0i]));
} else {
      var condval_143 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_143 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 192i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_143 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 192i)];
}
      condval_141 = f32((condval_143 == temp_max_shared[0i]));
}
    condval_140 = condval_141;
} else {
    condval_140 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_140);
  var condval_144 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 256i) < podArgs.vocab_size)) {
    var condval_145 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_146 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_146 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 256i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_146 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 256i)];
}
      condval_145 = exp((condval_146 - temp_max_shared[0i]));
} else {
      var condval_147 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_147 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 256i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_147 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 256i)];
}
      condval_145 = f32((condval_147 == temp_max_shared[0i]));
}
    condval_144 = condval_145;
} else {
    condval_144 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_144);
  var condval_148 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 320i) < podArgs.vocab_size)) {
    var condval_149 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_150 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_150 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 320i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_150 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 320i)];
}
      condval_149 = exp((condval_150 - temp_max_shared[0i]));
} else {
      var condval_151 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_151 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 320i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_151 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 320i)];
}
      condval_149 = f32((condval_151 == temp_max_shared[0i]));
}
    condval_148 = condval_149;
} else {
    condval_148 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_148);
  var condval_152 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 384i) < podArgs.vocab_size)) {
    var condval_153 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_154 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_154 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 384i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_154 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 384i)];
}
      condval_153 = exp((condval_154 - temp_max_shared[0i]));
} else {
      var condval_155 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_155 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 384i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_155 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 384i)];
}
      condval_153 = f32((condval_155 == temp_max_shared[0i]));
}
    condval_152 = condval_153;
} else {
    condval_152 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_152);
  var condval_156 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 448i) < podArgs.vocab_size)) {
    var condval_157 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_158 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_158 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 448i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_158 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 448i)];
}
      condval_157 = exp((condval_158 - temp_max_shared[0i]));
} else {
      var condval_159 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_159 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 448i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_159 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 448i)];
}
      condval_157 = f32((condval_159 == temp_max_shared[0i]));
}
    condval_156 = condval_157;
} else {
    condval_156 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_156);
  var condval_160 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 512i) < podArgs.vocab_size)) {
    var condval_161 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_162 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_162 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 512i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_162 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 512i)];
}
      condval_161 = exp((condval_162 - temp_max_shared[0i]));
} else {
      var condval_163 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_163 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 512i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_163 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 512i)];
}
      condval_161 = f32((condval_163 == temp_max_shared[0i]));
}
    condval_160 = condval_161;
} else {
    condval_160 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_160);
  var condval_164 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 576i) < podArgs.vocab_size)) {
    var condval_165 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_166 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_166 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 576i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_166 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 576i)];
}
      condval_165 = exp((condval_166 - temp_max_shared[0i]));
} else {
      var condval_167 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_167 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 576i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_167 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 576i)];
}
      condval_165 = f32((condval_167 == temp_max_shared[0i]));
}
    condval_164 = condval_165;
} else {
    condval_164 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_164);
  var condval_168 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 640i) < podArgs.vocab_size)) {
    var condval_169 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_170 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_170 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 640i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_170 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 640i)];
}
      condval_169 = exp((condval_170 - temp_max_shared[0i]));
} else {
      var condval_171 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_171 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 640i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_171 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 640i)];
}
      condval_169 = f32((condval_171 == temp_max_shared[0i]));
}
    condval_168 = condval_169;
} else {
    condval_168 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_168);
  var condval_172 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 704i) < podArgs.vocab_size)) {
    var condval_173 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_174 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_174 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 704i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_174 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 704i)];
}
      condval_173 = exp((condval_174 - temp_max_shared[0i]));
} else {
      var condval_175 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_175 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 704i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_175 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 704i)];
}
      condval_173 = f32((condval_175 == temp_max_shared[0i]));
}
    condval_172 = condval_173;
} else {
    condval_172 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_172);
  var condval_176 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 768i) < podArgs.vocab_size)) {
    var condval_177 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_178 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_178 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 768i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_178 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 768i)];
}
      condval_177 = exp((condval_178 - temp_max_shared[0i]));
} else {
      var condval_179 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_179 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 768i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_179 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 768i)];
}
      condval_177 = f32((condval_179 == temp_max_shared[0i]));
}
    condval_176 = condval_177;
} else {
    condval_176 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_176);
  var condval_180 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 832i) < podArgs.vocab_size)) {
    var condval_181 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_182 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_182 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 832i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_182 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 832i)];
}
      condval_181 = exp((condval_182 - temp_max_shared[0i]));
} else {
      var condval_183 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_183 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 832i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_183 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 832i)];
}
      condval_181 = f32((condval_183 == temp_max_shared[0i]));
}
    condval_180 = condval_181;
} else {
    condval_180 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_180);
  var condval_184 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 896i) < podArgs.vocab_size)) {
    var condval_185 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_186 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_186 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 896i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_186 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 896i)];
}
      condval_185 = exp((condval_186 - temp_max_shared[0i]));
} else {
      var condval_187 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_187 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 896i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_187 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 896i)];
}
      condval_185 = f32((condval_187 == temp_max_shared[0i]));
}
    condval_184 = condval_185;
} else {
    condval_184 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_184);
  var condval_188 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 960i) < podArgs.vocab_size)) {
    var condval_189 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_190 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_190 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 960i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_190 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 960i)];
}
      condval_189 = exp((condval_190 - temp_max_shared[0i]));
} else {
      var condval_191 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_191 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 960i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_191 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 960i)];
}
      condval_189 = f32((condval_191 == temp_max_shared[0i]));
}
    condval_188 = condval_189;
} else {
    condval_188 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_188);
  var condval_192 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1024i) < podArgs.vocab_size)) {
    var condval_193 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_194 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_194 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1024i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_194 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1024i)];
}
      condval_193 = exp((condval_194 - temp_max_shared[0i]));
} else {
      var condval_195 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_195 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1024i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_195 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1024i)];
}
      condval_193 = f32((condval_195 == temp_max_shared[0i]));
}
    condval_192 = condval_193;
} else {
    condval_192 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_192);
  var condval_196 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1088i) < podArgs.vocab_size)) {
    var condval_197 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_198 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_198 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1088i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_198 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1088i)];
}
      condval_197 = exp((condval_198 - temp_max_shared[0i]));
} else {
      var condval_199 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_199 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1088i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_199 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1088i)];
}
      condval_197 = f32((condval_199 == temp_max_shared[0i]));
}
    condval_196 = condval_197;
} else {
    condval_196 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_196);
  var condval_200 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1152i) < podArgs.vocab_size)) {
    var condval_201 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_202 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_202 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1152i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_202 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1152i)];
}
      condval_201 = exp((condval_202 - temp_max_shared[0i]));
} else {
      var condval_203 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_203 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1152i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_203 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1152i)];
}
      condval_201 = f32((condval_203 == temp_max_shared[0i]));
}
    condval_200 = condval_201;
} else {
    condval_200 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_200);
  var condval_204 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1216i) < podArgs.vocab_size)) {
    var condval_205 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_206 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_206 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1216i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_206 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1216i)];
}
      condval_205 = exp((condval_206 - temp_max_shared[0i]));
} else {
      var condval_207 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_207 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1216i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_207 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1216i)];
}
      condval_205 = f32((condval_207 == temp_max_shared[0i]));
}
    condval_204 = condval_205;
} else {
    condval_204 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_204);
  var condval_208 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1280i) < podArgs.vocab_size)) {
    var condval_209 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_210 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_210 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1280i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_210 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1280i)];
}
      condval_209 = exp((condval_210 - temp_max_shared[0i]));
} else {
      var condval_211 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_211 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1280i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_211 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1280i)];
}
      condval_209 = f32((condval_211 == temp_max_shared[0i]));
}
    condval_208 = condval_209;
} else {
    condval_208 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_208);
  var condval_212 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1344i) < podArgs.vocab_size)) {
    var condval_213 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_214 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_214 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1344i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_214 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1344i)];
}
      condval_213 = exp((condval_214 - temp_max_shared[0i]));
} else {
      var condval_215 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_215 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1344i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_215 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1344i)];
}
      condval_213 = f32((condval_215 == temp_max_shared[0i]));
}
    condval_212 = condval_213;
} else {
    condval_212 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_212);
  var condval_216 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1408i) < podArgs.vocab_size)) {
    var condval_217 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_218 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_218 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1408i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_218 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1408i)];
}
      condval_217 = exp((condval_218 - temp_max_shared[0i]));
} else {
      var condval_219 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_219 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1408i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_219 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1408i)];
}
      condval_217 = f32((condval_219 == temp_max_shared[0i]));
}
    condval_216 = condval_217;
} else {
    condval_216 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_216);
  var condval_220 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1472i) < podArgs.vocab_size)) {
    var condval_221 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_222 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_222 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1472i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_222 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1472i)];
}
      condval_221 = exp((condval_222 - temp_max_shared[0i]));
} else {
      var condval_223 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_223 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1472i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_223 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1472i)];
}
      condval_221 = f32((condval_223 == temp_max_shared[0i]));
}
    condval_220 = condval_221;
} else {
    condval_220 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_220);
  var condval_224 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1536i) < podArgs.vocab_size)) {
    var condval_225 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_226 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_226 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1536i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_226 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1536i)];
}
      condval_225 = exp((condval_226 - temp_max_shared[0i]));
} else {
      var condval_227 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_227 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1536i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_227 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1536i)];
}
      condval_225 = f32((condval_227 == temp_max_shared[0i]));
}
    condval_224 = condval_225;
} else {
    condval_224 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_224);
  var condval_228 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1600i) < podArgs.vocab_size)) {
    var condval_229 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_230 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_230 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1600i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_230 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1600i)];
}
      condval_229 = exp((condval_230 - temp_max_shared[0i]));
} else {
      var condval_231 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_231 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1600i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_231 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1600i)];
}
      condval_229 = f32((condval_231 == temp_max_shared[0i]));
}
    condval_228 = condval_229;
} else {
    condval_228 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_228);
  var condval_232 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1664i) < podArgs.vocab_size)) {
    var condval_233 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_234 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_234 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1664i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_234 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1664i)];
}
      condval_233 = exp((condval_234 - temp_max_shared[0i]));
} else {
      var condval_235 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_235 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1664i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_235 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1664i)];
}
      condval_233 = f32((condval_235 == temp_max_shared[0i]));
}
    condval_232 = condval_233;
} else {
    condval_232 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_232);
  var condval_236 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1728i) < podArgs.vocab_size)) {
    var condval_237 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_238 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_238 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1728i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_238 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1728i)];
}
      condval_237 = exp((condval_238 - temp_max_shared[0i]));
} else {
      var condval_239 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_239 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1728i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_239 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1728i)];
}
      condval_237 = f32((condval_239 == temp_max_shared[0i]));
}
    condval_236 = condval_237;
} else {
    condval_236 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_236);
  var condval_240 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1792i) < podArgs.vocab_size)) {
    var condval_241 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_242 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_242 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1792i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_242 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1792i)];
}
      condval_241 = exp((condval_242 - temp_max_shared[0i]));
} else {
      var condval_243 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_243 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1792i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_243 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1792i)];
}
      condval_241 = f32((condval_243 == temp_max_shared[0i]));
}
    condval_240 = condval_241;
} else {
    condval_240 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_240);
  var condval_244 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1856i) < podArgs.vocab_size)) {
    var condval_245 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_246 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_246 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1856i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_246 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1856i)];
}
      condval_245 = exp((condval_246 - temp_max_shared[0i]));
} else {
      var condval_247 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_247 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1856i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_247 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1856i)];
}
      condval_245 = f32((condval_247 == temp_max_shared[0i]));
}
    condval_244 = condval_245;
} else {
    condval_244 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_244);
  var condval_248 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1920i) < podArgs.vocab_size)) {
    var condval_249 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_250 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_250 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1920i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_250 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1920i)];
}
      condval_249 = exp((condval_250 - temp_max_shared[0i]));
} else {
      var condval_251 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_251 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1920i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_251 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1920i)];
}
      condval_249 = f32((condval_251 == temp_max_shared[0i]));
}
    condval_248 = condval_249;
} else {
    condval_248 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_248);
  var condval_252 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 1984i) < podArgs.vocab_size)) {
    var condval_253 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_254 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_254 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1984i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_254 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1984i)];
}
      condval_253 = exp((condval_254 - temp_max_shared[0i]));
} else {
      var condval_255 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_255 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1984i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_255 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 1984i)];
}
      condval_253 = f32((condval_255 == temp_max_shared[0i]));
}
    condval_252 = condval_253;
} else {
    condval_252 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_252);
  var condval_256 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2048i) < podArgs.vocab_size)) {
    var condval_257 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_258 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_258 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2048i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_258 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2048i)];
}
      condval_257 = exp((condval_258 - temp_max_shared[0i]));
} else {
      var condval_259 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_259 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2048i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_259 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2048i)];
}
      condval_257 = f32((condval_259 == temp_max_shared[0i]));
}
    condval_256 = condval_257;
} else {
    condval_256 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_256);
  var condval_260 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2112i) < podArgs.vocab_size)) {
    var condval_261 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_262 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_262 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2112i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_262 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2112i)];
}
      condval_261 = exp((condval_262 - temp_max_shared[0i]));
} else {
      var condval_263 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_263 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2112i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_263 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2112i)];
}
      condval_261 = f32((condval_263 == temp_max_shared[0i]));
}
    condval_260 = condval_261;
} else {
    condval_260 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_260);
  var condval_264 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2176i) < podArgs.vocab_size)) {
    var condval_265 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_266 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_266 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2176i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_266 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2176i)];
}
      condval_265 = exp((condval_266 - temp_max_shared[0i]));
} else {
      var condval_267 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_267 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2176i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_267 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2176i)];
}
      condval_265 = f32((condval_267 == temp_max_shared[0i]));
}
    condval_264 = condval_265;
} else {
    condval_264 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_264);
  var condval_268 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2240i) < podArgs.vocab_size)) {
    var condval_269 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_270 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_270 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2240i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_270 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2240i)];
}
      condval_269 = exp((condval_270 - temp_max_shared[0i]));
} else {
      var condval_271 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_271 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2240i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_271 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2240i)];
}
      condval_269 = f32((condval_271 == temp_max_shared[0i]));
}
    condval_268 = condval_269;
} else {
    condval_268 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_268);
  var condval_272 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2304i) < podArgs.vocab_size)) {
    var condval_273 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_274 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_274 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2304i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_274 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2304i)];
}
      condval_273 = exp((condval_274 - temp_max_shared[0i]));
} else {
      var condval_275 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_275 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2304i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_275 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2304i)];
}
      condval_273 = f32((condval_275 == temp_max_shared[0i]));
}
    condval_272 = condval_273;
} else {
    condval_272 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_272);
  var condval_276 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2368i) < podArgs.vocab_size)) {
    var condval_277 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_278 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_278 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2368i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_278 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2368i)];
}
      condval_277 = exp((condval_278 - temp_max_shared[0i]));
} else {
      var condval_279 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_279 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2368i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_279 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2368i)];
}
      condval_277 = f32((condval_279 == temp_max_shared[0i]));
}
    condval_276 = condval_277;
} else {
    condval_276 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_276);
  var condval_280 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2432i) < podArgs.vocab_size)) {
    var condval_281 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_282 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_282 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2432i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_282 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2432i)];
}
      condval_281 = exp((condval_282 - temp_max_shared[0i]));
} else {
      var condval_283 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_283 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2432i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_283 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2432i)];
}
      condval_281 = f32((condval_283 == temp_max_shared[0i]));
}
    condval_280 = condval_281;
} else {
    condval_280 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_280);
  var condval_284 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2496i) < podArgs.vocab_size)) {
    var condval_285 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_286 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_286 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2496i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_286 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2496i)];
}
      condval_285 = exp((condval_286 - temp_max_shared[0i]));
} else {
      var condval_287 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_287 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2496i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_287 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2496i)];
}
      condval_285 = f32((condval_287 == temp_max_shared[0i]));
}
    condval_284 = condval_285;
} else {
    condval_284 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_284);
  var condval_288 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2560i) < podArgs.vocab_size)) {
    var condval_289 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_290 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_290 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2560i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_290 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2560i)];
}
      condval_289 = exp((condval_290 - temp_max_shared[0i]));
} else {
      var condval_291 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_291 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2560i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_291 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2560i)];
}
      condval_289 = f32((condval_291 == temp_max_shared[0i]));
}
    condval_288 = condval_289;
} else {
    condval_288 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_288);
  var condval_292 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2624i) < podArgs.vocab_size)) {
    var condval_293 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_294 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_294 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2624i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_294 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2624i)];
}
      condval_293 = exp((condval_294 - temp_max_shared[0i]));
} else {
      var condval_295 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_295 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2624i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_295 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2624i)];
}
      condval_293 = f32((condval_295 == temp_max_shared[0i]));
}
    condval_292 = condval_293;
} else {
    condval_292 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_292);
  var condval_296 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2688i) < podArgs.vocab_size)) {
    var condval_297 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_298 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_298 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2688i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_298 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2688i)];
}
      condval_297 = exp((condval_298 - temp_max_shared[0i]));
} else {
      var condval_299 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_299 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2688i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_299 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2688i)];
}
      condval_297 = f32((condval_299 == temp_max_shared[0i]));
}
    condval_296 = condval_297;
} else {
    condval_296 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_296);
  var condval_300 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2752i) < podArgs.vocab_size)) {
    var condval_301 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_302 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_302 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2752i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_302 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2752i)];
}
      condval_301 = exp((condval_302 - temp_max_shared[0i]));
} else {
      var condval_303 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_303 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2752i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_303 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2752i)];
}
      condval_301 = f32((condval_303 == temp_max_shared[0i]));
}
    condval_300 = condval_301;
} else {
    condval_300 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_300);
  var condval_304 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2816i) < podArgs.vocab_size)) {
    var condval_305 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_306 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_306 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2816i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_306 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2816i)];
}
      condval_305 = exp((condval_306 - temp_max_shared[0i]));
} else {
      var condval_307 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_307 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2816i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_307 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2816i)];
}
      condval_305 = f32((condval_307 == temp_max_shared[0i]));
}
    condval_304 = condval_305;
} else {
    condval_304 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_304);
  var condval_308 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2880i) < podArgs.vocab_size)) {
    var condval_309 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_310 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_310 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2880i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_310 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2880i)];
}
      condval_309 = exp((condval_310 - temp_max_shared[0i]));
} else {
      var condval_311 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_311 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2880i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_311 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2880i)];
}
      condval_309 = f32((condval_311 == temp_max_shared[0i]));
}
    condval_308 = condval_309;
} else {
    condval_308 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_308);
  var condval_312 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 2944i) < podArgs.vocab_size)) {
    var condval_313 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_314 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_314 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2944i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_314 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2944i)];
}
      condval_313 = exp((condval_314 - temp_max_shared[0i]));
} else {
      var condval_315 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_315 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2944i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_315 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 2944i)];
}
      condval_313 = f32((condval_315 == temp_max_shared[0i]));
}
    condval_312 = condval_313;
} else {
    condval_312 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_312);
  var condval_316 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3008i) < podArgs.vocab_size)) {
    var condval_317 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_318 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_318 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3008i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_318 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3008i)];
}
      condval_317 = exp((condval_318 - temp_max_shared[0i]));
} else {
      var condval_319 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_319 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3008i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_319 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3008i)];
}
      condval_317 = f32((condval_319 == temp_max_shared[0i]));
}
    condval_316 = condval_317;
} else {
    condval_316 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_316);
  var condval_320 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3072i) < podArgs.vocab_size)) {
    var condval_321 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_322 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_322 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3072i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_322 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3072i)];
}
      condval_321 = exp((condval_322 - temp_max_shared[0i]));
} else {
      var condval_323 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_323 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3072i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_323 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3072i)];
}
      condval_321 = f32((condval_323 == temp_max_shared[0i]));
}
    condval_320 = condval_321;
} else {
    condval_320 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_320);
  var condval_324 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3136i) < podArgs.vocab_size)) {
    var condval_325 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_326 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_326 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3136i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_326 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3136i)];
}
      condval_325 = exp((condval_326 - temp_max_shared[0i]));
} else {
      var condval_327 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_327 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3136i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_327 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3136i)];
}
      condval_325 = f32((condval_327 == temp_max_shared[0i]));
}
    condval_324 = condval_325;
} else {
    condval_324 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_324);
  var condval_328 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3200i) < podArgs.vocab_size)) {
    var condval_329 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_330 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_330 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3200i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_330 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3200i)];
}
      condval_329 = exp((condval_330 - temp_max_shared[0i]));
} else {
      var condval_331 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_331 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3200i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_331 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3200i)];
}
      condval_329 = f32((condval_331 == temp_max_shared[0i]));
}
    condval_328 = condval_329;
} else {
    condval_328 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_328);
  var condval_332 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3264i) < podArgs.vocab_size)) {
    var condval_333 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_334 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_334 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3264i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_334 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3264i)];
}
      condval_333 = exp((condval_334 - temp_max_shared[0i]));
} else {
      var condval_335 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_335 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3264i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_335 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3264i)];
}
      condval_333 = f32((condval_335 == temp_max_shared[0i]));
}
    condval_332 = condval_333;
} else {
    condval_332 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_332);
  var condval_336 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3328i) < podArgs.vocab_size)) {
    var condval_337 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_338 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_338 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3328i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_338 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3328i)];
}
      condval_337 = exp((condval_338 - temp_max_shared[0i]));
} else {
      var condval_339 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_339 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3328i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_339 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3328i)];
}
      condval_337 = f32((condval_339 == temp_max_shared[0i]));
}
    condval_336 = condval_337;
} else {
    condval_336 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_336);
  var condval_340 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3392i) < podArgs.vocab_size)) {
    var condval_341 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_342 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_342 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3392i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_342 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3392i)];
}
      condval_341 = exp((condval_342 - temp_max_shared[0i]));
} else {
      var condval_343 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_343 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3392i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_343 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3392i)];
}
      condval_341 = f32((condval_343 == temp_max_shared[0i]));
}
    condval_340 = condval_341;
} else {
    condval_340 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_340);
  var condval_344 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3456i) < podArgs.vocab_size)) {
    var condval_345 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_346 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_346 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3456i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_346 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3456i)];
}
      condval_345 = exp((condval_346 - temp_max_shared[0i]));
} else {
      var condval_347 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_347 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3456i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_347 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3456i)];
}
      condval_345 = f32((condval_347 == temp_max_shared[0i]));
}
    condval_344 = condval_345;
} else {
    condval_344 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_344);
  var condval_348 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3520i) < podArgs.vocab_size)) {
    var condval_349 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_350 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_350 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3520i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_350 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3520i)];
}
      condval_349 = exp((condval_350 - temp_max_shared[0i]));
} else {
      var condval_351 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_351 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3520i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_351 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3520i)];
}
      condval_349 = f32((condval_351 == temp_max_shared[0i]));
}
    condval_348 = condval_349;
} else {
    condval_348 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_348);
  var condval_352 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3584i) < podArgs.vocab_size)) {
    var condval_353 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_354 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_354 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3584i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_354 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3584i)];
}
      condval_353 = exp((condval_354 - temp_max_shared[0i]));
} else {
      var condval_355 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_355 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3584i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_355 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3584i)];
}
      condval_353 = f32((condval_355 == temp_max_shared[0i]));
}
    condval_352 = condval_353;
} else {
    condval_352 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_352);
  var condval_356 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3648i) < podArgs.vocab_size)) {
    var condval_357 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_358 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_358 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3648i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_358 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3648i)];
}
      condval_357 = exp((condval_358 - temp_max_shared[0i]));
} else {
      var condval_359 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_359 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3648i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_359 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3648i)];
}
      condval_357 = f32((condval_359 == temp_max_shared[0i]));
}
    condval_356 = condval_357;
} else {
    condval_356 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_356);
  var condval_360 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3712i) < podArgs.vocab_size)) {
    var condval_361 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_362 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_362 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3712i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_362 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3712i)];
}
      condval_361 = exp((condval_362 - temp_max_shared[0i]));
} else {
      var condval_363 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_363 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3712i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_363 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3712i)];
}
      condval_361 = f32((condval_363 == temp_max_shared[0i]));
}
    condval_360 = condval_361;
} else {
    condval_360 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_360);
  var condval_364 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3776i) < podArgs.vocab_size)) {
    var condval_365 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_366 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_366 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3776i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_366 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3776i)];
}
      condval_365 = exp((condval_366 - temp_max_shared[0i]));
} else {
      var condval_367 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_367 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3776i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_367 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3776i)];
}
      condval_365 = f32((condval_367 == temp_max_shared[0i]));
}
    condval_364 = condval_365;
} else {
    condval_364 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_364);
  var condval_368 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3840i) < podArgs.vocab_size)) {
    var condval_369 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_370 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_370 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3840i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_370 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3840i)];
}
      condval_369 = exp((condval_370 - temp_max_shared[0i]));
} else {
      var condval_371 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_371 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3840i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_371 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3840i)];
}
      condval_369 = f32((condval_371 == temp_max_shared[0i]));
}
    condval_368 = condval_369;
} else {
    condval_368 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_368);
  var condval_372 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3904i) < podArgs.vocab_size)) {
    var condval_373 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_374 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_374 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3904i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_374 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3904i)];
}
      condval_373 = exp((condval_374 - temp_max_shared[0i]));
} else {
      var condval_375 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_375 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3904i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_375 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3904i)];
}
      condval_373 = f32((condval_375 == temp_max_shared[0i]));
}
    condval_372 = condval_373;
} else {
    condval_372 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_372);
  var condval_376 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 3968i) < podArgs.vocab_size)) {
    var condval_377 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_378 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_378 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3968i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_378 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3968i)];
}
      condval_377 = exp((condval_378 - temp_max_shared[0i]));
} else {
      var condval_379 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_379 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3968i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_379 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 3968i)];
}
      condval_377 = f32((condval_379 == temp_max_shared[0i]));
}
    condval_376 = condval_377;
} else {
    condval_376 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_376);
  var condval_380 : f32;
  if ((((((v__1 % podArgs.num_chunks) * 4096i) + i32(threadIdx.x)) + 4032i) < podArgs.vocab_size)) {
    var condval_381 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      var condval_382 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_382 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 4032i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_382 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 4032i)];
}
      condval_381 = exp((condval_382 - temp_max_shared[0i]));
} else {
      var condval_383 : f32;
      if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
        condval_383 = (A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 4032i)] / temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)]);
} else {
        condval_383 = A[(((((v__1 % podArgs.num_chunks) * 4096i) + (((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks) * podArgs.vocab_size)) + i32(threadIdx.x)) + 4032i)];
}
      condval_381 = f32((condval_383 == temp_max_shared[0i]));
}
    condval_380 = condval_381;
} else {
    condval_380 = 0.000000e+00f;
}
  in_thread_temp_sum_shared[0i] = (in_thread_temp_sum_shared[0i] + condval_380);
  workgroupBarrier();
  red_buf0_1[i32(threadIdx.x)] = in_thread_temp_sum_shared[0i];
  workgroupBarrier();
  if (i32(threadIdx.x) < 32i) {
    red_buf0_1[i32(threadIdx.x)] = (red_buf0_1[i32(threadIdx.x)] + red_buf0_1[(i32(threadIdx.x) + 32i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 16i) {
    red_buf0_1[i32(threadIdx.x)] = (red_buf0_1[i32(threadIdx.x)] + red_buf0_1[(i32(threadIdx.x) + 16i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 8i) {
    red_buf0_1[i32(threadIdx.x)] = (red_buf0_1[i32(threadIdx.x)] + red_buf0_1[(i32(threadIdx.x) + 8i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 4i) {
    red_buf0_1[i32(threadIdx.x)] = (red_buf0_1[i32(threadIdx.x)] + red_buf0_1[(i32(threadIdx.x) + 4i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 2i) {
    red_buf0_1[i32(threadIdx.x)] = (red_buf0_1[i32(threadIdx.x)] + red_buf0_1[(i32(threadIdx.x) + 2i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 1i) {
    red_buf0_1[i32(threadIdx.x)] = (red_buf0_1[i32(threadIdx.x)] + red_buf0_1[(i32(threadIdx.x) + 1i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) == 0i) {
    temp_sum_shared[0i] = red_buf0_1[0i];
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 1i) {
    var condval_384 : f32;
    if ((1.000000e-05f < temperature[((v__1 % (podArgs.num_chunks * podArgs.batch_size)) / podArgs.num_chunks)])) {
      condval_384 = log(temp_sum_shared[0i]);
} else {
      condval_384 = temp_sum_shared[0i];
}
    chunked_sum[v__1] = condval_384;
    chunked_max[v__1] = temp_max_shared[0i];
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1905
; Schema: 0
               OpCapability Shader
        %116 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel "fused_fused_dequantize2_fused_NT_matmul11_add5_kernel" %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_workgroup_id_Input %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_num_workgroups_Input %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_workgroup_id_Input "fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_num_workgroups_Input "fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_local_invocation_id_Input "fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_inner "fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %NT_matmul_rf_local "NT_matmul_rf_local"
               OpName %lv1356_local "lv1356_local"
               OpName %NT_matmul_rf_local_1 "NT_matmul_rf_local_1"
               OpName %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel "fused_fused_dequantize2_fused_NT_matmul11_add5_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize2_fused_NT_matmul11_add5_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_1 ArrayStride 4
               OpDecorate %_arr_uint_uint_1 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointe
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2298
; Schema: 0
               OpCapability Shader
        %104 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1 "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1" %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1_workgroup_id_Input %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1_num_workgroups_Input %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1 LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1_workgroup_id_Input "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1_workgroup_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1_num_workgroups_Input "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1_num_workgroups_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1_local_invocation_id_Input "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1_local_invocation_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1_inner "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1 "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_1"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize2_fused_NT_matmu
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 3787
; Schema: 0
               OpCapability Shader
        %155 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2 "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2" %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_workgroup_id_Input %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_num_workgroups_Input %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2 LocalSize 8 8 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %rms_norm114_reindex_pad_shared "rms_norm114_reindex_pad_shared"
               OpName %dequantize_reindex_shared "dequantize_reindex_shared"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_workgroup_id_Input "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_workgroup_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_num_workgroups_Input "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_num_workgroups_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_local_invocation_id_Input "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_local_invocation_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_inner "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_reindex_pad_local "NT_matmul_intermediate_reindex_pad_local"
               OpName %v__1 "v__1"
               OpName %var_1 "var_1"
               OpName %ax3_0 "ax3_0"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2 "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_256 ArrayStride 4
               OpDecorate %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_2_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_16 A
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 3013
; Schema: 0
               OpCapability Shader
        %133 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %softmax_with_chunked_sum_kernel "softmax_with_chunked_sum_kernel" %softmax_with_chunked_sum_kernel_workgroup_id_Input %softmax_with_chunked_sum_kernel_num_workgroups_Input %softmax_with_chunked_sum_kernel_local_invocation_id_Input
               OpExecutionMode %softmax_with_chunked_sum_kernel LocalSize 32 8 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "num_chunks"
               OpMemberName %PODArgs 2 "vocab_size"
               OpMemberName %PODArgs 3 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %temp_max_shared "temp_max_shared"
               OpName %red_buf0_1 "red_buf0_1"
               OpName %temp_sum_shared "temp_sum_shared"
               OpName %softmax_with_chunked_sum_kernel_workgroup_id_Input "softmax_with_chunked_sum_kernel_workgroup_id_Input"
               OpName %softmax_with_chunked_sum_kernel_num_workgroups_Input "softmax_with_chunked_sum_kernel_num_workgroups_Input"
               OpName %softmax_with_chunked_sum_kernel_local_invocation_id_Input "softmax_with_chunked_sum_kernel_local_invocation_id_Input"
               OpName %softmax_with_chunked_sum_kernel_inner "softmax_with_chunked_sum_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %in_thread_temp_max_shared "in_thread_temp_max_shared"
               OpName %in_thread_temp_sum_shared "in_thread_temp_sum_shared"
               OpName %ax0_0 "ax0_0"
               OpName %ax0_0_1 "ax0_0_1"
               OpName %condval "condval"
               OpName %condval_1 "condval_1"
               OpName %condval_2 "condval_2"
               OpName %condval_3 "condval_3"
               OpName %condval_4 "condval_4"
               OpName %condval_5 "condval_5"
               OpName %condval_6 "condval_6"
               OpName %condval_7 "condval_7"
               OpName %condval_8 "condval_8"
               OpName %condval_9 "condval_9"
               OpName %condval_10 "condval_10"
               OpName %condval_11 "condval_11"
               OpName %condval_12 "condval_12"
               OpName %condval_13 "condval_13"
               OpName %condval_14 "condval_14"
               OpName %condval_15 "condval_15"
               OpName %condval_16 "condval_16"
               OpName %tint_mod_i32 "tint_mod_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs_0 "lhs"
               OpName %rhs_0 "rhs"
               OpName %softmax_with_chunked_sum_kernel "softmax_with_chunked_sum_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %12 DescriptorSet 0
               OpDecorate %12 Binding 3
               OpDecorate %12 Coherent
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %15 DescriptorSet 0
               OpDecorate %15 Binding 4
               OpDecorate %15 NonWritable
               OpMemberDecorate %PODArgs 0 O
// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv460 : array<u32>;
@group(0) @binding(2) var<storage, read> lv461 : array<f32>;
@group(0) @binding(3) var<storage, read> lv791 : array<f32>;
@group(0) @binding(4) var<storage, read> lv792 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 8>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 8>;
  var NT_matmul_intermediate_pad_local : array<f32, 8>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 4i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 37i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>0u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[9i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>4u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[10i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>8u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[11i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>12u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[12i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>16u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[13i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>20u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[14i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>24u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[15i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>28u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    if ((i32(blockIdx.y) * 4i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[(((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[(((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 4i) + 1i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18944i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18945i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18946i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18947i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18948i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18949i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18950i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18951i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18944i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18945i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18946i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18947i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18948i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18949i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18950i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18951i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
    if (((i32(blockIdx.y) * 4i) + 2i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37888i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37889i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37890i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37891i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37892i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37893i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37894i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37895i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37888i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37889i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37890i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37891i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37892i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37893i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37894i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37895i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[5i]);
    }
    if (((i32(blockIdx.y) * 4i) + 3i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56832i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56833i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56834i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56835i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56836i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56837i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56838i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56839i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56832i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56833i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56834i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56835i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56836i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56837i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56838i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv792[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56839i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[7i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 4i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 4i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.seq_len + 3i)>>2u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 4i) + ax0) < podArgs.seq_len)) {
        T_add[((((i32(blockIdx.y) * 14336i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)] = (NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)] + lv791[((((i32(blockIdx.y) * 14336i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)]);
      }
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_split1_silu1_multiply1_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_multiply : array<f32>;
@group(0) @binding(1) var<storage, read> lv115 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn fused_split1_silu1_multiply1_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_multiply[((v__1 * 256i) + i32(threadIdx.x))] = ((lv115[((((v__1 / 74i) * 37888i) + ((v__1 % 74i) * 256i)) + i32(threadIdx.x))] * (1.000000e+00f / (1.000000e+00f + exp((0.000000e+00f - lv115[((((v__1 / 74i) * 37888i) + ((v__1 % 74i) * 256i)) + i32(threadIdx.x))]))))) * lv115[(((((v__1 / 74i) * 37888i) + ((v__1 % 74i) * 256i)) + i32(threadIdx.x)) + 18944i)]);
}



// Dumped WGSL:
//----------------------------------------
// Function: reshape7_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_reshape : array<f32>;
@group(0) @binding(1) var<storage, read> reshape226 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn reshape7_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_reshape[((v__1 * 256i) + i32(threadIdx.x))] = reshape226[((v__1 * 256i) + i32(threadIdx.x))];
}



// Dumped WGSL:
//----------------------------------------
// Function: apply_logit_bias_inplace_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read> logit_bias : array<f32>;
@group(0) @binding(1) var<storage, read_write> logits : array<f32>;
@group(0) @binding(2) var<storage, read> pos2seq_id : array<i32>;
@group(0) @binding(3) var<storage, read> token_ids : array<i32>;

struct PODArgs {
  batch_size: i32,
  num_token: i32,
  vocab_size: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn apply_logit_bias_inplace_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  if (((v__1 * 256i) + i32(threadIdx.x)) < podArgs.num_token) {
    logits[((pos2seq_id[((v__1 * 256i) + i32(threadIdx.x))] * podArgs.vocab_size) + token_ids[((v__1 * 256i) + i32(threadIdx.x))])] = (logits[((pos2seq_id[((v__1 * 256i) + i32(threadIdx.x))] * podArgs.vocab_size) + token_ids[((v__1 * 256i) + i32(threadIdx.x))])] + logit_bias[((v__1 * 256i) + i32(threadIdx.x))]);
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: take_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_take : array<f32>;
@group(0) @binding(1) var<storage, read> logit_positions : array<i32>;
@group(0) @binding(2) var<storage, read> rms_norm170 : array<f32>;

struct PODArgs {
  batch_size: i32,
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(3) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn take_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_take[((v__1 * 256i) + i32(threadIdx.x))] = rms_norm170[(((logit_positions[(v__1 / 14i)] * 3584i) + ((v__1 % 14i) * 256i)) + i32(threadIdx.x))];
}



// Dumped WGSL:
//----------------------------------------
// Function: index_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> index : array<f32>;
@group(0) @binding(1) var<storage, read> rms_norm56 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn index_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  index[((v__1 * 256i) + i32(threadIdx.x))] = rms_norm56[((((podArgs.seq_len * 3584i) + (v__1 * 256i)) + i32(threadIdx.x)) - 3584i)];
}



// Dumped WGSL:
//----------------------------------------
// Function: reshape5_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_reshape : array<f32>;
@group(0) @binding(1) var<storage, read> reshape224 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn reshape5_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_reshape[((v__1 * 256i) + i32(threadIdx.x))] = reshape224[((v__1 * 256i) + i32(threadIdx.x))];
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 68
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %reshape7_kernel "reshape7_kernel" %reshape7_kernel_workgroup_id_Input %reshape7_kernel_num_workgroups_Input %reshape7_kernel_local_invocation_id_Input
               OpExecutionMode %reshape7_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %reshape7_kernel_workgroup_id_Input "reshape7_kernel_workgroup_id_Input"
               OpName %reshape7_kernel_num_workgroups_Input "reshape7_kernel_num_workgroups_Input"
               OpName %reshape7_kernel_local_invocation_id_Input "reshape7_kernel_local_invocation_id_Input"
               OpName %reshape7_kernel_inner "reshape7_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %reshape7_kernel "reshape7_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %reshape7_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %reshape7_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %reshape7_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%reshape7_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%reshape7_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%reshape7_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %25 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
         %62 = OpTypeFunction %void
%reshape7_kernel_inner = OpFunction %void None %25
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %26 = OpLabel
         %27 = OpCompositeExtract %uint %blockIdx 2
         %28 = OpCompositeExtract %uint %gridDim 0
         %29 = OpIMul %uint %27 %28
         %30 = OpCompositeExtract %uint %blockIdx 0
         %31 = OpIAdd %uint %29 %30
         %32 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_1
         %36 = OpLoad %uint %32 None
         %37 = OpUGreaterThan %bool %31 %36
               OpSelectionMerge %39 None
               OpBranchConditional %37 %40 %39
         %40 = OpLabel
               OpReturn
         %39 = OpLabel
         %41 = OpCompositeExtract %uint %blockIdx 2
         %42 = OpCompositeExtract %uint %gridDim 0
         %43 = OpIMul %uint %41 %42
         %44 = OpCompositeExtract %uint %blockIdx 0
         %45 = OpIAdd %uint %43 %44
       %v__1 = OpBitcast %int %45
         %47 = OpIMul %int %v__1 %int_256
         %49 = OpCompositeExtract %uint %threadIdx 0
         %50 = OpBitcast %int %49
         %51 = OpIAdd %int %47 %50
         %52 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %51
         %54 = OpIMul %int %v__1 %int_256
         %55 = OpCompositeExtract %uint %threadIdx 0
         %56 = OpBitcast %int %55
         %57 = OpIAdd %int %54 %56
         %58 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %57
         %60 = OpLoad %float %58 None
               OpStore %52 %60 None
               OpReturn
               OpFunctionEnd
%reshape7_kernel = OpFunction %void None %62
         %63 = OpLabel
         %64 = OpLoad %v3uint %reshape7_kernel_workgroup_id_Input None
         %65 = OpLoad %v3uint %reshape7_kernel_num_workgroups_Input None
         %66 = OpLoad %v3uint %reshape7_kernel_local_invocation_id_Input None
         %67 = OpFunctionCall %void %reshape7_kernel_inner %64 %65 %66
               OpReturn
               OpFunctionEnd

// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize_NT_matmul4_kernel_1
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv336 : array<u32>;
@group(0) @binding(2) var<storage, read> lv337 : array<f32>;
@group(0) @binding(3) var<storage, read> rms_norm227 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize_NT_matmul4_kernel_1(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 8>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 8>;
  var NT_matmul_intermediate_pad_local : array<f32, 8>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 4i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 4i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 4i) + 1i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
    if (((i32(blockIdx.y) * 4i) + 2i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[5i]);
    }
    if (((i32(blockIdx.y) * 4i) + 3i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm227[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[7i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 4i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 4i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.batch_size + 3i)>>2u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 4i) + ax0) < podArgs.batch_size)) {
        NT_matmul[((((i32(blockIdx.y) * 608256i) + (ax0 * 152064i)) + (v__1 * 2i)) + ax1_fused_2)] = NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)];
      }
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 119
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %apply_logit_bias_inplace_kernel "apply_logit_bias_inplace_kernel" %apply_logit_bias_inplace_kernel_workgroup_id_Input %apply_logit_bias_inplace_kernel_num_workgroups_Input %apply_logit_bias_inplace_kernel_local_invocation_id_Input
               OpExecutionMode %apply_logit_bias_inplace_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "num_token"
               OpMemberName %PODArgs 2 "vocab_size"
               OpMemberName %PODArgs 3 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %apply_logit_bias_inplace_kernel_workgroup_id_Input "apply_logit_bias_inplace_kernel_workgroup_id_Input"
               OpName %apply_logit_bias_inplace_kernel_num_workgroups_Input "apply_logit_bias_inplace_kernel_num_workgroups_Input"
               OpName %apply_logit_bias_inplace_kernel_local_invocation_id_Input "apply_logit_bias_inplace_kernel_local_invocation_id_Input"
               OpName %apply_logit_bias_inplace_kernel_inner "apply_logit_bias_inplace_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %apply_logit_bias_inplace_kernel "apply_logit_bias_inplace_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 Coherent
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %PODArgs 2 Offset 8
               OpMemberDecorate %PODArgs 3 Offset 12
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %apply_logit_bias_inplace_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %apply_logit_bias_inplace_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %apply_logit_bias_inplace_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
%_runtimearr_int = OpTypeRuntimeArray %int
%tint_symbol_5 = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
          %9 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
%tint_symbol_7 = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_tint_symbol_7 = OpTypePointer StorageBuffer %tint_symbol_7
         %14 = OpVariable %_ptr_StorageBuffer_tint_symbol_7 StorageBuffer
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %int %int %uint
%tint_symbol_9 = OpTypeStruct %PODArgs
%_ptr_Uni
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 134
; Schema: 0
               OpCapability Shader
         %82 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_split1_silu1_multiply1_kernel "fused_split1_silu1_multiply1_kernel" %fused_split1_silu1_multiply1_kernel_workgroup_id_Input %fused_split1_silu1_multiply1_kernel_num_workgroups_Input %fused_split1_silu1_multiply1_kernel_local_invocation_id_Input
               OpExecutionMode %fused_split1_silu1_multiply1_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %fused_split1_silu1_multiply1_kernel_workgroup_id_Input "fused_split1_silu1_multiply1_kernel_workgroup_id_Input"
               OpName %fused_split1_silu1_multiply1_kernel_num_workgroups_Input "fused_split1_silu1_multiply1_kernel_num_workgroups_Input"
               OpName %fused_split1_silu1_multiply1_kernel_local_invocation_id_Input "fused_split1_silu1_multiply1_kernel_local_invocation_id_Input"
               OpName %fused_split1_silu1_multiply1_kernel_inner "fused_split1_silu1_multiply1_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_mod_i32 "tint_mod_i32"
               OpName %lhs_0 "lhs"
               OpName %rhs_0 "rhs"
               OpName %fused_split1_silu1_multiply1_kernel "fused_split1_silu1_multiply1_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %fused_split1_silu1_multiply1_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_split1_silu1_multiply1_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_split1_silu1_multiply1_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%fused_split1_silu1_multiply1_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%fused_split1_silu1_multiply1_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%fused_split1_silu1_multiply1_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %25 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
     %int_74 = OpConstant %int 74
  %int_37888 = OpConstant %int 37888
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
    %float_0 = OpConstant %float 0
    %float_1 = OpConstant %float 1
  %int_18944 = OpConstant %int 18944
        %102 = OpTypeFunction %int %int %int
      %int_0 = OpConstant %int 0
%int_n2147483648 = OpConstant %int -2147483648
     %int_n1 = OpConstant %int -1
      %int_1 = OpConstant %int 1
        %128 = OpTypeFunction %void
%fused_split1_silu1_multiply1_kernel_inner = OpFunction %void None %25
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %26 = OpLabel
         %27 = OpCompositeExtract %uint %blockIdx 2
         %28 = OpCompositeExtract %uint %gridDim 0
         %29 = OpIMul %uint %27 %28
         %30 = OpCompositeExtract %uint %blockIdx 0
         %31 = OpIAdd %uint %29 %30
         %32 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_1
         %36 = OpLoad %uint %32 None
         %37 = OpUGreaterThan %bool %31 %36
               OpSelectionMerge %39 None
               OpBranchConditional %37 %40 %39
         %40 = OpLabel
               OpReturn
         %39 = OpLabel
         %41 = OpCompositeExtract %uint %blockIdx 2
         %42 = OpCompositeExtract %uint %gridDim 0
         %43 = OpIMul %uint %41 %42
         %44 = OpCompositeExtract %uint %blockIdx 0
         %45 = OpIAdd %uint %43 %44
       %v__1 = OpBitcast %int %45
         %47 = OpIMul %int %v__1 %int_256
         %49 = OpCompositeExtract %uint %threadIdx 0
         %50 = OpBitcast %int %49
         %51 = OpIAdd %int %47 %50
         %52 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %51
         %54 = OpFunctionCall %int %tint_div_i32 %v__1 %int_74
         %57 = OpIMul %int %54 %int_37888
         %59 = OpFunctionCall %int %tint_mod_i32 %v__1 %int_74
         %61 = OpIMul %int %59 %int_256
         %62 = OpIAdd %int %57 %61
         %63 = OpCompositeExtract %uint %threadIdx 0
         %64 = OpBitcast %int %63
         %65 = OpIAdd %int %62 %64
         %66 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %65
         %68 = OpLoad %float %66 None
         %69 = OpFunctionCall %int %tint_div_i32 %v__1 %int_74
         %70 = OpIMul %int %69 %int_37888
         %71 = OpFunctionCall %int %tint_mod_i32 %v__1 %int_74
         %72 = OpIMul %int %71 %int_256
         %73 = OpIAdd %int %70 %72
         %74 = OpCompositeExtract %uint %threadIdx 0
         %75 = OpBitcast %int %74
         %76 = OpIAdd %int %73 %75
         %77 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %76
         %78 = OpLoad %float %77 None
         %79 = OpFSub %float %float_0 %78
         %81 = OpExtInst %float %82 Exp %79
         %83 = OpFAdd %float %float_1 %81
         %85 = OpFDiv %float %float_1 %83
         %86 = OpFMul %float %68 %85
         %87 = OpFunctionCall %int %tint_div_i32 %v__1 %int_74
         %88 = OpIMul %int %87 %int_37888
         %89 = OpFunctionCall %int %tint_mod_i32 %v__1 %int_74
         %90 = OpIMul %int %89 %int_256
         %91 = OpIAdd %int %88 %90
         %92 = OpCompositeExtract %uint %threadIdx 0
         %93 = OpBitcast %int %92
         %94 = OpIAdd %int %91 %93
         %95 = OpIAdd %int %94 %int_18944
         %97 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %95
         %98 = OpLoad %float %97 None
         %99 = OpFMul %float %86 %98
               OpStore %52 %99 None
               OpReturn
               OpFunctionEnd
%tint_div_i32 = OpFunction %int None %102
        %lhs = OpFunctionParameter %int
        %rhs = OpFunctionParameter %int
        %103 = OpLabel
        %104 = OpIEqual %bool %rhs %int_0
        %106 = OpIEqual %bool %lhs %int_n2147483648
        %108 = OpIEqual %bool %rhs %int_n1
        %110 = OpLogicalAnd %bool %106 %108
        %111 = OpLogicalOr %bool %104 %110
        %112 = OpSelect %int %111 %int_1 %rhs
        %114 = OpSDiv %int %lhs %112
               OpReturnValue %114
               OpFunctionEnd
%tint_mod_i32 = OpFunction %int None %102
      %lhs_0 = OpFunctionParameter %int
      %rhs_0 = OpFunctionParameter %int
        %117 = OpLabel
        %118 = OpIEqual %bool %rhs_0 %int_0
        %119 = OpIEqual %bool %lhs_0 %int_n2147483648
        %120 = OpIEqual %bool %rhs_0 %int_n1
        %121 = OpLogicalAnd %bool %119 %120
        %122 = OpLogicalOr %bool %118 %121
        %123 = OpSelect %int %122 %int_1 %rhs_0
        %124 = OpSDiv %int %lhs_0 %123
        %125 = OpIMul %int %124 %123
        %126 = OpISub %int %lhs_0 %125
               OpReturnValue %126
               OpFunctionEnd
%fused_split1_silu1_multiply1_kernel = OpFunction %void None %128
        %129 = OpLabel
        %130 = OpLoad %v3uint %fused_split1_silu1_multiply1_kernel_workgroup_id_Input None
        %131 = OpLoad %v3uint %fused_split1_silu1_multiply1_kernel_num_workgroups_Input None
        %132 = OpLoad %v3uint %fused_split1_silu1_multiply1_kernel_local_invocation_id_Input None
        %133 = OpFunctionCall %void %fused_split1_silu1_multiply1_kernel_inner %130 %131 %132
               OpReturn
               OpFunctionEnd

/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 110
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %take_kernel "take_kernel" %take_kernel_workgroup_id_Input %take_kernel_num_workgroups_Input %take_kernel_local_invocation_id_Input
               OpExecutionMode %take_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "seq_len"
               OpMemberName %PODArgs 2 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpName %take_kernel_workgroup_id_Input "take_kernel_workgroup_id_Input"
               OpName %take_kernel_num_workgroups_Input "take_kernel_num_workgroups_Input"
               OpName %take_kernel_local_invocation_id_Input "take_kernel_local_invocation_id_Input"
               OpName %take_kernel_inner "take_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_mod_i32 "tint_mod_i32"
               OpName %lhs_0 "lhs"
               OpName %rhs_0 "rhs"
               OpName %take_kernel "take_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %PODArgs 2 Offset 8
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpDecorate %take_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %take_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %take_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
        %int = OpTypeInt 32 1
%_runtimearr_int = OpTypeRuntimeArray %int
%tint_symbol_3 = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
         %11 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %int %uint
%tint_symbol_7 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_7 = OpTypePointer Uniform %tint_symbol_7
         %14 = OpVariable %_ptr_Uniform_tint_symbol_7 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%take_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%take_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%take_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %29 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
     %int_14 = OpConstant %int 14
%_ptr_StorageBuffer_int = OpTypePointer StorageBuffer %int
   %int_3584 = OpConstant %int 3584
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
         %78 = OpTypeFunction %int %int %int
      %int_0 = OpConstant %int 0
%int_n2147483648 = OpConstant %int -2147483648
     %int_n1 = OpConstant %int -1
      %int_1 = OpConstant %int 1
        %104 = OpTypeFunction %void
%take_kernel_inner = OpFunction %void None %29
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %30 = OpLabel
         %31 = OpCompositeExtract %uint %blockIdx 2
         %32 = OpCompositeExtract %uint %gridDim 0
         %33 = OpIMul %uint %31 %32
         %34 = OpCompositeExtract %uint %blockIdx 0
         %35 = OpIAdd %uint %33 %34
         %36 = OpAccessChain %_ptr_Uniform_uint %14 %uint_0 %uint_2
         %40 = OpLoad %uint %36 None
         %41 = OpUGreaterThan %bool %35 %40
               OpSelectionMerge %43 None
               OpBranchConditional %41 %44 %43
         %44 = OpLabel
               OpReturn
         %43 = OpLabel
         %45 = OpCompositeExtract %uint %blockIdx 2
         %46 = OpCompositeExtract %uint %gridDim 0
         %47 = OpIMul %uint %45 %46
         %48 = OpCompositeExtract %uint %blockIdx 0
         %49 = OpIAdd %uint %47 %48
       %v__1 = OpBitcast %int %49
         %51 = OpIMul %int %v__1 %int_256
         %53 = OpCompositeExtract %uint %threadIdx 0
         %54 = OpBitcast %int %53
         %55 = OpIAdd %int %51 %54
         %56 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %55
         %58 = OpFunctionCall %int %tint_div_i32 %v__1 %int_14
         %61 = OpAccessChain %_ptr_StorageBuffer_int %6 %uint_0 %58
         %63 = OpLoad %int %61 None
         %64 = OpIMul %int %63 %int_3584
         %66 = OpFunctionCall %int %tint_mod_i32 %v__1 %int_14
         %68 = OpIMul %int %66 %int_256
         %69 = OpIAdd %int %64 %68
         %70 = OpCompositeExtract %uint %threadIdx 0
         %71 = OpBitcast %int %70
         %72 = OpIAdd %int %69 %71
         %73 = OpAccessChain %_ptr_StorageBuffer_float_0 %11 %uint_0 %72
         %75 = OpLoad %float %73 None
               OpStore %56 %75 None
               OpReturn
               OpFunctionEnd
%tint_div_i32 = OpFunction %int None %78
        %lhs = OpFunctionParameter %int
        %rhs = OpFunctionParameter %int
         %79 = OpLabel
         %80 = OpIEqual %bool %rhs %int_0
         %82 = OpIEqual %bool %lhs %int_n2147483648
         %84 = OpIEqual %bool %rhs %int_n1
         %86 = OpLogicalAnd %bool %82 %84
         %87 = OpLogicalOr %bool %80 %86
         %88 = OpSelect %int %87 %int_1 %rhs
         %90 = OpSDiv %int %lhs %88
               OpReturnValue %90
               OpFunctionEnd
%tint_mod_i32 = OpFunction %int None %78
      %lhs_0 = OpFunctionParameter %int
      %rhs_0 = OpFunctionParameter %int
         %93 = OpLabel
         %94 = OpIEqual %bool %rhs_0 %int_0
         %95 = OpIEqual %bool %lhs_0 %int_n2147483648
         %96 = OpIEqual %bool %rhs_0 %int_n1
         %97 = OpLogicalAnd %bool %95 %96
         %98 = OpLogicalOr %bool %94 %97
         %99 = OpSelect %int %98 %int_1 %rhs_0
        %100 = OpSDiv %int %lhs_0 %99
        %101 = OpIMul %int %100 %99
        %102 = OpISub %int %lhs_0 %101
               OpReturnValue %102
               OpFunctionEnd
%take_kernel = OpFunction %void None %104
        %105 = OpLabel
        %106 = OpLoad %v3uint %take_kernel_workgroup_id_Input None
        %107 = OpLoad %v3uint %take_kernel_num_workgroups_Input None
        %108 = OpLoad %v3uint %take_kernel_local_invocation_id_Input None
        %109 = OpFunctionCall %void %take_kernel_inner %106 %107 %108
               OpReturn
               OpFunctionEnd

/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 75
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %index_kernel "index_kernel" %index_kernel_workgroup_id_Input %index_kernel_num_workgroups_Input %index_kernel_local_invocation_id_Input
               OpExecutionMode %index_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %index_kernel_workgroup_id_Input "index_kernel_workgroup_id_Input"
               OpName %index_kernel_num_workgroups_Input "index_kernel_num_workgroups_Input"
               OpName %index_kernel_local_invocation_id_Input "index_kernel_local_invocation_id_Input"
               OpName %index_kernel_inner "index_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %index_kernel "index_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %index_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %index_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %index_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%index_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%index_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%index_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %25 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_Uniform_int = OpTypePointer Uniform %int
   %int_3584 = OpConstant %int 3584
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
         %69 = OpTypeFunction %void
%index_kernel_inner = OpFunction %void None %25
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %26 = OpLabel
         %27 = OpCompositeExtract %uint %blockIdx 2
         %28 = OpCompositeExtract %uint %gridDim 0
         %29 = OpIMul %uint %27 %28
         %30 = OpCompositeExtract %uint %blockIdx 0
         %31 = OpIAdd %uint %29 %30
         %32 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_1
         %36 = OpLoad %uint %32 None
         %37 = OpUGreaterThan %bool %31 %36
               OpSelectionMerge %39 None
               OpBranchConditional %37 %40 %39
         %40 = OpLabel
               OpReturn
         %39 = OpLabel
         %41 = OpCompositeExtract %uint %blockIdx 2
         %42 = OpCompositeExtract %uint %gridDim 0
         %43 = OpIMul %uint %41 %42
         %44 = OpCompositeExtract %uint %blockIdx 0
         %45 = OpIAdd %uint %43 %44
       %v__1 = OpBitcast %int %45
         %47 = OpIMul %int %v__1 %int_256
         %49 = OpCompositeExtract %uint %threadIdx 0
         %50 = OpBitcast %int %49
         %51 = OpIAdd %int %47 %50
         %52 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %51
         %54 = OpAccessChain %_ptr_Uniform_int %9 %uint_0 %uint_0
         %56 = OpLoad %int %54 None
         %57 = OpIMul %int %56 %int_3584
         %59 = OpIMul %int %v__1 %int_256
         %60 = OpIAdd %int %57 %59
         %61 = OpCompositeExtract %uint %threadIdx 0
         %62 = OpBitcast %int %61
         %63 = OpIAdd %int %60 %62
         %64 = OpISub %int %63 %int_3584
         %65 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %64
         %67 = OpLoad %float %65 None
               OpStore %52 %67 None
               OpReturn
               OpFunctionEnd
%index_kernel = OpFunction %void None %69
         %70 = OpLabel
         %71 = OpLoad %v3uint %index_kernel_workgroup_id_Input None
         %72 = OpLoad %v3uint %index_kernel_num_workgroups_Input None
         %73 = OpLoad %v3uint %index_kernel_local_invocation_id_Input None
         %74 = OpFunctionCall %void %index_kernel_inner %71 %72 %73
               OpReturn
               OpFunctionEnd

/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 68
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %reshape5_kernel "reshape5_kernel" %reshape5_kernel_workgroup_id_Input %reshape5_kernel_num_workgroups_Input %reshape5_kernel_local_invocation_id_Input
               OpExecutionMode %reshape5_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %reshape5_kernel_workgroup_id_Input "reshape5_kernel_workgroup_id_Input"
               OpName %reshape5_kernel_num_workgroups_Input "reshape5_kernel_num_workgroups_Input"
               OpName %reshape5_kernel_local_invocation_id_Input "reshape5_kernel_local_invocation_id_Input"
               OpName %reshape5_kernel_inner "reshape5_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %reshape5_kernel "reshape5_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %reshape5_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %reshape5_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %reshape5_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%reshape5_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%reshape5_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%reshape5_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %25 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
         %62 = OpTypeFunction %void
%reshape5_kernel_inner = OpFunction %void None %25
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %26 = OpLabel
         %27 = OpCompositeExtract %uint %blockIdx 2
         %28 = OpCompositeExtract %uint %gridDim 0
         %29 = OpIMul %uint %27 %28
         %30 = OpCompositeExtract %uint %blockIdx 0
         %31 = OpIAdd %uint %29 %30
         %32 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_1
         %36 = OpLoad %uint %32 None
         %37 = OpUGreaterThan %bool %31 %36
               OpSelectionMerge %39 None
               OpBranchConditional %37 %40 %39
         %40 = OpLabel
               OpReturn
         %39 = OpLabel
         %41 = OpCompositeExtract %uint %blockIdx 2
         %42 = OpCompositeExtract %uint %gridDim 0
         %43 = OpIMul %uint %41 %42
         %44 = OpCompositeExtract %uint %blockIdx 0
         %45 = OpIAdd %uint %43 %44
       %v__1 = OpBitcast %int %45
         %47 = OpIMul %int %v__1 %int_256
         %49 = OpCompositeExtract %uint %threadIdx 0
         %50 = OpBitcast %int %49
         %51 = OpIAdd %int %47 %50
         %52 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %51
         %54 = OpIMul %int %v__1 %int_256
         %55 = OpCompositeExtract %uint %threadIdx 0
         %56 = OpBitcast %int %55
         %57 = OpIAdd %int %54 %56
         %58 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %57
         %60 = OpLoad %float %58 None
               OpStore %52 %60 None
               OpReturn
               OpFunctionEnd
%reshape5_kernel = OpFunction %void None %62
         %63 = OpLabel
         %64 = OpLoad %v3uint %reshape5_kernel_workgroup_id_Input None
         %65 = OpLoad %v3uint %reshape5_kernel_num_workgroups_Input None
         %66 = OpLoad %v3uint %reshape5_kernel_local_invocation_id_Input None
         %67 = OpFunctionCall %void %reshape5_kernel_inner %64 %65 %66
               OpReturn
               OpFunctionEnd

// Dumped WGSL:
//----------------------------------------
// Function: reshape2_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_reshape : array<f32>;
@group(0) @binding(1) var<storage, read> lv426 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn reshape2_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_reshape[((v__1 * 256i) + i32(threadIdx.x))] = lv426[((v__1 * 256i) + i32(threadIdx.x))];
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv451 : array<u32>;
@group(0) @binding(2) var<storage, read> lv452 : array<f32>;
@group(0) @binding(3) var<storage, read> model_layers_0_self_attn_c_attn_bias3 : array<f32>;
@group(0) @binding(4) var<storage, read> rms_norm114 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 8>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 8>;
  var NT_matmul_intermediate_pad_local : array<f32, 8>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 4i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv451[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv452[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv451[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv452[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 4i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 4i) + 1i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
    if (((i32(blockIdx.y) * 4i) + 2i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[5i]);
    }
    if (((i32(blockIdx.y) * 4i) + 3i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm114[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[7i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 4i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 4i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.seq_len + 3i)>>2u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 4i) + ax0) < podArgs.seq_len)) {
        T_add[((((i32(blockIdx.y) * 18432i) + (ax0 * 4608i)) + (v__1 * 2i)) + ax1_fused_2)] = (NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)] + model_layers_0_self_attn_c_attn_bias3[((v__1 * 2i) + ax1_fused_2)]);
      }
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 68
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %reshape2_kernel "reshape2_kernel" %reshape2_kernel_workgroup_id_Input %reshape2_kernel_num_workgroups_Input %reshape2_kernel_local_invocation_id_Input
               OpExecutionMode %reshape2_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %reshape2_kernel_workgroup_id_Input "reshape2_kernel_workgroup_id_Input"
               OpName %reshape2_kernel_num_workgroups_Input "reshape2_kernel_num_workgroups_Input"
               OpName %reshape2_kernel_local_invocation_id_Input "reshape2_kernel_local_invocation_id_Input"
               OpName %reshape2_kernel_inner "reshape2_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %reshape2_kernel "reshape2_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %reshape2_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %reshape2_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %reshape2_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%reshape2_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%reshape2_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%reshape2_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %25 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
         %62 = OpTypeFunction %void
%reshape2_kernel_inner = OpFunction %void None %25
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %26 = OpLabel
         %27 = OpCompositeExtract %uint %blockIdx 2
         %28 = OpCompositeExtract %uint %gridDim 0
         %29 = OpIMul %uint %27 %28
         %30 = OpCompositeExtract %uint %blockIdx 0
         %31 = OpIAdd %uint %29 %30
         %32 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_1
         %36 = OpLoad %uint %32 None
         %37 = OpUGreaterThan %bool %31 %36
               OpSelectionMerge %39 None
               OpBranchConditional %37 %40 %39
         %40 = OpLabel
               OpReturn
         %39 = OpLabel
         %41 = OpCompositeExtract %uint %blockIdx 2
         %42 = OpCompositeExtract %uint %gridDim 0
         %43 = OpIMul %uint %41 %42
         %44 = OpCompositeExtract %uint %blockIdx 0
         %45 = OpIAdd %uint %43 %44
       %v__1 = OpBitcast %int %45
         %47 = OpIMul %int %v__1 %int_256
         %49 = OpCompositeExtract %uint %threadIdx 0
         %50 = OpBitcast %int %49
         %51 = OpIAdd %int %47 %50
         %52 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %51
         %54 = OpIMul %int %v__1 %int_256
         %55 = OpCompositeExtract %uint %threadIdx 0
         %56 = OpBitcast %int %55
         %57 = OpIAdd %int %54 %56
         %58 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %57
         %60 = OpLoad %float %58 None
               OpStore %52 %60 None
               OpReturn
               OpFunctionEnd
%reshape2_kernel = OpFunction %void None %62
         %63 = OpLabel
         %64 = OpLoad %v3uint %reshape2_kernel_workgroup_id_Input None
         %65 = OpLoad %v3uint %reshape2_kernel_num_workgroups_Input None
         %66 = OpLoad %v3uint %reshape2_kernel_local_invocation_id_Input None
         %67 = OpFunctionCall %void %reshape2_kernel_inner %64 %65 %66
               OpReturn
               OpFunctionEnd

// Dumped WGSL:
//----------------------------------------
// Function: batch_decode_paged_kv_sliding_window_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read> Q : array<vec4<f32>>;
@group(0) @binding(1) var<storage, read> k_rope_pos_offset : array<i32>;
@group(0) @binding(2) var<storage, read> length_info : array<i32>;
@group(0) @binding(3) var<storage, read_write> lse : array<f32>;
@group(0) @binding(4) var<storage, read_write> output : array<vec4<f32>>;
@group(0) @binding(5) var<storage, read> page_table_indptr : array<i32>;
@group(0) @binding(6) var<storage, read> page_table_values : array<i32>;
@group(0) @binding(7) var<storage, read> pages : array<vec4<f32>>;
@group(0) @binding(8) var<storage, read> q_rope_position : array<i32>;

struct PODArgs {
  B: i32,
  attn_score_scaling_factor: f32,
  k_rope_pos_offset_elem_offset: i32,
  length_info_elem_offset: i32,
  max_num_pages: i32,
  nnz_pages: i32,
  page_indptr_elem_offset: i32,
  page_values_elem_offset: i32,
  q_rope_position_elem_offset: i32,
  rope_scale: f32,
  rope_theta: f32,
  rotary_mode: i32,
  packGridDimX: u32
}
@group(0) @binding(9) var<uniform> podArgs : PODArgs;

var<workgroup> K_smem : array<vec4<f32>, 224>;
var<workgroup> V_smem : array<vec4<f32>, 224>;
var<workgroup> red_buf0 : array<f32, 224>;
@compute @workgroup_size(32, 7, 1)
fn batch_decode_paged_kv_sliding_window_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var kv_chunk_len : array<i32, 1>;
  var st_m : array<f32, 1>;
  var st_d : array<f32, 1>;
  var O_local : array<vec4<f32>, 1>;
  var Q_local : array<vec4<f32>, 1>;
  var m_prev : array<f32, 1>;
  var S_local : array<f32, 7>;
  var QK_local : array<vec4<f32>, 1>;
  var S_reduce_local : array<f32, 1>;
  var V_local : array<vec4<f32>, 1>;
  let cur_page_indptr_begin : i32 = page_table_indptr[(v__1 + podArgs.page_indptr_elem_offset)];
  let cur_page_indptr_end : i32 = page_table_indptr[((v__1 + podArgs.page_indptr_elem_offset) + 1i)];
  var condval : i32;
  if ((cur_page_indptr_begin != cur_page_indptr_end)) {
    condval = ((((((cur_page_indptr_end * 16i) + length_info[(v__1 + podArgs.length_info_elem_offset)]) + length_info[(((podArgs.B * 2i) + v__1) + podArgs.length_info_elem_offset)]) - length_info[((v__1 + podArgs.B) + podArgs.length_info_elem_offset)]) - (cur_page_indptr_begin * 16i)) - 16i);
} else {
    condval = 0i;
}
  kv_chunk_len[0i] = condval;
  st_m[0i] = -5.000000e+04f;
  st_d[0i] = 1.000000e+00f;
  O_local[0i] = vec4<f32>(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f);
  var condval_1 : vec4<f32>;
  if ((podArgs.rotary_mode == 1i)) {
    var condval_2 : vec4<f32>;
    if ((i32(threadIdx.x) < 16i)) {
      condval_2 = (Q[((((((v__1 * 3584i) + (i32(blockIdx.y) * 896i)) + (i32(threadIdx.y) * 128i)) + (i32(threadIdx.x) * 4i)) + 64i) / 4i)] * vec4<f32>(-1.000000e+00f, -1.000000e+00f, -1.000000e+00f, -1.000000e+00f));
} else {
      condval_2 = Q[((((((v__1 * 3584i) + (i32(blockIdx.y) * 896i)) + (i32(threadIdx.y) * 128i)) + (i32(threadIdx.x) * 4i)) - 64i) / 4i)];
}
    condval_1 = fma(sin((vec4<f32>((f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale), (f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale), (f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale), (f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale)) / pow(vec4<f32>(podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta), (vec4<f32>(vec4<i32>((((i32(threadIdx.x) & 15i) * 8i))+(2i*0), (((i32(threadIdx.x) & 15i) * 8i))+(2i*1), (((i32(threadIdx.x) & 15i) * 8i))+(2i*2), (((i32(threadIdx.x) & 15i) * 8i))+(2i*3))) * vec4<f32>(7.812500e-03f, 7.812500e-03f, 7.812500e-03f, 7.812500e-03f))))), condval_2, (cos((vec4<f32>((f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale), (f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale), (f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale), (f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale)) / pow(vec4<f32>(podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta), (vec4<f32>(vec4<i32>((((i32(threadIdx.x) & 15i) * 8i))+(2i*0), (((i32(threadIdx.x) & 15i) * 8i))+(2i*1), (((i32(threadIdx.x) & 15i) * 8i))+(2i*2), (((i32(threadIdx.x) & 15i) * 8i))+(2i*3))) * vec4<f32>(7.812500e-03f, 7.812500e-03f, 7.812500e-03f, 7.812500e-03f))))) * Q[(((((v__1 * 3584i) + (i32(blockIdx.y) * 896i)) + (i32(threadIdx.y) * 128i)) + (i32(threadIdx.x) * 4i)) / 4i)]));
} else {
    condval_1 = Q[(((((v__1 * 3584i) + (i32(blockIdx.y) * 896i)) + (i32(threadIdx.y) * 128i)) + (i32(threadIdx.x) * 4i)) / 4i)];
}
  Q_local[0i] = condval_1;
  for (var iterator : i32 = 0; iterator < (((kv_chunk_len[0i] - 2147483640i) / 7i) - -306783378i); iterator++) {
    workgroupBarrier();
    if (((iterator * 7i) + i32(threadIdx.y)) < kv_chunk_len[0i]) {
            var condval_3 : i32;
      if ((((iterator * 7i) + i32(threadIdx.y)) < length_info[(((podArgs.B * 2i) + v__1) + podArgs.length_info_elem_offset)])) {
        condval_3 = ((iterator * 7i) + i32(threadIdx.y));
} else {
        condval_3 = ((((iterator * 7i) + i32(threadIdx.y)) + length_info[((v__1 + podArgs.B) + podArgs.length_info_elem_offset)]) - length_info[(((podArgs.B * 2i) + v__1) + podArgs.length_info_elem_offset)]);
}
let seq_offset : i32 = condval_3;
      let page_no : i32 = page_table_values[(((seq_offset>>4u) + cur_page_indptr_begin) + podArgs.page_values_elem_offset)];
      var condval_4 : vec4<f32>;
      if ((podArgs.rotary_mode == 1i)) {
        var condval_5 : vec4<f32>;
        if ((i32(threadIdx.x) < 16i)) {
          condval_5 = (pages[((((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((seq_offset & 15i) * 128i)) + (i32(threadIdx.x) * 4i)) + 64i) / 4i)] * vec4<f32>(-1.000000e+00f, -1.000000e+00f, -1.000000e+00f, -1.000000e+00f));
} else {
          condval_5 = pages[((((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((seq_offset & 15i) * 128i)) + (i32(threadIdx.x) * 4i)) - 64i) / 4i)];
}
        condval_4 = fma(sin((vec4<f32>((f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale), (f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale), (f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale), (f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale)) / pow(vec4<f32>(podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta), (vec4<f32>(vec4<i32>((((i32(threadIdx.x) & 15i) * 8i))+(2i*0), (((i32(threadIdx.x) & 15i) * 8i))+(2i*1), (((i32(threadIdx.x) & 15i) * 8i))+(2i*2), (((i32(threadIdx.x) & 15i) * 8i))+(2i*3))) * vec4<f32>(7.812500e-03f, 7.812500e-03f, 7.812500e-03f, 7.812500e-03f))))), condval_5, (cos((vec4<f32>((f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale), (f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale), (f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale), (f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale)) / pow(vec4<f32>(podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta), (vec4<f32>(vec4<i32>((((i32(threadIdx.x) & 15i) * 8i))+(2i*0), (((i32(threadIdx.x) & 15i) * 8i))+(2i*1), (((i32(threadIdx.x) & 15i) * 8i))+(2i*2), (((i32(threadIdx.x) & 15i) * 8i))+(2i*3))) * vec4<f32>(7.812500e-03f, 7.812500e-03f, 7.812500e-03f, 7.812500e-03f))))) * pages[(((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((seq_offset & 15i) * 128i)) + (i32(threadIdx.x) * 4i)) / 4i)]));
} else {
        condval_4 = pages[(((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((seq_offset & 15i) * 128i)) + (i32(threadIdx.x) * 4i)) / 4i)];
}
      K_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = condval_4;
      V_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = pages[((((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((seq_offset & 15i) * 128i)) + (i32(threadIdx.x) * 4i)) + 8192i) / 4i)];
    } else {
      K_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = vec4<f32>(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f);
      V_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = vec4<f32>(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f);
    }
    workgroupBarrier();
    m_prev[0i] = st_m[0i];
    for (var j : i32 = 0; j < 7i; j++) {
      QK_local[0i] = (((Q_local[0i] * K_smem[((j * 32i) + i32(threadIdx.x))]) * vec4<f32>(podArgs.attn_score_scaling_factor, podArgs.attn_score_scaling_factor, podArgs.attn_score_scaling_factor, podArgs.attn_score_scaling_factor)) * vec4<f32>(1.275174e-01f, 1.275174e-01f, 1.275174e-01f, 1.275174e-01f));
      S_reduce_local[0i] = 0.000000e+00f;
      S_reduce_local[0i] = (S_reduce_local[0i] + QK_local[0i][0]);
      S_reduce_local[0i] = (S_reduce_local[0i] + QK_local[0i][1]);
      S_reduce_local[0i] = (S_reduce_local[0i] + QK_local[0i][2]);
      S_reduce_local[0i] = (S_reduce_local[0i] + QK_local[0i][3]);
      workgroupBarrier();
      red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = S_reduce_local[0i];
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 1i)]);
      }
      workgroupBarrier();
      S_local[j] = -5.000000e+04f;
      if (((iterator * 7i) + j) < kv_chunk_len[0i]) {
        S_local[j] = red_buf0[(i32(threadIdx.y) * 32i)];
      }
      st_m[0i] = max(st_m[0i], S_local[j]);
    }
    let o_scale : f32 = exp2((m_prev[0i] - st_m[0i]));
    st_d[0i] = (st_d[0i] * o_scale);
    for (var j_1 : i32 = 0; j_1 < 7i; j_1++) {
      S_local[j_1] = exp2((S_local[j_1] - st_m[0i]));
      st_d[0i] = (st_d[0i] + S_local[j_1]);
    }
    O_local[0i] = (O_local[0i] * vec4<f32>(o_scale, o_scale, o_scale, o_scale));
    for (var j_2 : i32 = 0; j_2 < 7i; j_2++) {
      V_local[0i] = V_smem[((j_2 * 32i) + i32(threadIdx.x))];
      O_local[0i] = fma(V_local[0i], vec4<f32>(S_local[j_2], S_local[j_2], S_local[j_2], S_local[j_2]), O_local[0i]);
    }
  }
  O_local[0i] = (O_local[0i] / vec4<f32>(st_d[0i], st_d[0i], st_d[0i], st_d[0i]));
  output[(((((v__1 * 3584i) + (i32(blockIdx.y) * 896i)) + (i32(threadIdx.y) * 128i)) + (i32(threadIdx.x) * 4i)) / 4i)] = O_local[0i];
  lse[(((v__1 * 28i) + (i32(blockIdx.y) * 7i)) + i32(threadIdx.y))] = (st_m[0i] + log2(st_d[0i]));
}



// Dumped WGSL:
//----------------------------------------
// Function: gather_probs_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> dst : array<f32>;
@group(0) @binding(1) var<storage, read> indices : array<i32>;
@group(0) @binding(2) var<storage, read> src : array<f32>;

struct PODArgs {
  batch_size: i32,
  m: i32,
  n: i32,
  packGridDimX: u32
}
@group(0) @binding(3) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn gather_probs_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  if (((v__1 * 256i) + i32(threadIdx.x)) < (podArgs.batch_size * podArgs.n)) {
    dst[((v__1 * 256i) + i32(threadIdx.x))] = src[((indices[((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.n * podArgs.batch_size)) / podArgs.n)] * podArgs.n) + (((v__1 * 256i) + i32(threadIdx.x)) % podArgs.n))];
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize4_fused_NT_matmul13_add5_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv1362 : array<u32>;
@group(0) @binding(2) var<storage, read> lv1363 : array<f32>;
@group(0) @binding(3) var<storage, read> lv1695 : array<f32>;
@group(0) @binding(4) var<storage, read> lv1696 : array<f32>;

struct PODArgs {
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize4_fused_NT_matmul13_add5_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var NT_matmul_rf_local : array<f32, 1>;
  var lv1362_local : array<u32, 1>;
  var NT_matmul_rf_local_1 : array<f32, 1>;
  NT_matmul_rf_local[0i] = 0.000000e+00f;
  for (var ax1_0_fused_ax1_1_fused_0 : i32 = 0; ax1_0_fused_ax1_1_fused_0 < 37i; ax1_0_fused_ax1_1_fused_0++) {
    lv1362_local[0i] = lv1362[(((v__1 * 2368i) + (ax1_0_fused_ax1_1_fused_0 * 64i)) + i32(threadIdx.x))];
    NT_matmul_rf_local[0i] = fma(lv1696[((ax1_0_fused_ax1_1_fused_0 * 512i) + (i32(threadIdx.x) * 8i))], ((f32(((lv1362_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1363[(((v__1 * 592i) + (ax1_0_fused_ax1_1_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
    NT_matmul_rf_local[0i] = fma(lv1696[(((ax1_0_fused_ax1_1_fused_0 * 512i) + (i32(threadIdx.x) * 8i)) + 1i)], ((f32(((lv1362_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1363[(((v__1 * 592i) + (ax1_0_fused_ax1_1_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
    NT_matmul_rf_local[0i] = fma(lv1696[(((ax1_0_fused_ax1_1_fused_0 * 512i) + (i32(threadIdx.x) * 8i)) + 2i)], ((f32(((lv1362_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1363[(((v__1 * 592i) + (ax1_0_fused_ax1_1_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
    NT_matmul_rf_local[0i] = fma(lv1696[(((ax1_0_fused_ax1_1_fused_0 * 512i) + (i32(threadIdx.x) * 8i)) + 3i)], ((f32(((lv1362_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1363[(((v__1 * 592i) + (ax1_0_fused_ax1_1_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
    NT_matmul_rf_local[0i] = fma(lv1696[(((ax1_0_fused_ax1_1_fused_0 * 512i) + (i32(threadIdx.x) * 8i)) + 4i)], ((f32(((lv1362_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1363[(((v__1 * 592i) + (ax1_0_fused_ax1_1_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
    NT_matmul_rf_local[0i] = fma(lv1696[(((ax1_0_fused_ax1_1_fused_0 * 512i) + (i32(threadIdx.x) * 8i)) + 5i)], ((f32(((lv1362_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1363[(((v__1 * 592i) + (ax1_0_fused_ax1_1_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
    NT_matmul_rf_local[0i] = fma(lv1696[(((ax1_0_fused_ax1_1_fused_0 * 512i) + (i32(threadIdx.x) * 8i)) + 6i)], ((f32(((lv1362_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1363[(((v__1 * 592i) + (ax1_0_fused_ax1_1_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
    NT_matmul_rf_local[0i] = fma(lv1696[(((ax1_0_fused_ax1_1_fused_0 * 512i) + (i32(threadIdx.x) * 8i)) + 7i)], ((f32(((lv1362_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1363[(((v__1 * 592i) + (ax1_0_fused_ax1_1_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  }
  NT_matmul_rf_local_1[0i] = 0.000000e+00f;
  NT_matmul_rf_local_1[0i] = (NT_matmul_rf_local_1[0i] + NT_matmul_rf_local[0i]);
  workgroupBarrier();
  red_buf0[i32(threadIdx.x)] = NT_matmul_rf_local_1[0i];
  workgroupBarrier();
  if (i32(threadIdx.x) < 32i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 16i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 8i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 4i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 2i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 1i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) == 0i) {
    T_add[v__1] = (red_buf0[0i] + lv1695[v__1]);
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 138
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %gather_probs_kernel "gather_probs_kernel" %gather_probs_kernel_workgroup_id_Input %gather_probs_kernel_num_workgroups_Input %gather_probs_kernel_local_invocation_id_Input
               OpExecutionMode %gather_probs_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "m"
               OpMemberName %PODArgs 2 "n"
               OpMemberName %PODArgs 3 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpName %gather_probs_kernel_workgroup_id_Input "gather_probs_kernel_workgroup_id_Input"
               OpName %gather_probs_kernel_num_workgroups_Input "gather_probs_kernel_num_workgroups_Input"
               OpName %gather_probs_kernel_local_invocation_id_Input "gather_probs_kernel_local_invocation_id_Input"
               OpName %gather_probs_kernel_inner "gather_probs_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %tint_mod_i32 "tint_mod_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs_0 "lhs"
               OpName %rhs_0 "rhs"
               OpName %gather_probs_kernel "gather_probs_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %PODArgs 2 Offset 8
               OpMemberDecorate %PODArgs 3 Offset 12
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpDecorate %gather_probs_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %gather_probs_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %gather_probs_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
        %int = OpTypeInt 32 1
%_runtimearr_int = OpTypeRuntimeArray %int
%tint_symbol_3 = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
         %11 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %int %int %uint
%tint_symbol_7 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_7 = OpTypePointer Uniform %tint_symbol_7
         %14 = OpVariable %_ptr_Uniform_tint_symbol_7 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%gather_probs_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%gather_probs_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%gather_probs_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %29 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uin
// Dumped WGSL:
//----------------------------------------
// Function: rms_norm2_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_cast : array<f32>;
@group(0) @binding(1) var<storage, read> input_embed : array<f32>;
@group(0) @binding(2) var<storage, read> model_layers_0_input_layernorm_weight2 : array<f32>;

struct PODArgs {
  packGridDimX: u32
}
@group(0) @binding(3) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
var<workgroup> T_multiply_red_shared : array<f32, 1>;
@compute @workgroup_size(64, 1, 1)
fn rms_norm2_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var T_multiply_red_rf_local : array<f32, 1>;
  T_multiply_red_rf_local[0i] = 0.000000e+00f;
  T_multiply_red_rf_local[0i] = fma(input_embed[i32(threadIdx.x)], input_embed[i32(threadIdx.x)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 64i)], input_embed[(i32(threadIdx.x) + 64i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 128i)], input_embed[(i32(threadIdx.x) + 128i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 192i)], input_embed[(i32(threadIdx.x) + 192i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 256i)], input_embed[(i32(threadIdx.x) + 256i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 320i)], input_embed[(i32(threadIdx.x) + 320i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 384i)], input_embed[(i32(threadIdx.x) + 384i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 448i)], input_embed[(i32(threadIdx.x) + 448i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 512i)], input_embed[(i32(threadIdx.x) + 512i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 576i)], input_embed[(i32(threadIdx.x) + 576i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 640i)], input_embed[(i32(threadIdx.x) + 640i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 704i)], input_embed[(i32(threadIdx.x) + 704i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 768i)], input_embed[(i32(threadIdx.x) + 768i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 832i)], input_embed[(i32(threadIdx.x) + 832i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 896i)], input_embed[(i32(threadIdx.x) + 896i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 960i)], input_embed[(i32(threadIdx.x) + 960i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1024i)], input_embed[(i32(threadIdx.x) + 1024i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1088i)], input_embed[(i32(threadIdx.x) + 1088i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1152i)], input_embed[(i32(threadIdx.x) + 1152i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1216i)], input_embed[(i32(threadIdx.x) + 1216i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1280i)], input_embed[(i32(threadIdx.x) + 1280i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1344i)], input_embed[(i32(threadIdx.x) + 1344i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1408i)], input_embed[(i32(threadIdx.x) + 1408i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1472i)], input_embed[(i32(threadIdx.x) + 1472i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1536i)], input_embed[(i32(threadIdx.x) + 1536i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1600i)], input_embed[(i32(threadIdx.x) + 1600i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1664i)], input_embed[(i32(threadIdx.x) + 1664i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1728i)], input_embed[(i32(threadIdx.x) + 1728i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1792i)], input_embed[(i32(threadIdx.x) + 1792i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1856i)], input_embed[(i32(threadIdx.x) + 1856i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1920i)], input_embed[(i32(threadIdx.x) + 1920i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 1984i)], input_embed[(i32(threadIdx.x) + 1984i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2048i)], input_embed[(i32(threadIdx.x) + 2048i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2112i)], input_embed[(i32(threadIdx.x) + 2112i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2176i)], input_embed[(i32(threadIdx.x) + 2176i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2240i)], input_embed[(i32(threadIdx.x) + 2240i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2304i)], input_embed[(i32(threadIdx.x) + 2304i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2368i)], input_embed[(i32(threadIdx.x) + 2368i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2432i)], input_embed[(i32(threadIdx.x) + 2432i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2496i)], input_embed[(i32(threadIdx.x) + 2496i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2560i)], input_embed[(i32(threadIdx.x) + 2560i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2624i)], input_embed[(i32(threadIdx.x) + 2624i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2688i)], input_embed[(i32(threadIdx.x) + 2688i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2752i)], input_embed[(i32(threadIdx.x) + 2752i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2816i)], input_embed[(i32(threadIdx.x) + 2816i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2880i)], input_embed[(i32(threadIdx.x) + 2880i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 2944i)], input_embed[(i32(threadIdx.x) + 2944i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 3008i)], input_embed[(i32(threadIdx.x) + 3008i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 3072i)], input_embed[(i32(threadIdx.x) + 3072i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 3136i)], input_embed[(i32(threadIdx.x) + 3136i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 3200i)], input_embed[(i32(threadIdx.x) + 3200i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 3264i)], input_embed[(i32(threadIdx.x) + 3264i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 3328i)], input_embed[(i32(threadIdx.x) + 3328i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 3392i)], input_embed[(i32(threadIdx.x) + 3392i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 3456i)], input_embed[(i32(threadIdx.x) + 3456i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embed[(i32(threadIdx.x) + 3520i)], input_embed[(i32(threadIdx.x) + 3520i)], T_multiply_red_rf_local[0i]);
  workgroupBarrier();
  red_buf0[i32(threadIdx.x)] = T_multiply_red_rf_local[0i];
  workgroupBarrier();
  if (i32(threadIdx.x) < 32i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 16i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 8i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 4i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 2i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 1i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) == 0i) {
    T_multiply_red_shared[0i] = red_buf0[0i];
  }
  workgroupBarrier();
  T_cast[i32(threadIdx.x)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[i32(threadIdx.x)]) * model_layers_0_input_layernorm_weight2[i32(threadIdx.x)]);
  T_cast[(i32(threadIdx.x) + 64i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 64i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 64i)]);
  T_cast[(i32(threadIdx.x) + 128i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 128i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 128i)]);
  T_cast[(i32(threadIdx.x) + 192i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 192i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 192i)]);
  T_cast[(i32(threadIdx.x) + 256i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 256i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 256i)]);
  T_cast[(i32(threadIdx.x) + 320i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 320i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 320i)]);
  T_cast[(i32(threadIdx.x) + 384i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 384i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 384i)]);
  T_cast[(i32(threadIdx.x) + 448i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 448i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 448i)]);
  T_cast[(i32(threadIdx.x) + 512i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 512i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 512i)]);
  T_cast[(i32(threadIdx.x) + 576i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 576i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 576i)]);
  T_cast[(i32(threadIdx.x) + 640i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 640i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 640i)]);
  T_cast[(i32(threadIdx.x) + 704i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 704i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 704i)]);
  T_cast[(i32(threadIdx.x) + 768i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 768i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 768i)]);
  T_cast[(i32(threadIdx.x) + 832i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 832i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 832i)]);
  T_cast[(i32(threadIdx.x) + 896i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 896i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 896i)]);
  T_cast[(i32(threadIdx.x) + 960i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 960i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 960i)]);
  T_cast[(i32(threadIdx.x) + 1024i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1024i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1024i)]);
  T_cast[(i32(threadIdx.x) + 1088i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1088i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1088i)]);
  T_cast[(i32(threadIdx.x) + 1152i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1152i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1152i)]);
  T_cast[(i32(threadIdx.x) + 1216i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1216i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1216i)]);
  T_cast[(i32(threadIdx.x) + 1280i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1280i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1280i)]);
  T_cast[(i32(threadIdx.x) + 1344i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1344i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1344i)]);
  T_cast[(i32(threadIdx.x) + 1408i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1408i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1408i)]);
  T_cast[(i32(threadIdx.x) + 1472i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1472i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1472i)]);
  T_cast[(i32(threadIdx.x) + 1536i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1536i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1536i)]);
  T_cast[(i32(threadIdx.x) + 1600i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1600i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1600i)]);
  T_cast[(i32(threadIdx.x) + 1664i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1664i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1664i)]);
  T_cast[(i32(threadIdx.x) + 1728i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1728i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1728i)]);
  T_cast[(i32(threadIdx.x) + 1792i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1792i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1792i)]);
  T_cast[(i32(threadIdx.x) + 1856i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1856i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1856i)]);
  T_cast[(i32(threadIdx.x) + 1920i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1920i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1920i)]);
  T_cast[(i32(threadIdx.x) + 1984i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 1984i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 1984i)]);
  T_cast[(i32(threadIdx.x) + 2048i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2048i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2048i)]);
  T_cast[(i32(threadIdx.x) + 2112i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2112i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2112i)]);
  T_cast[(i32(threadIdx.x) + 2176i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2176i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2176i)]);
  T_cast[(i32(threadIdx.x) + 2240i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2240i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2240i)]);
  T_cast[(i32(threadIdx.x) + 2304i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2304i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2304i)]);
  T_cast[(i32(threadIdx.x) + 2368i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2368i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2368i)]);
  T_cast[(i32(threadIdx.x) + 2432i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2432i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2432i)]);
  T_cast[(i32(threadIdx.x) + 2496i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2496i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2496i)]);
  T_cast[(i32(threadIdx.x) + 2560i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2560i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2560i)]);
  T_cast[(i32(threadIdx.x) + 2624i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2624i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2624i)]);
  T_cast[(i32(threadIdx.x) + 2688i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2688i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2688i)]);
  T_cast[(i32(threadIdx.x) + 2752i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2752i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2752i)]);
  T_cast[(i32(threadIdx.x) + 2816i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2816i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2816i)]);
  T_cast[(i32(threadIdx.x) + 2880i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2880i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2880i)]);
  T_cast[(i32(threadIdx.x) + 2944i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 2944i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 2944i)]);
  T_cast[(i32(threadIdx.x) + 3008i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 3008i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 3008i)]);
  T_cast[(i32(threadIdx.x) + 3072i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 3072i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 3072i)]);
  T_cast[(i32(threadIdx.x) + 3136i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 3136i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 3136i)]);
  T_cast[(i32(threadIdx.x) + 3200i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 3200i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 3200i)]);
  T_cast[(i32(threadIdx.x) + 3264i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 3264i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 3264i)]);
  T_cast[(i32(threadIdx.x) + 3328i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 3328i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 3328i)]);
  T_cast[(i32(threadIdx.x) + 3392i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 3392i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 3392i)]);
  T_cast[(i32(threadIdx.x) + 3456i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 3456i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 3456i)]);
  T_cast[(i32(threadIdx.x) + 3520i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embed[(i32(threadIdx.x) + 3520i)]) * model_layers_0_input_layernorm_weight2[(i32(threadIdx.x) + 3520i)]);
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2301
; Schema: 0
               OpCapability Shader
        %104 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1 "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1" %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1_workgroup_id_Input %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1_num_workgroups_Input %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1 LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1_workgroup_id_Input "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1_workgroup_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1_num_workgroups_Input "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1_num_workgroups_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1_local_invocation_id_Input "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1_local_invocation_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1_inner "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1 "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_1"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize4_fused_NT_ma
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 571
; Schema: 0
               OpCapability Shader
        %141 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel "fused_fused_dequantize4_fused_NT_matmul13_add5_kernel" %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_workgroup_id_Input %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_num_workgroups_Input %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_workgroup_id_Input "fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_num_workgroups_Input "fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_local_invocation_id_Input "fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_inner "fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %NT_matmul_rf_local "NT_matmul_rf_local"
               OpName %lv1362_local "lv1362_local"
               OpName %NT_matmul_rf_local_1 "NT_matmul_rf_local_1"
               OpName %ax1_0_fused_ax1_1_fused_0 "ax1_0_fused_ax1_1_fused_0"
               OpName %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel "fused_fused_dequantize4_fused_NT_matmul13_add5_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize4_fused_NT_matmul13_add5_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_1 ArrayStride 4
               OpDecorate %_arr_uint_uint_1 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = O
// Dumped WGSL:
//----------------------------------------
// Function: scatter_probs_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> dst : array<f32>;
@group(0) @binding(1) var<storage, read> indices : array<i32>;
@group(0) @binding(2) var<storage, read> src : array<f32>;

struct PODArgs {
  batch_size: i32,
  m: i32,
  n: i32,
  packGridDimX: u32
}
@group(0) @binding(3) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn scatter_probs_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  if (((v__1 * 256i) + i32(threadIdx.x)) < (podArgs.batch_size * podArgs.n)) {
    dst[((indices[((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.n * podArgs.batch_size)) / podArgs.n)] * podArgs.n) + (((v__1 * 256i) + i32(threadIdx.x)) % podArgs.n))] = src[((v__1 * 256i) + i32(threadIdx.x))];
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: tir_kv_cache_debug_get_kv_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> k_data : array<f32>;
@group(0) @binding(1) var<storage, read> pages : array<f32>;
@group(0) @binding(2) var<storage, read> position_map : array<i32>;
@group(0) @binding(3) var<storage, read_write> v_data : array<f32>;

struct PODArgs {
  layer_id: i32,
  num_pages: i32,
  page_size: i32,
  position_map_elem_offset: i32,
  seqlen: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn tir_kv_cache_debug_get_kv_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  let position : i32 = position_map[((v__1>>1u) + podArgs.position_map_elem_offset)];
  k_data[((((podArgs.layer_id * podArgs.seqlen) * 512i) + (v__1 * 256i)) + i32(threadIdx.x))] = pages[(((((((((position / podArgs.page_size) + ((position % podArgs.page_size)>>31u)) * 8i) + ((v__1 & 1i) * 2i)) + (i32(threadIdx.x)>>7u)) * podArgs.page_size) * 128i) + (((position % podArgs.page_size) + (podArgs.page_size & ((position % podArgs.page_size)>>31u))) * 128i)) + (i32(threadIdx.x) & 127i))];
  v_data[((((podArgs.layer_id * podArgs.seqlen) * 512i) + (v__1 * 256i)) + i32(threadIdx.x))] = pages[((((((((((position / podArgs.page_size) + ((position % podArgs.page_size)>>31u)) * 8i) + ((v__1 & 1i) * 2i)) + (i32(threadIdx.x)>>7u)) + 4i) * podArgs.page_size) * 128i) + (((position % podArgs.page_size) + (podArgs.page_size & ((position % podArgs.page_size)>>31u))) * 128i)) + (i32(threadIdx.x) & 127i))];
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize3_NT_matmul2_kernel_1
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv6 : array<u32>;
@group(0) @binding(2) var<storage, read> lv7 : array<f32>;
@group(0) @binding(3) var<storage, read> rms_norm172 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize3_NT_matmul2_kernel_1(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 8>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 8>;
  var NT_matmul_intermediate_pad_local : array<f32, 8>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 4i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 4i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 4i) + 1i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
    if (((i32(blockIdx.y) * 4i) + 2i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[5i]);
    }
    if (((i32(blockIdx.y) * 4i) + 3i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm172[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[7i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 4i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 4i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.batch_size + 3i)>>2u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 4i) + ax0) < podArgs.batch_size)) {
        NT_matmul[((((i32(blockIdx.y) * 151552i) + (ax0 * 37888i)) + (v__1 * 2i)) + ax1_fused_2)] = NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)];
      }
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 138
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %scatter_probs_kernel "scatter_probs_kernel" %scatter_probs_kernel_workgroup_id_Input %scatter_probs_kernel_num_workgroups_Input %scatter_probs_kernel_local_invocation_id_Input
               OpExecutionMode %scatter_probs_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "m"
               OpMemberName %PODArgs 2 "n"
               OpMemberName %PODArgs 3 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpName %scatter_probs_kernel_workgroup_id_Input "scatter_probs_kernel_workgroup_id_Input"
               OpName %scatter_probs_kernel_num_workgroups_Input "scatter_probs_kernel_num_workgroups_Input"
               OpName %scatter_probs_kernel_local_invocation_id_Input "scatter_probs_kernel_local_invocation_id_Input"
               OpName %scatter_probs_kernel_inner "scatter_probs_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %tint_mod_i32 "tint_mod_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs_0 "lhs"
               OpName %rhs_0 "rhs"
               OpName %scatter_probs_kernel "scatter_probs_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %PODArgs 2 Offset 8
               OpMemberDecorate %PODArgs 3 Offset 12
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpDecorate %scatter_probs_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %scatter_probs_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %scatter_probs_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
        %int = OpTypeInt 32 1
%_runtimearr_int = OpTypeRuntimeArray %int
%tint_symbol_3 = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
         %11 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %int %int %uint
%tint_symbol_7 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_7 = OpTypePointer Uniform %tint_symbol_7
         %14 = OpVariable %_ptr_Uniform_tint_symbol_7 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%scatter_probs_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%scatter_probs_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%scatter_probs_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %29 = OpTypeFunction %void %v3uint %v3uint %v3
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1315
; Schema: 0
               OpCapability Shader
        %309 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %batch_decode_paged_kv_sliding_window_kernel "batch_decode_paged_kv_sliding_window_kernel" %batch_decode_paged_kv_sliding_window_kernel_workgroup_id_Input %batch_decode_paged_kv_sliding_window_kernel_num_workgroups_Input %batch_decode_paged_kv_sliding_window_kernel_local_invocation_id_Input
               OpExecutionMode %batch_decode_paged_kv_sliding_window_kernel LocalSize 32 7 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpMemberName %tint_symbol_13 0 "tint_symbol_12"
               OpName %tint_symbol_13 "tint_symbol_13"
               OpMemberName %tint_symbol_15 0 "tint_symbol_14"
               OpName %tint_symbol_15 "tint_symbol_15"
               OpMemberName %tint_symbol_17 0 "tint_symbol_16"
               OpName %tint_symbol_17 "tint_symbol_17"
               OpMemberName %PODArgs 0 "B"
               OpMemberName %PODArgs 1 "attn_score_scaling_factor"
               OpMemberName %PODArgs 2 "k_rope_pos_offset_elem_offset"
               OpMemberName %PODArgs 3 "length_info_elem_offset"
               OpMemberName %PODArgs 4 "max_num_pages"
               OpMemberName %PODArgs 5 "nnz_pages"
               OpMemberName %PODArgs 6 "page_indptr_elem_offset"
               OpMemberName %PODArgs 7 "page_values_elem_offset"
               OpMemberName %PODArgs 8 "q_rope_position_elem_offset"
               OpMemberName %PODArgs 9 "rope_scale"
               OpMemberName %PODArgs 10 "rope_theta"
               OpMemberName %PODArgs 11 "rotary_mode"
               OpMemberName %PODArgs 12 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_19 0 "tint_symbol_18"
               OpName %tint_symbol_19 "tint_symbol_19"
               OpName %K_smem "K_smem"
               OpName %V_smem "V_smem"
               OpName %red_buf0 "red_buf0"
               OpName %batch_decode_paged_kv_sliding_window_kernel_workgroup_id_Input "batch_decode_paged_kv_sliding_window_kernel_workgroup_id_Input"
               OpName %batch_decode_paged_kv_sliding_window_kernel_num_workgroups_Input "batch_decode_paged_kv_sliding_window_kernel_num_workgroups_Input"
               OpName %batch_decode_paged_kv_sliding_window_kernel_local_invocation_id_Input "batch_decode_paged_kv_sliding_window_kernel_local_invocation_id_Input"
               OpName %batch_decode_paged_kv_sliding_window_kernel_inner "batch_decode_paged_kv_sliding_window_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %kv_chunk_len "kv_chunk_len"
               OpName %st_m "st_m"
               OpName %st_d "st_d"
               OpName %O_local "O_local"
               OpName %Q_local "Q_local"
               OpName %m_prev "m_prev"
               OpName %S_local "S_local"
               OpName %QK_local "QK_local"
               OpName %S_reduce_local "S_reduce_local"
               OpName %V_local "V_local"
               OpName %cur_page_indptr_begin "cur_page_indptr_begin"
               OpName %cur_page_indptr_end "cur_page_indptr_end"
               OpName %condval "condval"
               OpName %condval_1 "condval_1"
               OpName %condval_2 "condval_2"
               OpName %iterator "iterator"
               OpName %condval_3 "condval_3"
               OpName %seq_offset "seq_offset"
               OpName %page_no "page_no"
               OpName %condval_4 "condval_4"
               OpName %condval_5 "condval_5"
               OpName %j "j"
               OpName %o_scale "o_scale"
               OpName %j_1 "j_1"
               OpName %j_2 "j_2"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %batch_decode_paged_kv_sliding_window_kernel "batch_decode_paged_kv_sliding_window_kernel"
               OpDecorate %_runtimearr_v4float ArrayStride 16
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2284
; Schema: 0
               OpCapability Shader
        %101 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize_NT_matmul4_kernel_1 "fused_fused_dequantize_NT_matmul4_kernel_1" %fused_fused_dequantize_NT_matmul4_kernel_1_workgroup_id_Input %fused_fused_dequantize_NT_matmul4_kernel_1_num_workgroups_Input %fused_fused_dequantize_NT_matmul4_kernel_1_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize_NT_matmul4_kernel_1 LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_1_workgroup_id_Input "fused_fused_dequantize_NT_matmul4_kernel_1_workgroup_id_Input"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_1_num_workgroups_Input "fused_fused_dequantize_NT_matmul4_kernel_1_num_workgroups_Input"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_1_local_invocation_id_Input "fused_fused_dequantize_NT_matmul4_kernel_1_local_invocation_id_Input"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_1_inner "fused_fused_dequantize_NT_matmul4_kernel_1_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_1 "fused_fused_dequantize_NT_matmul4_kernel_1"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize_NT_matmul4_kernel_1_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize_NT_matmul4_kernel_1_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize_NT_matmul4_kernel_1_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_8 ArrayStride 4
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBu
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 223
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %tir_kv_cache_debug_get_kv_kernel "tir_kv_cache_debug_get_kv_kernel" %tir_kv_cache_debug_get_kv_kernel_workgroup_id_Input %tir_kv_cache_debug_get_kv_kernel_num_workgroups_Input %tir_kv_cache_debug_get_kv_kernel_local_invocation_id_Input
               OpExecutionMode %tir_kv_cache_debug_get_kv_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "layer_id"
               OpMemberName %PODArgs 1 "num_pages"
               OpMemberName %PODArgs 2 "page_size"
               OpMemberName %PODArgs 3 "position_map_elem_offset"
               OpMemberName %PODArgs 4 "seqlen"
               OpMemberName %PODArgs 5 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %tir_kv_cache_debug_get_kv_kernel_workgroup_id_Input "tir_kv_cache_debug_get_kv_kernel_workgroup_id_Input"
               OpName %tir_kv_cache_debug_get_kv_kernel_num_workgroups_Input "tir_kv_cache_debug_get_kv_kernel_num_workgroups_Input"
               OpName %tir_kv_cache_debug_get_kv_kernel_local_invocation_id_Input "tir_kv_cache_debug_get_kv_kernel_local_invocation_id_Input"
               OpName %tir_kv_cache_debug_get_kv_kernel_inner "tir_kv_cache_debug_get_kv_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %position "position"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_mod_i32 "tint_mod_i32"
               OpName %lhs_0 "lhs"
               OpName %rhs_0 "rhs"
               OpName %tir_kv_cache_debug_get_kv_kernel "tir_kv_cache_debug_get_kv_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 Coherent
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %PODArgs 2 Offset 8
               OpMemberDecorate %PODArgs 3 Offset 12
               OpMemberDecorate %PODArgs 4 Offset 16
               OpMemberDecorate %PODArgs 5 Offset 20
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %tir_kv_cache_debug_get_kv_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %tir_kv_cache_debug_get_kv_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %tir_kv_cache_debug_get_kv_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
%_runtimearr_int = OpTypeRuntimeArray %int
%tint_symbol_
// Dumped WGSL:
//----------------------------------------
// Function: rms_norm_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_cast : array<f32>;
@group(0) @binding(1) var<storage, read> input_embeds : array<f32>;
@group(0) @binding(2) var<storage, read> model_layers_0_input_layernorm_weight4 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(3) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
var<workgroup> T_multiply_red_shared : array<f32, 1>;
@compute @workgroup_size(64, 1, 1)
fn rms_norm_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var T_multiply_red_rf_local : array<f32, 1>;
  T_multiply_red_rf_local[0i] = 0.000000e+00f;
  T_multiply_red_rf_local[0i] = fma(input_embeds[((v__1 * 3584i) + i32(threadIdx.x))], input_embeds[((v__1 * 3584i) + i32(threadIdx.x))], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 64i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 64i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 128i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 128i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 192i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 192i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 256i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 256i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 320i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 320i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 384i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 384i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 448i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 448i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 512i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 512i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 576i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 576i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 640i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 640i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 704i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 704i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 768i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 768i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 832i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 832i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 896i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 896i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 960i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 960i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1024i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1024i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1088i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1088i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1152i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1152i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1216i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1216i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1280i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1280i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1344
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2293
; Schema: 0
               OpCapability Shader
        %104 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1 "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1" %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1_workgroup_id_Input %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1_num_workgroups_Input %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1 LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1_workgroup_id_Input "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1_workgroup_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1_num_workgroups_Input "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1_num_workgroups_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1_local_invocation_id_Input "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1_local_invocation_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1_inner "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1 "fused_fused_dequantize1_fused_NT_matmul5_add2_kernel_1"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize1_fused_NT_ma
// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize_NT_matmul14_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv1689 : array<u32>;
@group(0) @binding(2) var<storage, read> lv1690 : array<f32>;
@group(0) @binding(3) var<storage, read> rms_norm113 : array<f32>;

struct PODArgs {
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize_NT_matmul14_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var NT_matmul_rf_local : array<f32, 1>;
  var lv1689_local : array<u32, 1>;
  var NT_matmul_rf_local_1 : array<f32, 1>;
  NT_matmul_rf_local[0i] = 0.000000e+00f;
  lv1689_local[0i] = lv1689[((v__1 * 448i) + i32(threadIdx.x))];
  NT_matmul_rf_local[0i] = fma(rms_norm113[(i32(threadIdx.x) * 8i)], ((f32(((lv1689_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1690[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1i)], ((f32(((lv1689_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1690[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2i)], ((f32(((lv1689_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1690[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 3i)], ((f32(((lv1689_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1690[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 4i)], ((f32(((lv1689_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1690[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 5i)], ((f32(((lv1689_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1690[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 6i)], ((f32(((lv1689_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1690[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 7i)], ((f32(((lv1689_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1690[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  lv1689_local[0i] = lv1689[(((v__1 * 448i) + i32(threadIdx.x)) + 64i)];
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 512i)], ((f32(((lv1689_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 513i)], ((f32(((lv1689_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 514i)], ((f32(((lv1689_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 515i)], ((f32(((lv1689_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 516i)], ((f32(((lv1689_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 517i)], ((f32(((lv1689_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 518i)], ((f32(((lv1689_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 519i)], ((f32(((lv1689_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  lv1689_local[0i] = lv1689[(((v__1 * 448i) + i32(threadIdx.x)) + 128i)];
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1024i)], ((f32(((lv1689_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1025i)], ((f32(((lv1689_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1026i)], ((f32(((lv1689_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1027i)], ((f32(((lv1689_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1028i)], ((f32(((lv1689_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1029i)], ((f32(((lv1689_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1030i)], ((f32(((lv1689_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1031i)], ((f32(((lv1689_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  lv1689_local[0i] = lv1689[(((v__1 * 448i) + i32(threadIdx.x)) + 192i)];
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1536i)], ((f32(((lv1689_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1537i)], ((f32(((lv1689_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1538i)], ((f32(((lv1689_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1539i)], ((f32(((lv1689_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1540i)], ((f32(((lv1689_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1541i)], ((f32(((lv1689_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1542i)], ((f32(((lv1689_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 1543i)], ((f32(((lv1689_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  lv1689_local[0i] = lv1689[(((v__1 * 448i) + i32(threadIdx.x)) + 256i)];
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2048i)], ((f32(((lv1689_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2049i)], ((f32(((lv1689_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2050i)], ((f32(((lv1689_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2051i)], ((f32(((lv1689_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2052i)], ((f32(((lv1689_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2053i)], ((f32(((lv1689_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2054i)], ((f32(((lv1689_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2055i)], ((f32(((lv1689_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  lv1689_local[0i] = lv1689[(((v__1 * 448i) + i32(threadIdx.x)) + 320i)];
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2560i)], ((f32(((lv1689_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2561i)], ((f32(((lv1689_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2562i)], ((f32(((lv1689_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2563i)], ((f32(((lv1689_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2564i)], ((f32(((lv1689_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2565i)], ((f32(((lv1689_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2566i)], ((f32(((lv1689_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 2567i)], ((f32(((lv1689_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  lv1689_local[0i] = lv1689[(((v__1 * 448i) + i32(threadIdx.x)) + 384i)];
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 3072i)], ((f32(((lv1689_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 3073i)], ((f32(((lv1689_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 3074i)], ((f32(((lv1689_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 3075i)], ((f32(((lv1689_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 3076i)], ((f32(((lv1689_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 3077i)], ((f32(((lv1689_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 3078i)], ((f32(((lv1689_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm113[((i32(threadIdx.x) * 8i) + 3079i)], ((f32(((lv1689_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1690[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local_1[0i] = 0.000000e+00f;
  NT_matmul_rf_local_1[0i] = (NT_matmul_rf_local_1[0i] + NT_matmul_rf_local[0i]);
  workgroupBarrier();
  red_buf0[i32(threadIdx.x)] = NT_matmul_rf_local_1[0i];
  workgroupBarrier();
  if (i32(threadIdx.x) < 32i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 16i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 8i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 4i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 2i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 1i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) == 0i) {
    NT_matmul[v__1] = red_buf0[0i];
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: reshape_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_reshape : array<f32>;
@group(0) @binding(1) var<storage, read> add252 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn reshape_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_reshape[((v__1 * 256i) + i32(threadIdx.x))] = add252[((v__1 * 256i) + i32(threadIdx.x))];
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize3_NT_matmul12_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv1359 : array<u32>;
@group(0) @binding(2) var<storage, read> lv1360 : array<f32>;
@group(0) @binding(3) var<storage, read> rms_norm58 : array<f32>;

struct PODArgs {
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize3_NT_matmul12_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var NT_matmul_rf_local : array<f32, 1>;
  var lv1359_local : array<u32, 1>;
  var NT_matmul_rf_local_1 : array<f32, 1>;
  NT_matmul_rf_local[0i] = 0.000000e+00f;
  lv1359_local[0i] = lv1359[((v__1 * 448i) + i32(threadIdx.x))];
  NT_matmul_rf_local[0i] = fma(rms_norm58[(i32(threadIdx.x) * 8i)], ((f32(((lv1359_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1360[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1i)], ((f32(((lv1359_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1360[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2i)], ((f32(((lv1359_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1360[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 3i)], ((f32(((lv1359_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1360[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 4i)], ((f32(((lv1359_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1360[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 5i)], ((f32(((lv1359_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1360[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 6i)], ((f32(((lv1359_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1360[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 7i)], ((f32(((lv1359_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1360[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  lv1359_local[0i] = lv1359[(((v__1 * 448i) + i32(threadIdx.x)) + 64i)];
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 512i)], ((f32(((lv1359_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 513i)], ((f32(((lv1359_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 514i)], ((f32(((lv1359_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 515i)], ((f32(((lv1359_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 516i)], ((f32(((lv1359_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 517i)], ((f32(((lv1359_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 518i)], ((f32(((lv1359_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 519i)], ((f32(((lv1359_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  lv1359_local[0i] = lv1359[(((v__1 * 448i) + i32(threadIdx.x)) + 128i)];
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1024i)], ((f32(((lv1359_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1025i)], ((f32(((lv1359_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1026i)], ((f32(((lv1359_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1027i)], ((f32(((lv1359_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1028i)], ((f32(((lv1359_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1029i)], ((f32(((lv1359_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1030i)], ((f32(((lv1359_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1031i)], ((f32(((lv1359_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  lv1359_local[0i] = lv1359[(((v__1 * 448i) + i32(threadIdx.x)) + 192i)];
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1536i)], ((f32(((lv1359_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1537i)], ((f32(((lv1359_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1538i)], ((f32(((lv1359_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1539i)], ((f32(((lv1359_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1540i)], ((f32(((lv1359_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1541i)], ((f32(((lv1359_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1542i)], ((f32(((lv1359_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 1543i)], ((f32(((lv1359_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  lv1359_local[0i] = lv1359[(((v__1 * 448i) + i32(threadIdx.x)) + 256i)];
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2048i)], ((f32(((lv1359_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2049i)], ((f32(((lv1359_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2050i)], ((f32(((lv1359_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2051i)], ((f32(((lv1359_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2052i)], ((f32(((lv1359_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2053i)], ((f32(((lv1359_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2054i)], ((f32(((lv1359_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2055i)], ((f32(((lv1359_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  lv1359_local[0i] = lv1359[(((v__1 * 448i) + i32(threadIdx.x)) + 320i)];
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2560i)], ((f32(((lv1359_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2561i)], ((f32(((lv1359_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2562i)], ((f32(((lv1359_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2563i)], ((f32(((lv1359_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2564i)], ((f32(((lv1359_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2565i)], ((f32(((lv1359_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2566i)], ((f32(((lv1359_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 2567i)], ((f32(((lv1359_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  lv1359_local[0i] = lv1359[(((v__1 * 448i) + i32(threadIdx.x)) + 384i)];
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 3072i)], ((f32(((lv1359_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 3073i)], ((f32(((lv1359_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 3074i)], ((f32(((lv1359_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 3075i)], ((f32(((lv1359_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 3076i)], ((f32(((lv1359_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 3077i)], ((f32(((lv1359_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 3078i)], ((f32(((lv1359_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm58[((i32(threadIdx.x) * 8i) + 3079i)], ((f32(((lv1359_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1360[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local_1[0i] = 0.000000e+00f;
  NT_matmul_rf_local_1[0i] = (NT_matmul_rf_local_1[0i] + NT_matmul_rf_local[0i]);
  workgroupBarrier();
  red_buf0[i32(threadIdx.x)] = NT_matmul_rf_local_1[0i];
  workgroupBarrier();
  if (i32(threadIdx.x) < 32i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 16i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 8i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 4i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 2i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 1i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) == 0i) {
    NT_matmul[v__1] = red_buf0[0i];
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2266
; Schema: 0
               OpCapability Shader
         %77 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %rms_norm2_kernel "rms_norm2_kernel" %rms_norm2_kernel_workgroup_id_Input %rms_norm2_kernel_num_workgroups_Input %rms_norm2_kernel_local_invocation_id_Input
               OpExecutionMode %rms_norm2_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %PODArgs 0 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpName %red_buf0 "red_buf0"
               OpName %T_multiply_red_shared "T_multiply_red_shared"
               OpName %rms_norm2_kernel_workgroup_id_Input "rms_norm2_kernel_workgroup_id_Input"
               OpName %rms_norm2_kernel_num_workgroups_Input "rms_norm2_kernel_num_workgroups_Input"
               OpName %rms_norm2_kernel_local_invocation_id_Input "rms_norm2_kernel_local_invocation_id_Input"
               OpName %rms_norm2_kernel_inner "rms_norm2_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %T_multiply_red_rf_local "T_multiply_red_rf_local"
               OpName %rms_norm2_kernel "rms_norm2_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %12 DescriptorSet 0
               OpDecorate %12 Binding 3
               OpDecorate %12 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %_arr_float_uint_1 ArrayStride 4
               OpDecorate %rms_norm2_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %rms_norm2_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %rms_norm2_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
          %9 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %uint
%tint_symbol_7 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_7 = OpTypePointer Uniform %tint_symbol_7
         %12 = OpVariable %_ptr_Uniform_tint_symbol_7 Uniform
    %uint_64 = OpConstant %uint 64
%_arr_float_uint_64 = OpTypeArray %float %uint_64
%_ptr_Workgroup__arr_float_uint_64 = OpTypePointer Workgroup %_arr_float_uint_64
         %21 = OpConstantNull %_arr_float_uint_64
   %red_buf0 = OpVariable %_ptr_Workgroup__arr_float_uint_64 Workgroup %21
     %uint_1 = OpConstant %uint 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%_ptr_Workgroup__arr_float_uint_1 = OpTypePointer Workgroup %_arr_float_uint_1
         %26 = OpConstantNull %_arr_float_uint_1
%T_multiply_red_shared = OpVariable %_ptr_Workgroup__arr_float_uint_1 Workgroup %26
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%rms_norm2_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%rms_norm2_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint I
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 68
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %reshape_kernel "reshape_kernel" %reshape_kernel_workgroup_id_Input %reshape_kernel_num_workgroups_Input %reshape_kernel_local_invocation_id_Input
               OpExecutionMode %reshape_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %reshape_kernel_workgroup_id_Input "reshape_kernel_workgroup_id_Input"
               OpName %reshape_kernel_num_workgroups_Input "reshape_kernel_num_workgroups_Input"
               OpName %reshape_kernel_local_invocation_id_Input "reshape_kernel_local_invocation_id_Input"
               OpName %reshape_kernel_inner "reshape_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %reshape_kernel "reshape_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %reshape_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %reshape_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %reshape_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%reshape_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%reshape_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%reshape_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %25 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
         %62 = OpTypeFunction %void
%reshape_kernel_inner = OpFunction %void None %25
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %26 = OpLabel
         %27 = OpCompositeExtract %uint %blockIdx 2
         %28 = OpCompositeExtract %uint %gridDim 0
         %29 = OpIMul %uint %27 %28
         %30 = OpCompositeExtract %uint %blockIdx 0
         %31 = OpIAdd %uint %29 %30
         %32 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_1
         %36 = OpLoad %uint %32 None
         %37 = OpUGreaterThan %bool %31 %36
               OpSelectionMerge %39 None
               OpBranchConditional %37 %40 %39
         %40 = OpLabel
               OpReturn
         %39 = OpLabel
         %41 = OpCompositeExtract %uint %blockIdx 2
         %42 = OpCompositeExtract %uint %gridDim 0
         %43 = OpIMul %uint %41 %42
         %44 = OpCompositeExtract %uint %blockIdx 0
         %45 = OpIAdd %uint %43 %44
       %v__1 = OpBitcast %int %45
         %47 = OpIMul %int %v__1 %int_256
         %49 = OpCompositeExtract %uint %threadIdx 0
         %50 = OpBitcast %int %49
         %51 = OpIAdd %int %47 %50
         %52 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %51
         %54 = OpIMul %int %v__1 %int_256
         %55 = OpCompositeExtract %uint %threadIdx 0
         %56 = OpBitcast %int %55
         %57 = OpIAdd %int %54 %56
         %58 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %57
         %60 = OpLoad %float %58 None
               OpStore %52 %60 None
               OpReturn
               OpFunctionEnd
%reshape_kernel = OpFunction %void None %62
         %63 = OpLabel
         %64 = OpLoad %v3uint %reshape_kernel_workgroup_id_Input None
         %65 = OpLoad %v3uint %reshape_kernel_num_workgroups_Input None
         %66 = OpLoad %v3uint %reshape_kernel_local_invocation_id_Input None
         %67 = OpFunctionCall %void %reshape_kernel_inner %64 %65 %66
               OpReturn
               OpFunctionEnd

// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize3_NT_matmul7_kernel_2
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv457 : array<u32>;
@group(0) @binding(2) var<storage, read> lv458 : array<f32>;
@group(0) @binding(3) var<storage, read> rms_norm115 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> rms_norm115_reindex_pad_shared : array<f32, 256>;
var<workgroup> dequantize_reindex_shared : array<f32, 256>;
@compute @workgroup_size(8, 8, 1)
fn fused_fused_dequantize3_NT_matmul7_kernel_2(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_reindex_pad_local : array<f32, 16>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var var_1 : i32 = 0; var_1 < 1i; var_1++) {
    NT_matmul_intermediate_reindex_pad_local[0i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[1i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[2i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[3i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[4i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[5i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[6i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[7i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[8i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[9i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[10i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[11i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[12i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[13i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[14i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[15i] = 0.000000e+00f;
    for (var ax3_0 : i32 = 0; ax3_0 < 448i; ax3_0++) {
      workgroupBarrier();
      if ((((v__1 * 32i) + (i32(threadIdx.y) * 4i)) + (i32(threadIdx.x)>>1u)) < podArgs.seq_len) {
        rms_norm115_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = rms_norm115[(((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i))];
        rms_norm115_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = rms_norm115[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 1i)];
        rms_norm115_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = rms_norm115[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 2i)];
        rms_norm115_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = rms_norm115[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 3i)];
      } else {
        rms_norm115_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = 0.000000e+00f;
        rms_norm115_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = 0.000000e+00f;
        rms_norm115_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = 0.000000e+00f;
        rms_norm115_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = 0.000000e+00f;
      }
      dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = ((f32(((lv457[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32(((i32(threadIdx.x) & 1i) * 16i))) & 15u)) - 7.000000e+00f) * lv458[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = ((f32(((lv457[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 4i))) & 15u)) - 7.000000e+00f) * lv458[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = ((f32(((lv457[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 8i))) & 15u)) - 7.000000e+00f) * lv458[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = ((f32(((lv457[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 12i))) & 15u)) - 7.000000e+00f) * lv458[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      workgroupBarrier();
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm115_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm115_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm115_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm115_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm115_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[15i]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      NT_matmul[((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))] = NT_matmul_intermediate_reindex_pad_local[0i];
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)] = NT_matmul_intermediate_reindex_pad_local[1i];
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)] = NT_matmul_intermediate_reindex_pad_local[2i];
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)] = NT_matmul_intermediate_reindex_pad_local[3i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 37888i)] = NT_matmul_intermediate_reindex_pad_local[4i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 37889i)] = NT_matmul_intermediate_reindex_pad_local[5i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 37890i)] = NT_matmul_intermediate_reindex_pad_local[6i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 37891i)] = NT_matmul_intermediate_reindex_pad_local[7i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 75776i)] = NT_matmul_intermediate_reindex_pad_local[8i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 75777i)] = NT_matmul_intermediate_reindex_pad_local[9i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 75778i)] = NT_matmul_intermediate_reindex_pad_local[10i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 75779i)] = NT_matmul_intermediate_reindex_pad_local[11i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 113664i)] = NT_matmul_intermediate_reindex_pad_local[12i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 113665i)] = NT_matmul_intermediate_reindex_pad_local[13i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 113666i)] = NT_matmul_intermediate_reindex_pad_local[14i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 113667i)] = NT_matmul_intermediate_reindex_pad_local[15i];
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2284
; Schema: 0
               OpCapability Shader
        %101 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize3_NT_matmul2_kernel_1 "fused_fused_dequantize3_NT_matmul2_kernel_1" %fused_fused_dequantize3_NT_matmul2_kernel_1_workgroup_id_Input %fused_fused_dequantize3_NT_matmul2_kernel_1_num_workgroups_Input %fused_fused_dequantize3_NT_matmul2_kernel_1_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize3_NT_matmul2_kernel_1 LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_1_workgroup_id_Input "fused_fused_dequantize3_NT_matmul2_kernel_1_workgroup_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_1_num_workgroups_Input "fused_fused_dequantize3_NT_matmul2_kernel_1_num_workgroups_Input"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_1_local_invocation_id_Input "fused_fused_dequantize3_NT_matmul2_kernel_1_local_invocation_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_1_inner "fused_fused_dequantize3_NT_matmul2_kernel_1_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_1 "fused_fused_dequantize3_NT_matmul2_kernel_1"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize3_NT_matmul2_kernel_1_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize3_NT_matmul2_kernel_1_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize3_NT_matmul2_kernel_1_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_8 ArrayStride 4
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_fl
// Dumped WGSL:
//----------------------------------------
// Function: apply_penalty_inplace_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> logits : array<f32>;
@group(0) @binding(1) var<storage, read> penalties : array<f32>;
@group(0) @binding(2) var<storage, read> pos2seq_id : array<i32>;
@group(0) @binding(3) var<storage, read> seq_ids : array<i32>;
@group(0) @binding(4) var<storage, read> token_cnt : array<i32>;
@group(0) @binding(5) var<storage, read> token_ids : array<i32>;

struct PODArgs {
  batch_size: i32,
  num_seq: i32,
  num_token: i32,
  vocab_size: i32,
  packGridDimX: u32
}
@group(0) @binding(6) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn apply_penalty_inplace_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  if (((v__1 * 256i) + i32(threadIdx.x)) < podArgs.num_token) {
    logits[((seq_ids[pos2seq_id[((v__1 * 256i) + i32(threadIdx.x))]] * podArgs.vocab_size) + token_ids[((v__1 * 256i) + i32(threadIdx.x))])] = (logits[((seq_ids[pos2seq_id[((v__1 * 256i) + i32(threadIdx.x))]] * podArgs.vocab_size) + token_ids[((v__1 * 256i) + i32(threadIdx.x))])] - fma(f32(token_cnt[((v__1 * 256i) + i32(threadIdx.x))]), penalties[((pos2seq_id[((v__1 * 256i) + i32(threadIdx.x))] * 3i) + 1i)], penalties[(pos2seq_id[((v__1 * 256i) + i32(threadIdx.x))] * 3i)]));
    var condval : f32;
    if ((0.000000e+00f < logits[((seq_ids[pos2seq_id[((v__1 * 256i) + i32(threadIdx.x))]] * podArgs.vocab_size) + token_ids[((v__1 * 256i) + i32(threadIdx.x))])])) {
      condval = (logits[((seq_ids[pos2seq_id[((v__1 * 256i) + i32(threadIdx.x))]] * podArgs.vocab_size) + token_ids[((v__1 * 256i) + i32(threadIdx.x))])] * penalties[((pos2seq_id[((v__1 * 256i) + i32(threadIdx.x))] * 3i) + 2i)]);
} else {
      condval = (logits[((seq_ids[pos2seq_id[((v__1 * 256i) + i32(threadIdx.x))]] * podArgs.vocab_size) + token_ids[((v__1 * 256i) + i32(threadIdx.x))])] / penalties[((pos2seq_id[((v__1 * 256i) + i32(threadIdx.x))] * 3i) + 2i)]);
}
    logits[((seq_ids[pos2seq_id[((v__1 * 256i) + i32(threadIdx.x))]] * podArgs.vocab_size) + token_ids[((v__1 * 256i) + i32(threadIdx.x))])] = condval;
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv10 : array<f32>;
@group(0) @binding(2) var<storage, read> lv340 : array<f32>;
@group(0) @binding(3) var<storage, read> lv341 : array<f32>;
@group(0) @binding(4) var<storage, read> lv9 : array<u32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> lv341_reindex_pad_shared : array<f32, 256>;
var<workgroup> dequantize_reindex_shared : array<f32, 256>;
@compute @workgroup_size(8, 8, 1)
fn fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_reindex_pad_local : array<f32, 16>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var var_1 : i32 = 0; var_1 < 1i; var_1++) {
    NT_matmul_intermediate_reindex_pad_local[0i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[1i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[2i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[3i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[4i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[5i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[6i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[7i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[8i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[9i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[10i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[11i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[12i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[13i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[14i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[15i] = 0.000000e+00f;
    for (var ax3_0 : i32 = 0; ax3_0 < 2368i; ax3_0++) {
      workgroupBarrier();
      if ((((v__1 * 32i) + (i32(threadIdx.y) * 4i)) + (i32(threadIdx.x)>>1u)) < podArgs.batch_size) {
        lv341_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = lv341[(((((v__1 * 606208i) + (i32(threadIdx.y) * 75776i)) + ((i32(threadIdx.x)>>1u) * 18944i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i))];
        lv341_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = lv341[((((((v__1 * 606208i) + (i32(threadIdx.y) * 75776i)) + ((i32(threadIdx.x)>>1u) * 18944i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 1i)];
        lv341_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = lv341[((((((v__1 * 606208i) + (i32(threadIdx.y) * 75776i)) + ((i32(threadIdx.x)>>1u) * 18944i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 2i)];
        lv341_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = lv341[((((((v__1 * 606208i) + (i32(threadIdx.y) * 75776i)) + ((i32(threadIdx.x)>>1u) * 18944i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 3i)];
      } else {
        lv341_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = 0.000000e+00f;
        lv341_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = 0.000000e+00f;
        lv341_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = 0.000000e+00f;
        lv341_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = 0.000000e+00f;
      }
      dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = ((f32(((lv9[((((i32(blockIdx.y) * 75776i) + (i32(threadIdx.y) * 9472i)) + ((i32(threadIdx.x)>>1u) * 2368i)) + ax3_0)]>>u32(((i32(threadIdx.x) & 1i) * 16i))) & 15u)) - 7.000000e+00f) * lv10[((((i32(blockIdx.y) * 18944i) + (i32(threadIdx.y) * 2368i)) + ((i32(threadIdx.x)>>1u) * 592i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = ((f32(((lv9[((((i32(blockIdx.y) * 75776i) + (i32(threadIdx.y) * 9472i)) + ((i32(threadIdx.x)>>1u) * 2368i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 4i))) & 15u)) - 7.000000e+00f) * lv10[((((i32(blockIdx.y) * 18944i) + (i32(threadIdx.y) * 2368i)) + ((i32(threadIdx.x)>>1u) * 592i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = ((f32(((lv9[((((i32(blockIdx.y) * 75776i) + (i32(threadIdx.y) * 9472i)) + ((i32(threadIdx.x)>>1u) * 2368i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 8i))) & 15u)) - 7.000000e+00f) * lv10[((((i32(blockIdx.y) * 18944i) + (i32(threadIdx.y) * 2368i)) + ((i32(threadIdx.x)>>1u) * 592i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = ((f32(((lv9[((((i32(blockIdx.y) * 75776i) + (i32(threadIdx.y) * 9472i)) + ((i32(threadIdx.x)>>1u) * 2368i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 12i))) & 15u)) - 7.000000e+00f) * lv10[((((i32(blockIdx.y) * 18944i) + (i32(threadIdx.y) * 2368i)) + ((i32(threadIdx.x)>>1u) * 592i)) + (ax3_0>>2u))]);
      workgroupBarrier();
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv341_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv341_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv341_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv341_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv341_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[15i]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      T_add[((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))] = (NT_matmul_intermediate_reindex_pad_local[0i] + lv340[((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)] = (NT_matmul_intermediate_reindex_pad_local[1i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)] = (NT_matmul_intermediate_reindex_pad_local[2i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)] = (NT_matmul_intermediate_reindex_pad_local[3i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3584i)] = (NT_matmul_intermediate_reindex_pad_local[4i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3584i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3585i)] = (NT_matmul_intermediate_reindex_pad_local[5i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3585i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3586i)] = (NT_matmul_intermediate_reindex_pad_local[6i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3586i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3587i)] = (NT_matmul_intermediate_reindex_pad_local[7i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3587i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7168i)] = (NT_matmul_intermediate_reindex_pad_local[8i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7168i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7169i)] = (NT_matmul_intermediate_reindex_pad_local[9i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7169i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7170i)] = (NT_matmul_intermediate_reindex_pad_local[10i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7170i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7171i)] = (NT_matmul_intermediate_reindex_pad_local[11i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7171i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10752i)] = (NT_matmul_intermediate_reindex_pad_local[12i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10752i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10753i)] = (NT_matmul_intermediate_reindex_pad_local[13i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10753i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10754i)] = (NT_matmul_intermediate_reindex_pad_local[14i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10754i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10755i)] = (NT_matmul_intermediate_reindex_pad_local[15i] + lv340[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10755i)]);
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 264
; Schema: 0
               OpCapability Shader
        %144 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %apply_penalty_inplace_kernel "apply_penalty_inplace_kernel" %apply_penalty_inplace_kernel_workgroup_id_Input %apply_penalty_inplace_kernel_num_workgroups_Input %apply_penalty_inplace_kernel_local_invocation_id_Input
               OpExecutionMode %apply_penalty_inplace_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "num_seq"
               OpMemberName %PODArgs 2 "num_token"
               OpMemberName %PODArgs 3 "vocab_size"
               OpMemberName %PODArgs 4 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_13 0 "tint_symbol_12"
               OpName %tint_symbol_13 "tint_symbol_13"
               OpName %apply_penalty_inplace_kernel_workgroup_id_Input "apply_penalty_inplace_kernel_workgroup_id_Input"
               OpName %apply_penalty_inplace_kernel_num_workgroups_Input "apply_penalty_inplace_kernel_num_workgroups_Input"
               OpName %apply_penalty_inplace_kernel_local_invocation_id_Input "apply_penalty_inplace_kernel_local_invocation_id_Input"
               OpName %apply_penalty_inplace_kernel_inner "apply_penalty_inplace_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %condval "condval"
               OpName %apply_penalty_inplace_kernel "apply_penalty_inplace_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %PODArgs 2 Offset 8
               OpMemberDecorate %PODArgs 3 Offset 12
               OpMemberDecorate %PODArgs 4 Offset 16
               OpMemberDecorate %tint_symbol_13 0 Offset 0
               OpDecorate %tint_symbol_13 Block
               OpDecorate %23 DescriptorSet 0
               OpDecorate %23 Binding 6
               OpDecorate %23 NonWritable
               OpDecorate %apply_penalty_inplace_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %apply_penalty_inplace_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %apply_penalty_inplace_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_Storag
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1899
; Schema: 0
               OpCapability Shader
        %113 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize_NT_matmul14_kernel "fused_fused_dequantize_NT_matmul14_kernel" %fused_fused_dequantize_NT_matmul14_kernel_workgroup_id_Input %fused_fused_dequantize_NT_matmul14_kernel_num_workgroups_Input %fused_fused_dequantize_NT_matmul14_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize_NT_matmul14_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize_NT_matmul14_kernel_workgroup_id_Input "fused_fused_dequantize_NT_matmul14_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize_NT_matmul14_kernel_num_workgroups_Input "fused_fused_dequantize_NT_matmul14_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize_NT_matmul14_kernel_local_invocation_id_Input "fused_fused_dequantize_NT_matmul14_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize_NT_matmul14_kernel_inner "fused_fused_dequantize_NT_matmul14_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %NT_matmul_rf_local "NT_matmul_rf_local"
               OpName %lv1689_local "lv1689_local"
               OpName %NT_matmul_rf_local_1 "NT_matmul_rf_local_1"
               OpName %fused_fused_dequantize_NT_matmul14_kernel "fused_fused_dequantize_NT_matmul14_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize_NT_matmul14_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize_NT_matmul14_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize_NT_matmul14_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_1 ArrayStride 4
               OpDecorate %_arr_uint_uint_1 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
       %uint = OpTypeInt 32 0
%_runtimearr_uint = OpTypeRuntimeArray %uint
%tint_symbol_3 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
         %11 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBu
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2715
; Schema: 0
               OpCapability Shader
         %82 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %rms_norm_kernel "rms_norm_kernel" %rms_norm_kernel_workgroup_id_Input %rms_norm_kernel_num_workgroups_Input %rms_norm_kernel_local_invocation_id_Input
               OpExecutionMode %rms_norm_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpName %red_buf0 "red_buf0"
               OpName %T_multiply_red_shared "T_multiply_red_shared"
               OpName %rms_norm_kernel_workgroup_id_Input "rms_norm_kernel_workgroup_id_Input"
               OpName %rms_norm_kernel_num_workgroups_Input "rms_norm_kernel_num_workgroups_Input"
               OpName %rms_norm_kernel_local_invocation_id_Input "rms_norm_kernel_local_invocation_id_Input"
               OpName %rms_norm_kernel_inner "rms_norm_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %T_multiply_red_rf_local "T_multiply_red_rf_local"
               OpName %rms_norm_kernel "rms_norm_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %12 DescriptorSet 0
               OpDecorate %12 Binding 3
               OpDecorate %12 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %_arr_float_uint_1 ArrayStride 4
               OpDecorate %rms_norm_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %rms_norm_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %rms_norm_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
          %9 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_7 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_7 = OpTypePointer Uniform %tint_symbol_7
         %12 = OpVariable %_ptr_Uniform_tint_symbol_7 Uniform
    %uint_64 = OpConstant %uint 64
%_arr_float_uint_64 = OpTypeArray %float %uint_64
%_ptr_Workgroup__arr_float_uint_64 = OpTypePointer Workgroup %_arr_float_uint_64
         %22 = OpConstantNull %_arr_float_uint_64
   %red_buf0 = OpVariable %_ptr_Workgroup__arr_float_uint_64 Workgroup %22
     %uint_1 = OpConstant %uint 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%_ptr_Workgroup__arr_float_uint_1 = OpTypePointer Workgroup %_arr_float_uint_1
         %27 = OpConstantNull %_arr_float_uint_1
%T_multiply_red_shared = OpVariable %_ptr_Workgroup__arr_float_uint_1 Workgroup %27
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%rms_norm_kernel_workgroup_
// Dumped WGSL:
//----------------------------------------
// Function: batch_tree_attn_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read> k : array<f32>;
@group(0) @binding(1) var<storage, read> kv_indptr : array<i32>;
@group(0) @binding(2) var<storage, read_write> lse : array<f32>;
@group(0) @binding(3) var<storage, read> mask : array<i32>;
@group(0) @binding(4) var<storage, read> mn_indptr : array<i32>;
@group(0) @binding(5) var<storage, read_write> output : array<f32>;
@group(0) @binding(6) var<storage, read> q : array<f32>;
@group(0) @binding(7) var<storage, read> q_indptr : array<i32>;
@group(0) @binding(8) var<storage, read> q_rope_position : array<i32>;
@group(0) @binding(9) var<storage, read> v : array<vec2<f32>>;

struct PODArgs {
  attn_score_scaling_factor: f32,
  batch_size: i32,
  kv_indptr_elem_offset: i32,
  kv_len: i32,
  mask_elem_offset: i32,
  mn_indptr_elem_offset: i32,
  q_indptr_elem_offset: i32,
  q_rope_position_elem_offset: i32,
  qo_len: i32,
  rope_scale: f32,
  rope_theta: f32,
  rotary_mode: i32,
  tree_size: i32,
  packGridDimX: u32
}
@group(0) @binding(10) var<uniform> podArgs : PODArgs;

var<workgroup> m_smem : array<f32, 16>;
var<workgroup> d_smem : array<f32, 16>;
var<workgroup> Q_smem : array<f32, 2048>;
var<workgroup> K_smem : array<f32, 2048>;
var<workgroup> V_smem : array<f32, 2048>;
var<workgroup> S_smem : array<f32, 256>;
var<workgroup> m_prev_smem : array<f32, 16>;
@compute @workgroup_size(32, 4, 1)
fn batch_tree_attn_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var tile_id : array<i32, 1>;
  var batch_idx : array<i32, 1>;
  var batch_rows : array<i32, 1>;
  var batch_tiles : array<i32, 1>;
  var kv_chunk_len : array<i32, 1>;
  var O_local : array<f32, 16>;
  var S_local : array<f32, 2>;
  var m_prev : array<f32, 1>;
  var m_new : array<f32, 1>;
  var d_new : array<f32, 1>;
  tile_id[0i] = v__1;
  batch_idx[0i] = 0i;
  batch_rows[0i] = ((q_indptr[(podArgs.q_indptr_elem_offset + 1i)] * 7i) - (q_indptr[podArgs.q_indptr_elem_offset] * 7i));
  batch_tiles[0i] = ((batch_rows[0i] + 15i)>>4u);
  while (true) {
    if (!(((batch_idx[0i] < podArgs.batch_size)))) { break; }
    while (true) {
      if (!(((batch_tiles[0i] <= tile_id[0i]) && (batch_idx[0i] < podArgs.batch_size)))) { break; }
      tile_id[0i] = (tile_id[0i] - batch_tiles[0i]);
      batch_idx[0i] = (batch_idx[0i] + 1i);
      if (batch_idx[0i] < podArgs.batch_size) {
        let b_idx : i32 = batch_idx[0i];
        batch_rows[0i] = ((q_indptr[((b_idx + podArgs.q_indptr_elem_offset) + 1i)] * 7i) - (q_indptr[(b_idx + podArgs.q_indptr_elem_offset)] * 7i));
        batch_tiles[0i] = ((batch_rows[0i] + 15i)>>4u);
      }
    }
    if ((batch_idx[0i] < podArgs.batch_size)) {
      let b_idx_1 : i32 = batch_idx[0i];
      let LH_start : i32 = (tile_id[0i] * 16i);
      let q_indptr_val : i32 = q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)];
      kv_chunk_len[0i] = (kv_indptr[((b_idx_1 + podArgs.kv_indptr_elem_offset) + 1i)] - kv_indptr[(b_idx_1 + podArgs.kv_indptr_elem_offset)]);
      workgroupBarrier();
      if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
        m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = -5.000000e+04f;
        d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = 1.000000e+00f;
      }
      for (var li_1 : i32 = 0; li_1 < 4i; li_1++) {
        for (var lj_1 : i32 = 0; lj_1 < 4i; lj_1++) {
          O_local[((li_1 * 4i) + lj_1)] = 0.000000e+00f;
        }
      }
      workgroupBarrier();
      for (var li_lj_fused_0 : i32 = 0; li_lj_fused_0 < 8i; li_lj_fused_0++) {
        if (((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) + q_indptr_val) < q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]) {
          for (var li_lj_fused_3_s : i32 = 0; li_lj_fused_3_s < 2i; li_lj_fused_3_s++) {
            var condval : f32;
            if ((podArgs.rotary_mode == 1i)) {
              var condval_1 : f32;
              if (((i32(threadIdx.y) & 1i) < 1i)) {
                condval_1 = (q[(((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i)) + 64i)] * -1.000000e+00f);
} else {
                condval_1 = q[(((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i)) - 64i)];
}
              condval = fma(sin(((f32(q_rope_position[(((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) + q_indptr_val) + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (li_lj_fused_3_s * 2i))) * 7.812500e-03f)))), condval_1, (cos(((f32(q_rope_position[(((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) + q_indptr_val) + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (li_lj_fused_3_s * 2i))) * 7.812500e-03f)))) * q[((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i))]));
} else {
              condval = q[((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i))];
}
            Q_smem[(((li_lj_fused_0 * 256i) + ((i32(threadIdx.y)>>1u) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i))] = condval;
          }
        } else {
          let v__2 : i32 = (((li_lj_fused_0 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
          Q_smem[v__2 + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
          Q_smem[v__2 + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
        }
      }
      workgroupBarrier();
      for (var iterator : i32 = 0; iterator < ((kv_chunk_len[0i] + 15i)>>4u); iterator++) {
        let L_kv_base : i32 = kv_indptr[(b_idx_1 + podArgs.kv_indptr_elem_offset)];
        workgroupBarrier();
        for (var lz_ly_fused_0 : i32 = 0; lz_ly_fused_0 < 8i; lz_ly_fused_0++) {
          if ((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) < kv_chunk_len[0i]) {
            for (var lz_ly_fused_3_s : i32 = 0; lz_ly_fused_3_s < 2i; lz_ly_fused_3_s++) {
              var condval_2 : f32;
              if ((podArgs.rotary_mode == 1i)) {
                var condval_3 : f32;
                if (((i32(threadIdx.y) & 1i) < 1i)) {
                  condval_3 = (k[(((((((iterator * 8192i) + (lz_ly_fused_0 * 1024i)) + ((i32(threadIdx.y)>>1u) * 512i)) + (L_kv_base * 512i)) + (i32(blockIdx.y) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i)) + 64i)] * -1.000000e+00f);
} else {
                  condval_3 = k[(((((((iterator * 8192i) + (lz_ly_fused_0 * 1024i)) + ((i32(threadIdx.y)>>1u) * 512i)) + (L_kv_base * 512i)) + (i32(blockIdx.y) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i)) - 64i)];
}
                condval_2 = fma(sin(((f32(q_rope_position[(((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) + L_kv_base) + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (lz_ly_fused_3_s * 2i))) * 7.812500e-03f)))), condval_3, (cos(((f32(q_rope_position[(((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) + L_kv_base) + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (lz_ly_fused_3_s * 2i))) * 7.812500e-03f)))) * k[((((((iterator * 8192i) + (lz_ly_fused_0 * 1024i)) + ((i32(threadIdx.y)>>1u) * 512i)) + (L_kv_base * 512i)) + (i32(blockIdx.y) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i))]));
} else {
                condval_2 = k[((((((iterator * 8192i) + (lz_ly_fused_0 * 1024i)) + ((i32(threadIdx.y)>>1u) * 512i)) + (L_kv_base * 512i)) + (i32(blockIdx.y) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i))];
}
              K_smem[(((lz_ly_fused_0 * 256i) + ((i32(threadIdx.y)>>1u) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i))] = condval_2;
            }
            let v__3 : i32 = (((lz_ly_fused_0 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
            V_smem[v__3 + 0] = v[((((((((iterator * 8192i) + (lz_ly_fused_0 * 1024i)) + ((i32(threadIdx.y)>>1u) * 512i)) + (L_kv_base * 512i)) + (i32(blockIdx.y) * 128i)) + ((i32(threadIdx.y) & 1i) * 64i)) + (i32(threadIdx.x) * 2i)) / 2i)][0];
            V_smem[v__3 + 1] = v[((((((((iterator * 8192i) + (lz_ly_fused_0 * 1024i)) + ((i32(threadIdx.y)>>1u) * 512i)) + (L_kv_base * 512i)) + (i32(blockIdx.y) * 128i)) + ((i32(threadIdx.y) & 1i) * 64i)) + (i32(threadIdx.x) * 2i)) / 2i)][1];
          } else {
            let v__4 : i32 = (((lz_ly_fused_0 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
            K_smem[v__4 + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
            K_smem[v__4 + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
            V_smem[v__4 + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
            V_smem[v__4 + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
          }
        }
        workgroupBarrier();
        for (var lj_1_init : i32 = 0; lj_1_init < 2i; lj_1_init++) {
          S_local[lj_1_init] = 0.000000e+00f;
        }
        for (var lk_0 : i32 = 0; lk_0 < 16i; lk_0++) {
          for (var lj_1_1 : i32 = 0; lj_1_1 < 2i; lj_1_1++) {
            for (var lk_1 : i32 = 0; lk_1 < 8i; lk_1++) {
              S_local[lj_1_1] = fma(((Q_smem[((((i32(threadIdx.y) * 512i) + ((i32(threadIdx.x)>>3u) * 128i)) + (lk_0 * 8i)) + lk_1)] * K_smem[(((((i32(threadIdx.x) & 7i) * 256i) + (lj_1_1 * 128i)) + (lk_0 * 8i)) + lk_1)]) * podArgs.attn_score_scaling_factor), 1.275174e-01f, S_local[lj_1_1]);
            }
          }
        }
        workgroupBarrier();
        for (var lj_1_2 : i32 = 0; lj_1_2 < 2i; lj_1_2++) {
          S_smem[(((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lj_1_2)] = S_local[lj_1_2];
        }
        workgroupBarrier();
        if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
          m_prev[0i] = m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))];
          m_new[0i] = m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))];
          for (var j : i32 = 0; j < 16i; j++) {
            if ((((iterator * 16i) + j) < kv_chunk_len[0i]) && (mask[(((((iterator * 16i) + mn_indptr[(b_idx_1 + podArgs.mn_indptr_elem_offset)]) + ((((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) / 7i) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u)) * (q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)] - q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]))) + j) + podArgs.mask_elem_offset)] == 1i)) {
              m_new[0i] = max(m_new[0i], S_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j)]);
            }
          }
          d_new[0i] = (d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] * exp2((m_prev[0i] - m_new[0i])));
        }
        workgroupBarrier();
        for (var j_1 : i32 = 0; j_1 < 16i; j_1++) {
          if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
            if ((((iterator * 16i) + j_1) < kv_chunk_len[0i]) && (mask[(((((iterator * 16i) + mn_indptr[(b_idx_1 + podArgs.mn_indptr_elem_offset)]) + ((((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) / 7i) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u)) * (q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)] - q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]))) + j_1) + podArgs.mask_elem_offset)] == 1i)) {
              S_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_1)] = exp2((S_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_1)] - m_new[0i]));
            } else {
              S_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_1)] = exp2((-5.000000e+04f - m_new[0i]));
            }
          }
        }
        workgroupBarrier();
        if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
          for (var j_2 : i32 = 0; j_2 < 16i; j_2++) {
            d_new[0i] = (d_new[0i] + S_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_2)]);
          }
          m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = m_new[0i];
          d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = d_new[0i];
          m_prev_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = m_prev[0i];
        }
        workgroupBarrier();
        for (var li_1_init : i32 = 0; li_1_init < 4i; li_1_init++) {
          for (var lj_1_init_1 : i32 = 0; lj_1_init_1 < 4i; lj_1_init_1++) {
            O_local[((li_1_init * 4i) + lj_1_init_1)] = (O_local[((li_1_init * 4i) + lj_1_init_1)] * exp2((m_prev_smem[((i32(threadIdx.y) * 4i) + li_1_init)] - m_smem[((i32(threadIdx.y) * 4i) + li_1_init)])));
          }
        }
        for (var lk_0_1 : i32 = 0; lk_0_1 < 2i; lk_0_1++) {
          for (var lk_1_1 : i32 = 0; lk_1_1 < 8i; lk_1_1++) {
            for (var li_1_1 : i32 = 0; li_1_1 < 4i; li_1_1++) {
              for (var lj_1_3 : i32 = 0; lj_1_3 < 4i; lj_1_3++) {
                O_local[((li_1_1 * 4i) + lj_1_3)] = fma(S_smem[((((i32(threadIdx.y) * 64i) + (li_1_1 * 16i)) + (lk_0_1 * 8i)) + lk_1_1)], V_smem[((((lk_0_1 * 1024i) + (lk_1_1 * 128i)) + (i32(threadIdx.x) * 4i)) + lj_1_3)], O_local[((li_1_1 * 4i) + lj_1_3)]);
              }
            }
          }
        }
      }
      for (var li_1_2 : i32 = 0; li_1_2 < 4i; li_1_2++) {
        for (var lj_1_4 : i32 = 0; lj_1_4 < 4i; lj_1_4++) {
          let cur_L : i32 = ((((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) / 7i) + (((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) % 7i)>>31u)) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]);
          if (cur_L < q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]) {
            output[(((((cur_L * 3584i) + (i32(blockIdx.y) * 896i)) + ((((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) % 7i) + (7i & (((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) % 7i)>>31u))) * 128i)) + (i32(threadIdx.x) * 4i)) + lj_1_4)] = (O_local[((li_1_2 * 4i) + lj_1_4)] / d_smem[((i32(threadIdx.y) * 4i) + li_1_2)]);
          }
        }
      }
      if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
        let cur_L_1 : i32 = ((((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) / 7i) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u)) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]);
        if (cur_L_1 < q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]) {
          lse[(((cur_L_1 * 28i) + (i32(blockIdx.y) * 7i)) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i) + (7i & (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u))))] = (m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + log2(d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))]));
        }
      }
      tile_id[0i] = (tile_id[0i] + 16i);
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1899
; Schema: 0
               OpCapability Shader
        %113 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize3_NT_matmul12_kernel "fused_fused_dequantize3_NT_matmul12_kernel" %fused_fused_dequantize3_NT_matmul12_kernel_workgroup_id_Input %fused_fused_dequantize3_NT_matmul12_kernel_num_workgroups_Input %fused_fused_dequantize3_NT_matmul12_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize3_NT_matmul12_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize3_NT_matmul12_kernel_workgroup_id_Input "fused_fused_dequantize3_NT_matmul12_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul12_kernel_num_workgroups_Input "fused_fused_dequantize3_NT_matmul12_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize3_NT_matmul12_kernel_local_invocation_id_Input "fused_fused_dequantize3_NT_matmul12_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul12_kernel_inner "fused_fused_dequantize3_NT_matmul12_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %NT_matmul_rf_local "NT_matmul_rf_local"
               OpName %lv1359_local "lv1359_local"
               OpName %NT_matmul_rf_local_1 "NT_matmul_rf_local_1"
               OpName %fused_fused_dequantize3_NT_matmul12_kernel "fused_fused_dequantize3_NT_matmul12_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize3_NT_matmul12_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize3_NT_matmul12_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize3_NT_matmul12_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_1 ArrayStride 4
               OpDecorate %_arr_uint_uint_1 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
       %uint = OpTypeInt 32 0
%_runtimearr_uint = OpTypeRuntimeArray %uint
%tint_symbol_3 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
         %11 = OpVariable %_ptr_StorageBuffer_tint
// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize_take1_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_take : array<f32>;
@group(0) @binding(1) var<storage, read> input_ids : array<i32>;
@group(0) @binding(2) var<storage, read> lv1860 : array<u32>;
@group(0) @binding(3) var<storage, read> lv1861 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn fused_fused_dequantize_take1_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_take[((v__1 * 256i) + i32(threadIdx.x))] = ((f32(((lv1860[(((input_ids[(v__1 / 14i)] * 448i) + ((v__1 % 14i) * 32i)) + (i32(threadIdx.x)>>3u))]>>u32(((i32(threadIdx.x) & 7i) * 4i))) & 15u)) - 7.000000e+00f) * lv1861[(((input_ids[(v__1 / 14i)] * 112i) + ((v__1 % 14i) * 8i)) + (i32(threadIdx.x)>>5u))]);
}



// Dumped WGSL:
//----------------------------------------
// Function: batch_prefill_paged_kv_sliding_window_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read> k_rope_pos_offset : array<i32>;
@group(0) @binding(1) var<storage, read> length_info : array<i32>;
@group(0) @binding(2) var<storage, read_write> lse : array<f32>;
@group(0) @binding(3) var<storage, read_write> output : array<f32>;
@group(0) @binding(4) var<storage, read> page_indptr : array<i32>;
@group(0) @binding(5) var<storage, read> page_values : array<i32>;
@group(0) @binding(6) var<storage, read> pages : array<f32>;
@group(0) @binding(7) var<storage, read> q : array<f32>;
@group(0) @binding(8) var<storage, read> q_indptr : array<i32>;
@group(0) @binding(9) var<storage, read> q_rope_position : array<i32>;

struct PODArgs {
  attn_score_scaling_factor: f32,
  batch_size: i32,
  causal: i32,
  k_rope_pos_offset_elem_offset: i32,
  length_info_elem_offset: i32,
  max_num_pages: i32,
  nnz_pages: i32,
  page_indptr_elem_offset: i32,
  page_values_elem_offset: i32,
  q_indptr_elem_offset: i32,
  q_rope_position_elem_offset: i32,
  rope_scale: f32,
  rope_theta: f32,
  rotary_mode: i32,
  total_len: i32,
  packGridDimX: u32
}
@group(0) @binding(10) var<uniform> podArgs : PODArgs;

var<workgroup> m_smem : array<f32, 16>;
var<workgroup> d_smem : array<f32, 16>;
var<workgroup> Q_smem : array<f32, 2048>;
var<workgroup> K_smem : array<f32, 2048>;
var<workgroup> V_smem : array<f32, 2048>;
var<workgroup> m_prev_smem : array<f32, 16>;
@compute @workgroup_size(32, 4, 1)
fn batch_prefill_paged_kv_sliding_window_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var tile_id : array<i32, 1>;
  var batch_idx : array<i32, 1>;
  var batch_rows : array<i32, 1>;
  var batch_tiles : array<i32, 1>;
  var kv_chunk_len : array<i32, 1>;
  var O_local : array<f32, 16>;
  var S_local : array<f32, 2>;
  var m_prev : array<f32, 1>;
  var m_new : array<f32, 1>;
  var d_new : array<f32, 1>;
  tile_id[0i] = v__1;
  batch_idx[0i] = 0i;
  batch_rows[0i] = ((q_indptr[(podArgs.q_indptr_elem_offset + 1i)] * 7i) - (q_indptr[podArgs.q_indptr_elem_offset] * 7i));
  batch_tiles[0i] = ((batch_rows[0i] + 15i)>>4u);
  while (true) {
    if (!(((batch_idx[0i] < podArgs.batch_size)))) { break; }
    while (true) {
      if (!(((batch_tiles[0i] <= tile_id[0i]) && (batch_idx[0i] < podArgs.batch_size)))) { break; }
      tile_id[0i] = (tile_id[0i] - batch_tiles[0i]);
      batch_idx[0i] = (batch_idx[0i] + 1i);
      if (batch_idx[0i] < podArgs.batch_size) {
        let b_idx : i32 = batch_idx[0i];
        batch_rows[0i] = ((q_indptr[((b_idx + podArgs.q_indptr_elem_offset) + 1i)] * 7i) - (q_indptr[(b_idx + podArgs.q_indptr_elem_offset)] * 7i));
        batch_tiles[0i] = ((batch_rows[0i] + 15i)>>4u);
      }
    }
    if ((batch_idx[0i] < podArgs.batch_size)) {
      let b_idx_1 : i32 = batch_idx[0i];
      let LH_start : i32 = (tile_id[0i] * 16i);
      let q_indptr_val : i32 = q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)];
      let cur_page_indptr_begin : i32 = page_indptr[(b_idx_1 + podArgs.page_indptr_elem_offset)];
      let cur_page_indptr_end : i32 = page_indptr[((b_idx_1 + podArgs.page_indptr_elem_offset) + 1i)];
      var condval : i32;
      if ((cur_page_indptr_begin != cur_page_indptr_end)) {
        condval = ((((((cur_page_indptr_end * 16i) + length_info[(b_idx_1 + podArgs.length_info_elem_offset)]) + length_info[(((podArgs.batch_size * 2i) + b_idx_1) + podArgs.length_info_elem_offset)]) - length_info[((podArgs.batch_size + b_idx_1) + podArgs.length_info_elem_offset)]) - (cur_page_indptr_begin * 16i)) - 16i);
} else {
        condval = 0i;
}
      kv_chunk_len[0i] = condval;
      workgroupBarrier();
      if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
        m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = -5.000000e+04f;
        d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = 1.000000e+00f;
      }
      for (var li_1 : i32 = 0; li_1 < 4i; li_1++) {
        for (var lj_1 : i32 = 0; lj_1 < 4i; lj_1++) {
          O_local[((li_1 * 4i) + lj_1)] = 0.000000e+00f;
        }
      }
      workgroupBarrier();
      for (var li_lj_fused_0 : i32 = 0; li_lj_fused_0 < 8i; li_lj_fused_0++) {
        if (((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) + q_indptr_val) < q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]) {
          for (var li_lj_fused_3_s : i32 = 0; li_lj_fused_3_s < 2i; li_lj_fused_3_s++) {
            var condval_1 : f32;
            if ((podArgs.rotary_mode == 1i)) {
              var condval_2 : f32;
              if (((i32(threadIdx.y) & 1i) < 1i)) {
                condval_2 = (q[(((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i)) + 64i)] * -1.000000e+00f);
} else {
                condval_2 = q[(((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i)) - 64i)];
}
              condval_1 = fma(sin(((f32(q_rope_position[(((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) + q_indptr_val) + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (li_lj_fused_3_s * 2i))) * 7.812500e-03f)))), condval_2, (cos(((f32(q_rope_position[(((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) + q_indptr_val) + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (li_lj_fused_3_s * 2i))) * 7.812500e-03f)))) * q[((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i))]));
} else {
              condval_1 = q[((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i))];
}
            Q_smem[(((li_lj_fused_0 * 256i) + ((i32(threadIdx.y)>>1u) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i))] = condval_1;
          }
        } else {
          let v__2 : i32 = (((li_lj_fused_0 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
          Q_smem[v__2 + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
          Q_smem[v__2 + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
        }
      }
      workgroupBarrier();
      for (var iterator : i32 = 0; iterator < ((kv_chunk_len[0i] + 15i)>>4u); iterator++) {
        workgroupBarrier();
        for (var lz_ly_fused_0 : i32 = 0; lz_ly_fused_0 < 8i; lz_ly_fused_0++) {
          if ((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) < kv_chunk_len[0i]) {
                        var condval_3 : i32;
            if (((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) < length_info[(((podArgs.batch_size * 2i) + b_idx_1) + podArgs.length_info_elem_offset)])) {
              condval_3 = (((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u));
} else {
              condval_3 = (((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) + length_info[((podArgs.batch_size + b_idx_1) + podArgs.length_info_elem_offset)]) - length_info[(((podArgs.batch_size * 2i) + b_idx_1) + podArgs.length_info_elem_offset)]);
}
let seq_offset : i32 = condval_3;
            let page_no : i32 = page_values[(((seq_offset>>4u) + cur_page_indptr_begin) + podArgs.page_values_elem_offset)];
            for (var lz_ly_fused_3_s : i32 = 0; lz_ly_fused_3_s < 2i; lz_ly_fused_3_s++) {
              var condval_4 : f32;
              if ((podArgs.rotary_mode == 1i)) {
                var condval_5 : f32;
                if (((i32(threadIdx.y) & 1i) < 1i)) {
                  condval_5 = (pages[(((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((seq_offset & 15i) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i)) + 64i)] * -1.000000e+00f);
} else {
                  condval_5 = pages[(((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((seq_offset & 15i) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i)) - 64i)];
}
                condval_4 = fma(sin(((f32(((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) + k_rope_pos_offset[(b_idx_1 + podArgs.k_rope_pos_offset_elem_offset)])) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (lz_ly_fused_3_s * 2i))) * 7.812500e-03f)))), condval_5, (cos(((f32(((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) + k_rope_pos_offset[(b_idx_1 + podArgs.k_rope_pos_offset_elem_offset)])) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (lz_ly_fused_3_s * 2i))) * 7.812500e-03f)))) * pages[((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((seq_offset & 15i) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i))]));
} else {
                condval_4 = pages[((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((seq_offset & 15i) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i))];
}
              K_smem[(((lz_ly_fused_0 * 256i) + ((i32(threadIdx.y)>>1u) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i))] = condval_4;
            }
          } else {
            let v__3 : i32 = (((lz_ly_fused_0 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
            K_smem[v__3 + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
            K_smem[v__3 + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
          }
        }
        workgroupBarrier();
        for (var lz_ly_fused_0_1 : i32 = 0; lz_ly_fused_0_1 < 8i; lz_ly_fused_0_1++) {
          if ((((iterator * 16i) + (lz_ly_fused_0_1 * 2i)) + (i32(threadIdx.y)>>1u)) < kv_chunk_len[0i]) {
                        var condval_6 : i32;
            if (((((iterator * 16i) + (lz_ly_fused_0_1 * 2i)) + (i32(threadIdx.y)>>1u)) < length_info[(((podArgs.batch_size * 2i) + b_idx_1) + podArgs.length_info_elem_offset)])) {
              condval_6 = (((iterator * 16i) + (lz_ly_fused_0_1 * 2i)) + (i32(threadIdx.y)>>1u));
} else {
              condval_6 = (((((iterator * 16i) + (lz_ly_fused_0_1 * 2i)) + (i32(threadIdx.y)>>1u)) + length_info[((podArgs.batch_size + b_idx_1) + podArgs.length_info_elem_offset)]) - length_info[(((podArgs.batch_size * 2i) + b_idx_1) + podArgs.length_info_elem_offset)]);
}
let seq_offset_1 : i32 = condval_6;
            let page_no_1 : i32 = page_values[(((seq_offset_1>>4u) + cur_page_indptr_begin) + podArgs.page_values_elem_offset)];
            let v__4 : i32 = ((((((page_no_1 * 16384i) + (i32(blockIdx.y) * 2048i)) + ((seq_offset_1 & 15i) * 128i)) + ((i32(threadIdx.y) & 1i) * 64i)) + (i32(threadIdx.x) * 2i)) + 8192i);
            let v__5 : i32 = (((lz_ly_fused_0_1 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
            V_smem[v__5 + 0] = vec2<f32>(pages[v__4 + 0], pages[v__4 + 1])[0];
            V_smem[v__5 + 1] = vec2<f32>(pages[v__4 + 0], pages[v__4 + 1])[1];
          } else {
            let v__6 : i32 = (((lz_ly_fused_0_1 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
            V_smem[v__6 + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
            V_smem[v__6 + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
          }
        }
        workgroupBarrier();
        for (var lj_1_init : i32 = 0; lj_1_init < 2i; lj_1_init++) {
          S_local[lj_1_init] = 0.000000e+00f;
        }
        for (var lk_0 : i32 = 0; lk_0 < 16i; lk_0++) {
          for (var lj_1_1 : i32 = 0; lj_1_1 < 2i; lj_1_1++) {
            for (var lk_1 : i32 = 0; lk_1 < 8i; lk_1++) {
              S_local[lj_1_1] = fma(((Q_smem[((((i32(threadIdx.y) * 512i) + ((i32(threadIdx.x)>>3u) * 128i)) + (lk_0 * 8i)) + lk_1)] * K_smem[(((((i32(threadIdx.x) & 7i) * 256i) + (lj_1_1 * 128i)) + (lk_0 * 8i)) + lk_1)]) * podArgs.attn_score_scaling_factor), 1.275174e-01f, S_local[lj_1_1]);
            }
          }
        }
        workgroupBarrier();
        for (var lj_1_2 : i32 = 0; lj_1_2 < 2i; lj_1_2++) {
          K_smem[(((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lj_1_2)] = S_local[lj_1_2];
        }
        workgroupBarrier();
        if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
          m_prev[0i] = m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))];
          m_new[0i] = m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))];
          for (var j : i32 = 0; j < 16i; j++) {
            var condval_7 : bool;
            if ((0i < podArgs.causal)) {
              condval_7 = (((iterator * 16i) + j) <= ((((((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) / 7i) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u)) + kv_chunk_len[0i]) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]) - q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]));
} else {
              condval_7 = (((iterator * 16i) + j) < kv_chunk_len[0i]);
}
            if (condval_7) {
              m_new[0i] = max(m_new[0i], K_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j)]);
            }
          }
          d_new[0i] = (d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] * exp2((m_prev[0i] - m_new[0i])));
        }
        workgroupBarrier();
        for (var j_1 : i32 = 0; j_1 < 16i; j_1++) {
          if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
            var condval_8 : bool;
            if ((0i < podArgs.causal)) {
              condval_8 = (((iterator * 16i) + j_1) <= ((((((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) / 7i) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u)) + kv_chunk_len[0i]) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]) - q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]));
} else {
              condval_8 = (((iterator * 16i) + j_1) < kv_chunk_len[0i]);
}
            if (condval_8) {
              K_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_1)] = exp2((K_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_1)] - m_new[0i]));
            } else {
              K_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_1)] = exp2((-5.000000e+04f - m_new[0i]));
            }
          }
        }
        workgroupBarrier();
        if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
          for (var j_2 : i32 = 0; j_2 < 16i; j_2++) {
            d_new[0i] = (d_new[0i] + K_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_2)]);
          }
          m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = m_new[0i];
          d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = d_new[0i];
          m_prev_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = m_prev[0i];
        }
        workgroupBarrier();
        for (var li_1_init : i32 = 0; li_1_init < 4i; li_1_init++) {
          for (var lj_1_init_1 : i32 = 0; lj_1_init_1 < 4i; lj_1_init_1++) {
            O_local[((li_1_init * 4i) + lj_1_init_1)] = (O_local[((li_1_init * 4i) + lj_1_init_1)] * exp2((m_prev_smem[((i32(threadIdx.y) * 4i) + li_1_init)] - m_smem[((i32(threadIdx.y) * 4i) + li_1_init)])));
          }
        }
        for (var lk_0_1 : i32 = 0; lk_0_1 < 2i; lk_0_1++) {
          for (var lk_1_1 : i32 = 0; lk_1_1 < 8i; lk_1_1++) {
            for (var li_1_1 : i32 = 0; li_1_1 < 4i; li_1_1++) {
              for (var lj_1_3 : i32 = 0; lj_1_3 < 4i; lj_1_3++) {
                O_local[((li_1_1 * 4i) + lj_1_3)] = fma(K_smem[((((i32(threadIdx.y) * 64i) + (li_1_1 * 16i)) + (lk_0_1 * 8i)) + lk_1_1)], V_smem[((((lk_0_1 * 1024i) + (lk_1_1 * 128i)) + (i32(threadIdx.x) * 4i)) + lj_1_3)], O_local[((li_1_1 * 4i) + lj_1_3)]);
              }
            }
          }
        }
      }
      for (var li_1_2 : i32 = 0; li_1_2 < 4i; li_1_2++) {
        for (var lj_1_4 : i32 = 0; lj_1_4 < 4i; lj_1_4++) {
          let cur_L : i32 = ((((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) / 7i) + (((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) % 7i)>>31u)) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]);
          if (cur_L < q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]) {
            output[(((((cur_L * 3584i) + (i32(blockIdx.y) * 896i)) + ((((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) % 7i) + (7i & (((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) % 7i)>>31u))) * 128i)) + (i32(threadIdx.x) * 4i)) + lj_1_4)] = (O_local[((li_1_2 * 4i) + lj_1_4)] / d_smem[((i32(threadIdx.y) * 4i) + li_1_2)]);
          }
        }
      }
      if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
        let cur_L_1 : i32 = ((((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) / 7i) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u)) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]);
        if (cur_L_1 < q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]) {
          lse[(((cur_L_1 * 28i) + (i32(blockIdx.y) * 7i)) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i) + (7i & (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u))))] = (m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + log2(d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))]));
        }
      }
      tile_id[0i] = (tile_id[0i] + 16i);
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 152
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize_take1_kernel "fused_fused_dequantize_take1_kernel" %fused_fused_dequantize_take1_kernel_workgroup_id_Input %fused_fused_dequantize_take1_kernel_num_workgroups_Input %fused_fused_dequantize_take1_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize_take1_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %fused_fused_dequantize_take1_kernel_workgroup_id_Input "fused_fused_dequantize_take1_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize_take1_kernel_num_workgroups_Input "fused_fused_dequantize_take1_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize_take1_kernel_local_invocation_id_Input "fused_fused_dequantize_take1_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize_take1_kernel_inner "fused_fused_dequantize_take1_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_mod_i32 "tint_mod_i32"
               OpName %lhs_0 "lhs"
               OpName %rhs_0 "rhs"
               OpName %fused_fused_dequantize_take1_kernel "fused_fused_dequantize_take1_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %16 DescriptorSet 0
               OpDecorate %16 Binding 3
               OpDecorate %16 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %19 DescriptorSet 0
               OpDecorate %19 Binding 4
               OpDecorate %19 NonWritable
               OpDecorate %fused_fused_dequantize_take1_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize_take1_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize_take1_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
        %int = OpTypeInt 32 1
%_runtimearr_int = OpTypeRuntimeArray %int
%tint_symbol_3 = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
       %uint = OpTypeInt 32 0
%_runtimearr_uint = OpTypeRuntimeArray %uint
%tint_symbol_5 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
         %11 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
%tint_symbol_7 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_7 = OpTy
// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize3_NT_matmul2_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv6 : array<u32>;
@group(0) @binding(2) var<storage, read> lv7 : array<f32>;
@group(0) @binding(3) var<storage, read> rms_norm172 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize3_NT_matmul2_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 4>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 4>;
  var NT_matmul_intermediate_pad_local : array<f32, 4>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 2i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv6[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv7[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv6[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv7[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 2i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 2i) + 1i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm172[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 2i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 2i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.batch_size + 1i)>>1u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 2i) + ax0) < podArgs.batch_size)) {
        NT_matmul[((((i32(blockIdx.y) * 75776i) + (ax0 * 37888i)) + (v__1 * 2i)) + ax1_fused_2)] = NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)];
      }
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize3_NT_matmul2_kernel_2
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv6 : array<u32>;
@group(0) @binding(2) var<storage, read> lv7 : array<f32>;
@group(0) @binding(3) var<storage, read> rms_norm172 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> rms_norm172_reindex_pad_shared : array<f32, 256>;
var<workgroup> dequantize_reindex_shared : array<f32, 256>;
@compute @workgroup_size(8, 8, 1)
fn fused_fused_dequantize3_NT_matmul2_kernel_2(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_reindex_pad_local : array<f32, 16>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var var_1 : i32 = 0; var_1 < 1i; var_1++) {
    NT_matmul_intermediate_reindex_pad_local[0i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[1i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[2i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[3i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[4i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[5i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[6i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[7i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[8i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[9i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[10i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[11i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[12i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[13i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[14i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[15i] = 0.000000e+00f;
    for (var ax3_0 : i32 = 0; ax3_0 < 448i; ax3_0++) {
      workgroupBarrier();
      if ((((v__1 * 32i) + (i32(threadIdx.y) * 4i)) + (i32(threadIdx.x)>>1u)) < podArgs.batch_size) {
        rms_norm172_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = rms_norm172[(((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i))];
        rms_norm172_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = rms_norm172[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 1i)];
        rms_norm172_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = rms_norm172[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 2i)];
        rms_norm172_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = rms_norm172[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 3i)];
      } else {
        rms_norm172_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = 0.000000e+00f;
        rms_norm172_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = 0.000000e+00f;
        rms_norm172_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = 0.000000e+00f;
        rms_norm172_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = 0.000000e+00f;
      }
      dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = ((f32(((lv6[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32(((i32(threadIdx.x) & 1i) * 16i))) & 15u)) - 7.000000e+00f) * lv7[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = ((f32(((lv6[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 4i))) & 15u)) - 7.000000e+00f) * lv7[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = ((f32(((lv6[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 8i))) & 15u)) - 7.000000e+00f) * lv7[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = ((f32(((lv6[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 12i))) & 15u)) - 7.000000e+00f) * lv7[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      workgroupBarrier();
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm172_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm172_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm172_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm172_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm172_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[15i]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      NT_matmul[((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))] = NT_matmul_intermediate_reindex_pad_local[0i];
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)] = NT_matmul_intermediate_reindex_pad_local[1i];
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)] = NT_matmul_intermediate_reindex_pad_local[2i];
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)] = NT_matmul_intermediate_reindex_pad_local[3i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 37888i)] = NT_matmul_intermediate_reindex_pad_local[4i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 37889i)] = NT_matmul_intermediate_reindex_pad_local[5i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 37890i)] = NT_matmul_intermediate_reindex_pad_local[6i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 37891i)] = NT_matmul_intermediate_reindex_pad_local[7i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 75776i)] = NT_matmul_intermediate_reindex_pad_local[8i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 75777i)] = NT_matmul_intermediate_reindex_pad_local[9i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 75778i)] = NT_matmul_intermediate_reindex_pad_local[10i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 75779i)] = NT_matmul_intermediate_reindex_pad_local[11i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 113664i)] = NT_matmul_intermediate_reindex_pad_local[12i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 113665i)] = NT_matmul_intermediate_reindex_pad_local[13i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 113666i)] = NT_matmul_intermediate_reindex_pad_local[14i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 1212416i) + (i32(threadIdx.x) * 151552i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 113667i)] = NT_matmul_intermediate_reindex_pad_local[15i];
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 3612
; Schema: 0
               OpCapability Shader
        %152 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize3_NT_matmul7_kernel_2 "fused_fused_dequantize3_NT_matmul7_kernel_2" %fused_fused_dequantize3_NT_matmul7_kernel_2_workgroup_id_Input %fused_fused_dequantize3_NT_matmul7_kernel_2_num_workgroups_Input %fused_fused_dequantize3_NT_matmul7_kernel_2_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize3_NT_matmul7_kernel_2 LocalSize 8 8 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %rms_norm115_reindex_pad_shared "rms_norm115_reindex_pad_shared"
               OpName %dequantize_reindex_shared "dequantize_reindex_shared"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_2_workgroup_id_Input "fused_fused_dequantize3_NT_matmul7_kernel_2_workgroup_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_2_num_workgroups_Input "fused_fused_dequantize3_NT_matmul7_kernel_2_num_workgroups_Input"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_2_local_invocation_id_Input "fused_fused_dequantize3_NT_matmul7_kernel_2_local_invocation_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_2_inner "fused_fused_dequantize3_NT_matmul7_kernel_2_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_reindex_pad_local "NT_matmul_intermediate_reindex_pad_local"
               OpName %v__1 "v__1"
               OpName %var_1 "var_1"
               OpName %ax3_0 "ax3_0"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_2 "fused_fused_dequantize3_NT_matmul7_kernel_2"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_256 ArrayStride 4
               OpDecorate %fused_fused_dequantize3_NT_matmul7_kernel_2_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize3_NT_matmul7_kernel_2_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize3_NT_matmul7_kernel_2_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
       %uint = OpTypeInt 32 0
%_runtimearr_uint = OpTypeRuntimeArray %uint
%tint_symbol_3 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
         %11 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
%tint_symbol_7 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_7 = OpTypePointer StorageBuffer %tint_symbol_7
         %14 = OpVariable %_ptr_StorageBuffer_tint_symbol_7 StorageBuffer
        %int = OpTypeInt 32 1
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_9 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_9 = OpTypePointer Uniform %tint_symbol_9
         %17 = OpVariable %_ptr_Uniform_tint_symbol_9 Uniform
   %uint_256 = OpConstant %uint 256
%_arr_float_uint_256 = OpTypeArray %float %uint_256
%_ptr_Workgroup__arr_float_uint_256 = OpTypePointer Workgroup %_arr_float_uint_256
         %26 = OpConstantNull %_arr_float_uint_256
%rms_norm115_reindex_pad_shared = OpVariable %_ptr_Workgroup__arr_float_uint_256 Workgroup %26
%dequantize_reindex_shared = OpVariable %_ptr_Workgroup__arr_float_uint_256 Workgroup %26
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%fused_fused_dequantize3_NT_matmul7_kernel_2_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%fused_fused_dequantize3_NT_matmul7_kernel_2_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%fused_fused_dequantize3_NT_matmul7_kernel_2_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %38 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %uint_16 = OpConstant %uint 16
%_arr_float_uint_16 = OpTypeArray %float %uint_16
%_ptr_Function__arr_float_uint_16 = OpTypePointer Function %_arr_float_uint_16
         %58 = OpConstantNull %_arr_float_uint_16
%_ptr_Function_int = OpTypePointer Function %int
      %int_0 = OpConstant %int 0
      %int_1 = OpConstant %int 1
%_ptr_Function_float = OpTypePointer Function %float
    %float_0 = OpConstant %float 0
     %uint_2 = OpConstant %uint 2
     %uint_3 = OpConstant %uint 3
     %uint_4 = OpConstant %uint 4
     %uint_5 = OpConstant %uint 5
     %uint_6 = OpConstant %uint 6
     %uint_7 = OpConstant %uint 7
     %uint_8 = OpConstant %uint 8
     %uint_9 = OpConstant %uint 9
    %uint_10 = OpConstant %uint 10
    %uint_11 = OpConstant %uint 11
    %uint_12 = OpConstant %uint 12
    %uint_13 = OpConstant %uint 13
    %uint_14 = OpConstant %uint 14
    %uint_15 = OpConstant %uint 15
    %int_448 = OpConstant %int 448
   %uint_264 = OpConstant %uint 264
     %int_32 = OpConstant %int 32
      %int_4 = OpConstant %int 4
    %uint_31 = OpConstant %uint 31
%_ptr_Uniform_int = OpTypePointer Uniform %int
   %uint_255 = OpConstant %uint 255
%_ptr_Workgroup_float = OpTypePointer Workgroup %float
 %int_114688 = OpConstant %int 114688
  %int_14336 = OpConstant %int 14336
   %int_3584 = OpConstant %int 3584
      %int_8 = OpConstant %int 8
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
   %int_1792 = OpConstant %int 1792
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
     %int_16 = OpConstant %int 16
    %float_7 = OpConstant %float 7
    %int_112 = OpConstant %int 112
     %int_12 = OpConstant %int 12
     %int_24 = OpConstant %int 24
      %int_9 = OpConstant %int 9
     %int_17 = OpConstant %int 17
     %int_25 = OpConstant %int 25
     %int_10 = OpConstant %int 10
     %int_18 = OpConstant %int 18
     %int_26 = OpConstant %int 26
     %int_11 = OpConstant %int 11
     %int_19 = OpConstant %int 19
     %int_27 = OpConstant %int 27
     %int_20 = OpConstant %int 20
     %int_28 = OpConstant %int 28
      %int_5 = OpConstant %int 5
     %int_13 = OpConstant %int 13
     %int_21 = OpConstant %int 21
     %int_29 = OpConstant %int 29
      %int_6 = OpConstant %int 6
     %int_14 = OpConstant %int 14
     %int_22 = OpConstant %int 22
     %int_30 = OpConstant %int 30
      %int_7 = OpConstant %int 7
     %int_15 = OpConstant %int 15
     %int_23 = OpConstant %int 23
     %int_31 = OpConstant %int 31
%int_1212416 = OpConstant %int 1212416
 %int_151552 = OpConstant %int 151552
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
  %int_37888 = OpConstant %int 37888
  %int_37889 = OpConstant %int 37889
  %int_37890 = OpConstant %int 37890
  %int_37891 = OpConstant %int 37891
  %int_75776 = OpConstant %int 75776
  %int_75777 = OpConstant %int 75777
  %int_75778 = OpConstant %int 75778
  %int_75779 = OpConstant %int 75779
 %int_113664 = OpConstant %int 113664
 %int_113665 = OpConstant %int 113665
 %int_113666 = OpConstant %int 113666
 %int_113667 = OpConstant %int 113667
       %3606 = OpTypeFunction %void
%fused_fused_dequantize3_NT_matmul7_kernel_2_inner = OpFunction %void None %38
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %39 = OpLabel
%NT_matmul_intermediate_reindex_pad_local = OpVariable %_ptr_Function__arr_float_uint_16 Function %58
      %var_1 = OpVariable %_ptr_Function_int Function
      %ax3_0 = OpVariable %_ptr_Function_int Function
         %40 = OpCompositeExtract %uint %blockIdx 2
         %41 = OpCompositeExtract %uint %gridDim 0
         %42 = OpIMul %uint %40 %41
         %43 = OpCompositeExtract %uint %blockIdx 0
         %44 = OpIAdd %uint %42 %43
         %45 = OpAccessChain %_ptr_Uniform_uint %17 %uint_0 %uint_1
         %49 = OpLoad %uint %45 None
         %50 = OpUGreaterThan %bool %44 %49
               OpSelectionMerge %52 None
               OpBranchConditional %50 %53 %52
         %53 = OpLabel
               OpReturn
         %52 = OpLabel
         %59 = OpCompositeExtract %uint %blockIdx 2
         %60 = OpCompositeExtract %uint %gridDim 0
         %61 = OpIMul %uint %59 %60
         %62 = OpCompositeExtract %uint %blockIdx 0
         %63 = OpIAdd %uint %61 %62
       %v__1 = OpBitcast %int %63
               OpBranch %65
         %65 = OpLabel
               OpStore %var_1 %int_0
               OpBranch %68
         %68 = OpLabel
               OpLoopMerge %69 %67 None
               OpBranch %66
         %66 = OpLabel
         %73 = OpLoad %int %var_1 None
         %74 = OpSLessThan %bool %73 %int_1
               OpSelectionMerge %76 None
               OpBranchConditional %74 %76 %77
         %77 = OpLabel
               OpBranch %69
         %76 = OpLabel
         %78 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
               OpStore %78 %float_0 None
         %81 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
               OpStore %81 %float_0 None
         %82 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
               OpStore %82 %float_0 None
         %84 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
               OpStore %84 %float_0 None
         %86 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
               OpStore %86 %float_0 None
         %88 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
               OpStore %88 %float_0 None
         %90 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
               OpStore %90 %float_0 None
         %92 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
               OpStore %92 %float_0 None
         %94 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
               OpStore %94 %float_0 None
         %96 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
               OpStore %96 %float_0 None
         %98 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
               OpStore %98 %float_0 None
        %100 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
               OpStore %100 %float_0 None
        %102 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
               OpStore %102 %float_0 None
        %104 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
               OpStore %104 %float_0 None
        %106 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
               OpStore %106 %float_0 None
        %108 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
               OpStore %108 %float_0 None
               OpBranch %110
        %110 = OpLabel
               OpStore %ax3_0 %int_0
               OpBranch %113
        %113 = OpLabel
               OpLoopMerge %114 %112 None
               OpBranch %111
        %111 = OpLabel
        %116 = OpLoad %int %ax3_0 None
        %117 = OpSLessThan %bool %116 %int_448
               OpSelectionMerge %119 None
               OpBranchConditional %117 %119 %120
        %120 = OpLabel
               OpBranch %114
        %119 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
        %123 = OpIMul %int %v__1 %int_32
        %125 = OpCompositeExtract %uint %threadIdx 1
        %126 = OpBitcast %int %125
        %127 = OpIMul %int %126 %int_4
        %129 = OpIAdd %int %123 %127
        %130 = OpCompositeExtract %uint %threadIdx 0
        %131 = OpBitcast %int %130
        %132 = OpBitwiseAnd %uint %uint_1 %uint_31
        %134 = OpShiftRightArithmetic %int %131 %132
        %135 = OpIAdd %int %129 %134
        %136 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
        %138 = OpLoad %int %136 None
        %139 = OpSLessThan %bool %135 %138
               OpSelectionMerge %140 None
               OpBranchConditional %139 %141 %142
        %141 = OpLabel
        %143 = OpCompositeExtract %uint %threadIdx 1
        %144 = OpBitcast %int %143
        %145 = OpIMul %int %144 %int_32
        %146 = OpCompositeExtract %uint %threadIdx 0
        %147 = OpBitcast %int %146
        %148 = OpIMul %int %147 %int_4
        %149 = OpIAdd %int %145 %148
        %150 = OpBitcast %uint %149
        %151 = OpExtInst %uint %152 UMin %150 %uint_255
        %154 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %151
        %156 = OpIMul %int %v__1 %int_114688
        %158 = OpCompositeExtract %uint %threadIdx 1
        %159 = OpBitcast %int %158
        %160 = OpIMul %int %159 %int_14336
        %162 = OpIAdd %int %156 %160
        %163 = OpCompositeExtract %uint %threadIdx 0
        %164 = OpBitcast %int %163
        %165 = OpBitwiseAnd %uint %uint_1 %uint_31
        %166 = OpShiftRightArithmetic %int %164 %165
        %167 = OpIMul %int %166 %int_3584
        %169 = OpIAdd %int %162 %167
        %170 = OpLoad %int %ax3_0 None
        %171 = OpIMul %int %170 %int_8
        %173 = OpIAdd %int %169 %171
        %174 = OpCompositeExtract %uint %threadIdx 0
        %175 = OpBitcast %int %174
        %176 = OpBitwiseAnd %int %175 %int_1
        %177 = OpIMul %int %176 %int_4
        %178 = OpIAdd %int %173 %177
        %179 = OpAccessChain %_ptr_StorageBuffer_float %14 %uint_0 %178
        %181 = OpLoad %float %179 None
               OpStore %154 %181 None
        %182 = OpCompositeExtract %uint %threadIdx 1
        %183 = OpBitcast %int %182
        %184 = OpIMul %int %183 %int_32
        %185 = OpCompositeExtract %uint %threadIdx 0
        %186 = OpBitcast %int %185
        %187 = OpIMul %int %186 %int_4
        %188 = OpIAdd %int %184 %187
        %189 = OpIAdd %int %188 %int_1
        %190 = OpBitcast %uint %189
        %191 = OpExtInst %uint %152 UMin %190 %uint_255
        %192 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %191
        %193 = OpIMul %int %v__1 %int_114688
        %194 = OpCompositeExtract %uint %threadIdx 1
        %195 = OpBitcast %int %194
        %196 = OpIMul %int %195 %int_14336
        %197 = OpIAdd %int %193 %196
        %198 = OpCompositeExtract %uint %threadIdx 0
        %199 = OpBitcast %int %198
        %200 = OpBitwiseAnd %uint %uint_1 %uint_31
        %201 = OpShiftRightArithmetic %int %199 %200
        %202 = OpIMul %int %201 %int_3584
        %203 = OpIAdd %int %197 %202
        %204 = OpLoad %int %ax3_0 None
        %205 = OpIMul %int %204 %int_8
        %206 = OpIAdd %int %203 %205
        %207 = OpCompositeExtract %uint %threadIdx 0
        %208 = OpBitcast %int %207
        %209 = OpBitwiseAnd %int %208 %int_1
        %210 = OpIMul %int %209 %int_4
        %211 = OpIAdd %int %206 %210
        %212 = OpIAdd %int %211 %int_1
        %213 = OpAccessChain %_ptr_StorageBuffer_float %14 %uint_0 %212
        %214 = OpLoad %float %213 None
               OpStore %192 %214 None
        %215 = OpCompositeExtract %uint %threadIdx 1
        %216 = OpBitcast %int %215
        %217 = OpIMul %int %216 %int_32
        %218 = OpCompositeExtract %uint %threadIdx 0
        %219 = OpBitcast %int %218
        %220 = OpIMul %int %219 %int_4
        %221 = OpIAdd %int %217 %220
        %222 = OpIAdd %int %221 %int_2
        %224 = OpBitcast %uint %222
        %225 = OpExtInst %uint %152 UMin %224 %uint_255
        %226 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %225
        %227 = OpIMul %int %v__1 %int_114688
        %228 = OpCompositeExtract %uint %threadIdx 1
        %229 = OpBitcast %int %228
        %230 = OpIMul %int %229 %int_14336
        %231 = OpIAdd %int %227 %230
        %232 = OpCompositeExtract %uint %threadIdx 0
        %233 = OpBitcast %int %232
        %234 = OpBitwiseAnd %uint %uint_1 %uint_31
        %235 = OpShiftRightArithmetic %int %233 %234
        %236 = OpIMul %int %235 %int_3584
        %237 = OpIAdd %int %231 %236
        %238 = OpLoad %int %ax3_0 None
        %239 = OpIMul %int %238 %int_8
        %240 = OpIAdd %int %237 %239
        %241 = OpCompositeExtract %uint %threadIdx 0
        %242 = OpBitcast %int %241
        %243 = OpBitwiseAnd %int %242 %int_1
        %244 = OpIMul %int %243 %int_4
        %245 = OpIAdd %int %240 %244
        %246 = OpIAdd %int %245 %int_2
        %247 = OpAccessChain %_ptr_StorageBuffer_float %14 %uint_0 %246
        %248 = OpLoad %float %247 None
               OpStore %226 %248 None
        %249 = OpCompositeExtract %uint %threadIdx 1
        %250 = OpBitcast %int %249
        %251 = OpIMul %int %250 %int_32
        %252 = OpCompositeExtract %uint %threadIdx 0
        %253 = OpBitcast %int %252
        %254 = OpIMul %int %253 %int_4
        %255 = OpIAdd %int %251 %254
        %256 = OpIAdd %int %255 %int_3
        %258 = OpBitcast %uint %256
        %259 = OpExtInst %uint %152 UMin %258 %uint_255
        %260 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %259
        %261 = OpIMul %int %v__1 %int_114688
        %262 = OpCompositeExtract %uint %threadIdx 1
        %263 = OpBitcast %int %262
        %264 = OpIMul %int %263 %int_14336
        %265 = OpIAdd %int %261 %264
        %266 = OpCompositeExtract %uint %threadIdx 0
        %267 = OpBitcast %int %266
        %268 = OpBitwiseAnd %uint %uint_1 %uint_31
        %269 = OpShiftRightArithmetic %int %267 %268
        %270 = OpIMul %int %269 %int_3584
        %271 = OpIAdd %int %265 %270
        %272 = OpLoad %int %ax3_0 None
        %273 = OpIMul %int %272 %int_8
        %274 = OpIAdd %int %271 %273
        %275 = OpCompositeExtract %uint %threadIdx 0
        %276 = OpBitcast %int %275
        %277 = OpBitwiseAnd %int %276 %int_1
        %278 = OpIMul %int %277 %int_4
        %279 = OpIAdd %int %274 %278
        %280 = OpIAdd %int %279 %int_3
        %281 = OpAccessChain %_ptr_StorageBuffer_float %14 %uint_0 %280
        %282 = OpLoad %float %281 None
               OpStore %260 %282 None
               OpBranch %140
        %142 = OpLabel
        %283 = OpCompositeExtract %uint %threadIdx 1
        %284 = OpBitcast %int %283
        %285 = OpIMul %int %284 %int_32
        %286 = OpCompositeExtract %uint %threadIdx 0
        %287 = OpBitcast %int %286
        %288 = OpIMul %int %287 %int_4
        %289 = OpIAdd %int %285 %288
        %290 = OpBitcast %uint %289
        %291 = OpExtInst %uint %152 UMin %290 %uint_255
        %292 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %291
               OpStore %292 %float_0 None
        %293 = OpCompositeExtract %uint %threadIdx 1
        %294 = OpBitcast %int %293
        %295 = OpIMul %int %294 %int_32
        %296 = OpCompositeExtract %uint %threadIdx 0
        %297 = OpBitcast %int %296
        %298 = OpIMul %int %297 %int_4
        %299 = OpIAdd %int %295 %298
        %300 = OpIAdd %int %299 %int_1
        %301 = OpBitcast %uint %300
        %302 = OpExtInst %uint %152 UMin %301 %uint_255
        %303 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %302
               OpStore %303 %float_0 None
        %304 = OpCompositeExtract %uint %threadIdx 1
        %305 = OpBitcast %int %304
        %306 = OpIMul %int %305 %int_32
        %307 = OpCompositeExtract %uint %threadIdx 0
        %308 = OpBitcast %int %307
        %309 = OpIMul %int %308 %int_4
        %310 = OpIAdd %int %306 %309
        %311 = OpIAdd %int %310 %int_2
        %312 = OpBitcast %uint %311
        %313 = OpExtInst %uint %152 UMin %312 %uint_255
        %314 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %313
               OpStore %314 %float_0 None
        %315 = OpCompositeExtract %uint %threadIdx 1
        %316 = OpBitcast %int %315
        %317 = OpIMul %int %316 %int_32
        %318 = OpCompositeExtract %uint %threadIdx 0
        %319 = OpBitcast %int %318
        %320 = OpIMul %int %319 %int_4
        %321 = OpIAdd %int %317 %320
        %322 = OpIAdd %int %321 %int_3
        %323 = OpBitcast %uint %322
        %324 = OpExtInst %uint %152 UMin %323 %uint_255
        %325 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %324
               OpStore %325 %float_0 None
               OpBranch %140
        %140 = OpLabel
        %326 = OpCompositeExtract %uint %threadIdx 1
        %327 = OpBitcast %int %326
        %328 = OpIMul %int %327 %int_32
        %329 = OpCompositeExtract %uint %threadIdx 0
        %330 = OpBitcast %int %329
        %331 = OpIMul %int %330 %int_4
        %332 = OpIAdd %int %328 %331
        %333 = OpBitcast %uint %332
        %334 = OpExtInst %uint %152 UMin %333 %uint_255
        %335 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %334
        %336 = OpCompositeExtract %uint %blockIdx 1
        %337 = OpBitcast %int %336
        %338 = OpIMul %int %337 %int_14336
        %339 = OpCompositeExtract %uint %threadIdx 1
        %340 = OpBitcast %int %339
        %341 = OpIMul %int %340 %int_1792
        %343 = OpIAdd %int %338 %341
        %344 = OpCompositeExtract %uint %threadIdx 0
        %345 = OpBitcast %int %344
        %346 = OpBitwiseAnd %uint %uint_1 %uint_31
        %347 = OpShiftRightArithmetic %int %345 %346
        %348 = OpIMul %int %347 %int_448
        %349 = OpIAdd %int %343 %348
        %350 = OpLoad %int %ax3_0 None
        %351 = OpIAdd %int %349 %350
        %352 = OpAccessChain %_ptr_StorageBuffer_uint %6 %uint_0 %351
        %354 = OpLoad %uint %352 None
        %355 = OpCompositeExtract %uint %threadIdx 0
        %356 = OpBitcast %int %355
        %357 = OpBitwiseAnd %int %356 %int_1
        %358 = OpIMul %int %357 %int_16
        %360 = OpBitcast %uint %358
        %361 = OpBitwiseAnd %uint %360 %uint_31
        %362 = OpShiftRightLogical %uint %354 %361
        %363 = OpBitwiseAnd %uint %362 %uint_15
        %364 = OpConvertUToF %float %363
        %365 = OpFSub %float %364 %float_7
        %367 = OpCompositeExtract %uint %blockIdx 1
        %368 = OpBitcast %int %367
        %369 = OpIMul %int %368 %int_3584
        %370 = OpCompositeExtract %uint %threadIdx 1
        %371 = OpBitcast %int %370
        %372 = OpIMul %int %371 %int_448
        %373 = OpIAdd %int %369 %372
        %374 = OpCompositeExtract %uint %threadIdx 0
        %375 = OpBitcast %int %374
        %376 = OpBitwiseAnd %uint %uint_1 %uint_31
        %377 = OpShiftRightArithmetic %int %375 %376
        %378 = OpIMul %int %377 %int_112
        %380 = OpIAdd %int %373 %378
        %381 = OpLoad %int %ax3_0 None
        %382 = OpBitwiseAnd %uint %uint_2 %uint_31
        %383 = OpShiftRightArithmetic %int %381 %382
        %384 = OpIAdd %int %380 %383
        %385 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %384
        %386 = OpLoad %float %385 None
        %387 = OpFMul %float %365 %386
               OpStore %335 %387 None
        %388 = OpCompositeExtract %uint %threadIdx 1
        %389 = OpBitcast %int %388
        %390 = OpIMul %int %389 %int_32
        %391 = OpCompositeExtract %uint %threadIdx 0
        %392 = OpBitcast %int %391
        %393 = OpIMul %int %392 %int_4
        %394 = OpIAdd %int %390 %393
        %395 = OpIAdd %int %394 %int_1
        %396 = OpBitcast %uint %395
        %397 = OpExtInst %uint %152 UMin %396 %uint_255
        %398 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %397
        %399 = OpCompositeExtract %uint %blockIdx 1
        %400 = OpBitcast %int %399
        %401 = OpIMul %int %400 %int_14336
        %402 = OpCompositeExtract %uint %threadIdx 1
        %403 = OpBitcast %int %402
        %404 = OpIMul %int %403 %int_1792
        %405 = OpIAdd %int %401 %404
        %406 = OpCompositeExtract %uint %threadIdx 0
        %407 = OpBitcast %int %406
        %408 = OpBitwiseAnd %uint %uint_1 %uint_31
        %409 = OpShiftRightArithmetic %int %407 %408
        %410 = OpIMul %int %409 %int_448
        %411 = OpIAdd %int %405 %410
        %412 = OpLoad %int %ax3_0 None
        %413 = OpIAdd %int %411 %412
        %414 = OpAccessChain %_ptr_StorageBuffer_uint %6 %uint_0 %413
        %415 = OpLoad %uint %414 None
        %416 = OpCompositeExtract %uint %threadIdx 0
        %417 = OpBitcast %int %416
        %418 = OpBitwiseAnd %int %417 %int_1
        %419 = OpIMul %int %418 %int_16
        %420 = OpIAdd %int %419 %int_4
        %421 = OpBitcast %uint %420
        %422 = OpBitwiseAnd %uint %421 %uint_31
        %423 = OpShiftRightLogical %uint %415 %422
        %424 = OpBitwiseAnd %uint %423 %uint_15
        %425 = OpConvertUToF %float %424
        %426 = OpFSub %float %425 %float_7
        %427 = OpCompositeExtract %uint %blockIdx 1
        %428 = OpBitcast %int %427
        %429 = OpIMul %int %428 %int_3584
        %430 = OpCompositeExtract %uint %threadIdx 1
        %431 = OpBitcast %int %430
        %432 = OpIMul %int %431 %int_448
        %433 = OpIAdd %int %429 %432
        %434 = OpCompositeExtract %uint %threadIdx 0
        %435 = OpBitcast %int %434
        %436 = OpBitwiseAnd %uint %uint_1 %uint_31
        %437 = OpShiftRightArithmetic %int %435 %436
        %438 = OpIMul %int %437 %int_112
        %439 = OpIAdd %int %433 %438
        %440 = OpLoad %int %ax3_0 None
        %441 = OpBitwiseAnd %uint %uint_2 %uint_31
        %442 = OpShiftRightArithmetic %int %440 %441
        %443 = OpIAdd %int %439 %442
        %444 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %443
        %445 = OpLoad %float %444 None
        %446 = OpFMul %float %426 %445
               OpStore %398 %446 None
        %447 = OpCompositeExtract %uint %threadIdx 1
        %448 = OpBitcast %int %447
        %449 = OpIMul %int %448 %int_32
        %450 = OpCompositeExtract %uint %threadIdx 0
        %451 = OpBitcast %int %450
        %452 = OpIMul %int %451 %int_4
        %453 = OpIAdd %int %449 %452
        %454 = OpIAdd %int %453 %int_2
        %455 = OpBitcast %uint %454
        %456 = OpExtInst %uint %152 UMin %455 %uint_255
        %457 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %456
        %458 = OpCompositeExtract %uint %blockIdx 1
        %459 = OpBitcast %int %458
        %460 = OpIMul %int %459 %int_14336
        %461 = OpCompositeExtract %uint %threadIdx 1
        %462 = OpBitcast %int %461
        %463 = OpIMul %int %462 %int_1792
        %464 = OpIAdd %int %460 %463
        %465 = OpCompositeExtract %uint %threadIdx 0
        %466 = OpBitcast %int %465
        %467 = OpBitwiseAnd %uint %uint_1 %uint_31
        %468 = OpShiftRightArithmetic %int %466 %467
        %469 = OpIMul %int %468 %int_448
        %470 = OpIAdd %int %464 %469
        %471 = OpLoad %int %ax3_0 None
        %472 = OpIAdd %int %470 %471
        %473 = OpAccessChain %_ptr_StorageBuffer_uint %6 %uint_0 %472
        %474 = OpLoad %uint %473 None
        %475 = OpCompositeExtract %uint %threadIdx 0
        %476 = OpBitcast %int %475
        %477 = OpBitwiseAnd %int %476 %int_1
        %478 = OpIMul %int %477 %int_16
        %479 = OpIAdd %int %478 %int_8
        %480 = OpBitcast %uint %479
        %481 = OpBitwiseAnd %uint %480 %uint_31
        %482 = OpShiftRightLogical %uint %474 %481
        %483 = OpBitwiseAnd %uint %482 %uint_15
        %484 = OpConvertUToF %float %483
        %485 = OpFSub %float %484 %float_7
        %486 = OpCompositeExtract %uint %blockIdx 1
        %487 = OpBitcast %int %486
        %488 = OpIMul %int %487 %int_3584
        %489 = OpCompositeExtract %uint %threadIdx 1
        %490 = OpBitcast %int %489
        %491 = OpIMul %int %490 %int_448
        %492 = OpIAdd %int %488 %491
        %493 = OpCompositeExtract %uint %threadIdx 0
        %494 = OpBitcast %int %493
        %495 = OpBitwiseAnd %uint %uint_1 %uint_31
        %496 = OpShiftRightArithmetic %int %494 %495
        %497 = OpIMul %int %496 %int_112
        %498 = OpIAdd %int %492 %497
        %499 = OpLoad %int %ax3_0 None
        %500 = OpBitwiseAnd %uint %uint_2 %uint_31
        %501 = OpShiftRightArithmetic %int %499 %500
        %502 = OpIAdd %int %498 %501
        %503 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %502
        %504 = OpLoad %float %503 None
        %505 = OpFMul %float %485 %504
               OpStore %457 %505 None
        %506 = OpCompositeExtract %uint %threadIdx 1
        %507 = OpBitcast %int %506
        %508 = OpIMul %int %507 %int_32
        %509 = OpCompositeExtract %uint %threadIdx 0
        %510 = OpBitcast %int %509
        %511 = OpIMul %int %510 %int_4
        %512 = OpIAdd %int %508 %511
        %513 = OpIAdd %int %512 %int_3
        %514 = OpBitcast %uint %513
        %515 = OpExtInst %uint %152 UMin %514 %uint_255
        %516 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %515
        %517 = OpCompositeExtract %uint %blockIdx 1
        %518 = OpBitcast %int %517
        %519 = OpIMul %int %518 %int_14336
        %520 = OpCompositeExtract %uint %threadIdx 1
        %521 = OpBitcast %int %520
        %522 = OpIMul %int %521 %int_1792
        %523 = OpIAdd %int %519 %522
        %524 = OpCompositeExtract %uint %threadIdx 0
        %525 = OpBitcast %int %524
        %526 = OpBitwiseAnd %uint %uint_1 %uint_31
        %527 = OpShiftRightArithmetic %int %525 %526
        %528 = OpIMul %int %527 %int_448
        %529 = OpIAdd %int %523 %528
        %530 = OpLoad %int %ax3_0 None
        %531 = OpIAdd %int %529 %530
        %532 = OpAccessChain %_ptr_StorageBuffer_uint %6 %uint_0 %531
        %533 = OpLoad %uint %532 None
        %534 = OpCompositeExtract %uint %threadIdx 0
        %535 = OpBitcast %int %534
        %536 = OpBitwiseAnd %int %535 %int_1
        %537 = OpIMul %int %536 %int_16
        %538 = OpIAdd %int %537 %int_12
        %540 = OpBitcast %uint %538
        %541 = OpBitwiseAnd %uint %540 %uint_31
        %542 = OpShiftRightLogical %uint %533 %541
        %543 = OpBitwiseAnd %uint %542 %uint_15
        %544 = OpConvertUToF %float %543
        %545 = OpFSub %float %544 %float_7
        %546 = OpCompositeExtract %uint %blockIdx 1
        %547 = OpBitcast %int %546
        %548 = OpIMul %int %547 %int_3584
        %549 = OpCompositeExtract %uint %threadIdx 1
        %550 = OpBitcast %int %549
        %551 = OpIMul %int %550 %int_448
        %552 = OpIAdd %int %548 %551
        %553 = OpCompositeExtract %uint %threadIdx 0
        %554 = OpBitcast %int %553
        %555 = OpBitwiseAnd %uint %uint_1 %uint_31
        %556 = OpShiftRightArithmetic %int %554 %555
        %557 = OpIMul %int %556 %int_112
        %558 = OpIAdd %int %552 %557
        %559 = OpLoad %int %ax3_0 None
        %560 = OpBitwiseAnd %uint %uint_2 %uint_31
        %561 = OpShiftRightArithmetic %int %559 %560
        %562 = OpIAdd %int %558 %561
        %563 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %562
        %564 = OpLoad %float %563 None
        %565 = OpFMul %float %545 %564
               OpStore %516 %565 None
               OpControlBarrier %uint_2 %uint_2 %uint_264
        %567 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
        %568 = OpCompositeExtract %uint %threadIdx 0
        %569 = OpBitcast %int %568
        %570 = OpIMul %int %569 %int_32
        %571 = OpBitcast %uint %570
        %572 = OpExtInst %uint %152 UMin %571 %uint_255
        %573 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %572
        %574 = OpLoad %float %573 None
        %575 = OpCompositeExtract %uint %threadIdx 1
        %576 = OpBitcast %int %575
        %577 = OpIMul %int %576 %int_32
        %578 = OpBitcast %uint %577
        %579 = OpExtInst %uint %152 UMin %578 %uint_255
        %580 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %579
        %581 = OpLoad %float %580 None
        %582 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
        %583 = OpLoad %float %582 None
        %584 = OpExtInst %float %152 Fma %574 %581 %583
               OpStore %567 %584 None
        %585 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
        %586 = OpCompositeExtract %uint %threadIdx 0
        %587 = OpBitcast %int %586
        %588 = OpIMul %int %587 %int_32
        %589 = OpBitcast %uint %588
        %590 = OpExtInst %uint %152 UMin %589 %uint_255
        %591 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %590
        %592 = OpLoad %float %591 None
        %593 = OpCompositeExtract %uint %threadIdx 1
        %594 = OpBitcast %int %593
        %595 = OpIMul %int %594 %int_32
        %596 = OpIAdd %int %595 %int_8
        %597 = OpBitcast %uint %596
        %598 = OpExtInst %uint %152 UMin %597 %uint_255
        %599 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %598
        %600 = OpLoad %float %599 None
        %601 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
        %602 = OpLoad %float %601 None
        %603 = OpExtInst %float %152 Fma %592 %600 %602
               OpStore %585 %603 None
        %604 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
        %605 = OpCompositeExtract %uint %threadIdx 0
        %606 = OpBitcast %int %605
        %607 = OpIMul %int %606 %int_32
        %608 = OpBitcast %uint %607
        %609 = OpExtInst %uint %152 UMin %608 %uint_255
        %610 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %609
        %611 = OpLoad %float %610 None
        %612 = OpCompositeExtract %uint %threadIdx 1
        %613 = OpBitcast %int %612
        %614 = OpIMul %int %613 %int_32
        %615 = OpIAdd %int %614 %int_16
        %616 = OpBitcast %uint %615
        %617 = OpExtInst %uint %152 UMin %616 %uint_255
        %618 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %617
        %619 = OpLoad %float %618 None
        %620 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
        %621 = OpLoad %float %620 None
        %622 = OpExtInst %float %152 Fma %611 %619 %621
               OpStore %604 %622 None
        %623 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
        %624 = OpCompositeExtract %uint %threadIdx 0
        %625 = OpBitcast %int %624
        %626 = OpIMul %int %625 %int_32
        %627 = OpBitcast %uint %626
        %628 = OpExtInst %uint %152 UMin %627 %uint_255
        %629 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %628
        %630 = OpLoad %float %629 None
        %631 = OpCompositeExtract %uint %threadIdx 1
        %632 = OpBitcast %int %631
        %633 = OpIMul %int %632 %int_32
        %634 = OpIAdd %int %633 %int_24
        %636 = OpBitcast %uint %634
        %637 = OpExtInst %uint %152 UMin %636 %uint_255
        %638 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %637
        %639 = OpLoad %float %638 None
        %640 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
        %641 = OpLoad %float %640 None
        %642 = OpExtInst %float %152 Fma %630 %639 %641
               OpStore %623 %642 None
        %643 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
        %644 = OpCompositeExtract %uint %threadIdx 0
        %645 = OpBitcast %int %644
        %646 = OpIMul %int %645 %int_32
        %647 = OpIAdd %int %646 %int_8
        %648 = OpBitcast %uint %647
        %649 = OpExtInst %uint %152 UMin %648 %uint_255
        %650 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %649
        %651 = OpLoad %float %650 None
        %652 = OpCompositeExtract %uint %threadIdx 1
        %653 = OpBitcast %int %652
        %654 = OpIMul %int %653 %int_32
        %655 = OpBitcast %uint %654
        %656 = OpExtInst %uint %152 UMin %655 %uint_255
        %657 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %656
        %658 = OpLoad %float %657 None
        %659 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
        %660 = OpLoad %float %659 None
        %661 = OpExtInst %float %152 Fma %651 %658 %660
               OpStore %643 %661 None
        %662 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
        %663 = OpCompositeExtract %uint %threadIdx 0
        %664 = OpBitcast %int %663
        %665 = OpIMul %int %664 %int_32
        %666 = OpIAdd %int %665 %int_8
        %667 = OpBitcast %uint %666
        %668 = OpExtInst %uint %152 UMin %667 %uint_255
        %669 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %668
        %670 = OpLoad %float %669 None
        %671 = OpCompositeExtract %uint %threadIdx 1
        %672 = OpBitcast %int %671
        %673 = OpIMul %int %672 %int_32
        %674 = OpIAdd %int %673 %int_8
        %675 = OpBitcast %uint %674
        %676 = OpExtInst %uint %152 UMin %675 %uint_255
        %677 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %676
        %678 = OpLoad %float %677 None
        %679 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
        %680 = OpLoad %float %679 None
        %681 = OpExtInst %float %152 Fma %670 %678 %680
               OpStore %662 %681 None
        %682 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
        %683 = OpCompositeExtract %uint %threadIdx 0
        %684 = OpBitcast %int %683
        %685 = OpIMul %int %684 %int_32
        %686 = OpIAdd %int %685 %int_8
        %687 = OpBitcast %uint %686
        %688 = OpExtInst %uint %152 UMin %687 %uint_255
        %689 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %688
        %690 = OpLoad %float %689 None
        %691 = OpCompositeExtract %uint %threadIdx 1
        %692 = OpBitcast %int %691
        %693 = OpIMul %int %692 %int_32
        %694 = OpIAdd %int %693 %int_16
        %695 = OpBitcast %uint %694
        %696 = OpExtInst %uint %152 UMin %695 %uint_255
        %697 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %696
        %698 = OpLoad %float %697 None
        %699 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
        %700 = OpLoad %float %699 None
        %701 = OpExtInst %float %152 Fma %690 %698 %700
               OpStore %682 %701 None
        %702 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
        %703 = OpCompositeExtract %uint %threadIdx 0
        %704 = OpBitcast %int %703
        %705 = OpIMul %int %704 %int_32
        %706 = OpIAdd %int %705 %int_8
        %707 = OpBitcast %uint %706
        %708 = OpExtInst %uint %152 UMin %707 %uint_255
        %709 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %708
        %710 = OpLoad %float %709 None
        %711 = OpCompositeExtract %uint %threadIdx 1
        %712 = OpBitcast %int %711
        %713 = OpIMul %int %712 %int_32
        %714 = OpIAdd %int %713 %int_24
        %715 = OpBitcast %uint %714
        %716 = OpExtInst %uint %152 UMin %715 %uint_255
        %717 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %716
        %718 = OpLoad %float %717 None
        %719 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
        %720 = OpLoad %float %719 None
        %721 = OpExtInst %float %152 Fma %710 %718 %720
               OpStore %702 %721 None
        %722 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
        %723 = OpCompositeExtract %uint %threadIdx 0
        %724 = OpBitcast %int %723
        %725 = OpIMul %int %724 %int_32
        %726 = OpIAdd %int %725 %int_16
        %727 = OpBitcast %uint %726
        %728 = OpExtInst %uint %152 UMin %727 %uint_255
        %729 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %728
        %730 = OpLoad %float %729 None
        %731 = OpCompositeExtract %uint %threadIdx 1
        %732 = OpBitcast %int %731
        %733 = OpIMul %int %732 %int_32
        %734 = OpBitcast %uint %733
        %735 = OpExtInst %uint %152 UMin %734 %uint_255
        %736 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %735
        %737 = OpLoad %float %736 None
        %738 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
        %739 = OpLoad %float %738 None
        %740 = OpExtInst %float %152 Fma %730 %737 %739
               OpStore %722 %740 None
        %741 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
        %742 = OpCompositeExtract %uint %threadIdx 0
        %743 = OpBitcast %int %742
        %744 = OpIMul %int %743 %int_32
        %745 = OpIAdd %int %744 %int_16
        %746 = OpBitcast %uint %745
        %747 = OpExtInst %uint %152 UMin %746 %uint_255
        %748 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %747
        %749 = OpLoad %float %748 None
        %750 = OpCompositeExtract %uint %threadIdx 1
        %751 = OpBitcast %int %750
        %752 = OpIMul %int %751 %int_32
        %753 = OpIAdd %int %752 %int_8
        %754 = OpBitcast %uint %753
        %755 = OpExtInst %uint %152 UMin %754 %uint_255
        %756 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %755
        %757 = OpLoad %float %756 None
        %758 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
        %759 = OpLoad %float %758 None
        %760 = OpExtInst %float %152 Fma %749 %757 %759
               OpStore %741 %760 None
        %761 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
        %762 = OpCompositeExtract %uint %threadIdx 0
        %763 = OpBitcast %int %762
        %764 = OpIMul %int %763 %int_32
        %765 = OpIAdd %int %764 %int_16
        %766 = OpBitcast %uint %765
        %767 = OpExtInst %uint %152 UMin %766 %uint_255
        %768 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %767
        %769 = OpLoad %float %768 None
        %770 = OpCompositeExtract %uint %threadIdx 1
        %771 = OpBitcast %int %770
        %772 = OpIMul %int %771 %int_32
        %773 = OpIAdd %int %772 %int_16
        %774 = OpBitcast %uint %773
        %775 = OpExtInst %uint %152 UMin %774 %uint_255
        %776 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %775
        %777 = OpLoad %float %776 None
        %778 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
        %779 = OpLoad %float %778 None
        %780 = OpExtInst %float %152 Fma %769 %777 %779
               OpStore %761 %780 None
        %781 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
        %782 = OpCompositeExtract %uint %threadIdx 0
        %783 = OpBitcast %int %782
        %784 = OpIMul %int %783 %int_32
        %785 = OpIAdd %int %784 %int_16
        %786 = OpBitcast %uint %785
        %787 = OpExtInst %uint %152 UMin %786 %uint_255
        %788 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %787
        %789 = OpLoad %float %788 None
        %790 = OpCompositeExtract %uint %threadIdx 1
        %791 = OpBitcast %int %790
        %792 = OpIMul %int %791 %int_32
        %793 = OpIAdd %int %792 %int_24
        %794 = OpBitcast %uint %793
        %795 = OpExtInst %uint %152 UMin %794 %uint_255
        %796 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %795
        %797 = OpLoad %float %796 None
        %798 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
        %799 = OpLoad %float %798 None
        %800 = OpExtInst %float %152 Fma %789 %797 %799
               OpStore %781 %800 None
        %801 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
        %802 = OpCompositeExtract %uint %threadIdx 0
        %803 = OpBitcast %int %802
        %804 = OpIMul %int %803 %int_32
        %805 = OpIAdd %int %804 %int_24
        %806 = OpBitcast %uint %805
        %807 = OpExtInst %uint %152 UMin %806 %uint_255
        %808 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %807
        %809 = OpLoad %float %808 None
        %810 = OpCompositeExtract %uint %threadIdx 1
        %811 = OpBitcast %int %810
        %812 = OpIMul %int %811 %int_32
        %813 = OpBitcast %uint %812
        %814 = OpExtInst %uint %152 UMin %813 %uint_255
        %815 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %814
        %816 = OpLoad %float %815 None
        %817 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
        %818 = OpLoad %float %817 None
        %819 = OpExtInst %float %152 Fma %809 %816 %818
               OpStore %801 %819 None
        %820 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
        %821 = OpCompositeExtract %uint %threadIdx 0
        %822 = OpBitcast %int %821
        %823 = OpIMul %int %822 %int_32
        %824 = OpIAdd %int %823 %int_24
        %825 = OpBitcast %uint %824
        %826 = OpExtInst %uint %152 UMin %825 %uint_255
        %827 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %826
        %828 = OpLoad %float %827 None
        %829 = OpCompositeExtract %uint %threadIdx 1
        %830 = OpBitcast %int %829
        %831 = OpIMul %int %830 %int_32
        %832 = OpIAdd %int %831 %int_8
        %833 = OpBitcast %uint %832
        %834 = OpExtInst %uint %152 UMin %833 %uint_255
        %835 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %834
        %836 = OpLoad %float %835 None
        %837 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
        %838 = OpLoad %float %837 None
        %839 = OpExtInst %float %152 Fma %828 %836 %838
               OpStore %820 %839 None
        %840 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
        %841 = OpCompositeExtract %uint %threadIdx 0
        %842 = OpBitcast %int %841
        %843 = OpIMul %int %842 %int_32
        %844 = OpIAdd %int %843 %int_24
        %845 = OpBitcast %uint %844
        %846 = OpExtInst %uint %152 UMin %845 %uint_255
        %847 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %846
        %848 = OpLoad %float %847 None
        %849 = OpCompositeExtract %uint %threadIdx 1
        %850 = OpBitcast %int %849
        %851 = OpIMul %int %850 %int_32
        %852 = OpIAdd %int %851 %int_16
        %853 = OpBitcast %uint %852
        %854 = OpExtInst %uint %152 UMin %853 %uint_255
        %855 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %854
        %856 = OpLoad %float %855 None
        %857 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
        %858 = OpLoad %float %857 None
        %859 = OpExtInst %float %152 Fma %848 %856 %858
               OpStore %840 %859 None
        %860 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
        %861 = OpCompositeExtract %uint %threadIdx 0
        %862 = OpBitcast %int %861
        %863 = OpIMul %int %862 %int_32
        %864 = OpIAdd %int %863 %int_24
        %865 = OpBitcast %uint %864
        %866 = OpExtInst %uint %152 UMin %865 %uint_255
        %867 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %866
        %868 = OpLoad %float %867 None
        %869 = OpCompositeExtract %uint %threadIdx 1
        %870 = OpBitcast %int %869
        %871 = OpIMul %int %870 %int_32
        %872 = OpIAdd %int %871 %int_24
        %873 = OpBitcast %uint %872
        %874 = OpExtInst %uint %152 UMin %873 %uint_255
        %875 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %874
        %876 = OpLoad %float %875 None
        %877 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
        %878 = OpLoad %float %877 None
        %879 = OpExtInst %float %152 Fma %868 %876 %878
               OpStore %860 %879 None
        %880 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
        %881 = OpCompositeExtract %uint %threadIdx 0
        %882 = OpBitcast %int %881
        %883 = OpIMul %int %882 %int_32
        %884 = OpIAdd %int %883 %int_1
        %885 = OpBitcast %uint %884
        %886 = OpExtInst %uint %152 UMin %885 %uint_255
        %887 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %886
        %888 = OpLoad %float %887 None
        %889 = OpCompositeExtract %uint %threadIdx 1
        %890 = OpBitcast %int %889
        %891 = OpIMul %int %890 %int_32
        %892 = OpIAdd %int %891 %int_1
        %893 = OpBitcast %uint %892
        %894 = OpExtInst %uint %152 UMin %893 %uint_255
        %895 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %894
        %896 = OpLoad %float %895 None
        %897 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
        %898 = OpLoad %float %897 None
        %899 = OpExtInst %float %152 Fma %888 %896 %898
               OpStore %880 %899 None
        %900 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
        %901 = OpCompositeExtract %uint %threadIdx 0
        %902 = OpBitcast %int %901
        %903 = OpIMul %int %902 %int_32
        %904 = OpIAdd %int %903 %int_1
        %905 = OpBitcast %uint %904
        %906 = OpExtInst %uint %152 UMin %905 %uint_255
        %907 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %906
        %908 = OpLoad %float %907 None
        %909 = OpCompositeExtract %uint %threadIdx 1
        %910 = OpBitcast %int %909
        %911 = OpIMul %int %910 %int_32
        %912 = OpIAdd %int %911 %int_9
        %914 = OpBitcast %uint %912
        %915 = OpExtInst %uint %152 UMin %914 %uint_255
        %916 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %915
        %917 = OpLoad %float %916 None
        %918 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
        %919 = OpLoad %float %918 None
        %920 = OpExtInst %float %152 Fma %908 %917 %919
               OpStore %900 %920 None
        %921 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
        %922 = OpCompositeExtract %uint %threadIdx 0
        %923 = OpBitcast %int %922
        %924 = OpIMul %int %923 %int_32
        %925 = OpIAdd %int %924 %int_1
        %926 = OpBitcast %uint %925
        %927 = OpExtInst %uint %152 UMin %926 %uint_255
        %928 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %927
        %929 = OpLoad %float %928 None
        %930 = OpCompositeExtract %uint %threadIdx 1
        %931 = OpBitcast %int %930
        %932 = OpIMul %int %931 %int_32
        %933 = OpIAdd %int %932 %int_17
        %935 = OpBitcast %uint %933
        %936 = OpExtInst %uint %152 UMin %935 %uint_255
        %937 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %936
        %938 = OpLoad %float %937 None
        %939 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
        %940 = OpLoad %float %939 None
        %941 = OpExtInst %float %152 Fma %929 %938 %940
               OpStore %921 %941 None
        %942 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
        %943 = OpCompositeExtract %uint %threadIdx 0
        %944 = OpBitcast %int %943
        %945 = OpIMul %int %944 %int_32
        %946 = OpIAdd %int %945 %int_1
        %947 = OpBitcast %uint %946
        %948 = OpExtInst %uint %152 UMin %947 %uint_255
        %949 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %948
        %950 = OpLoad %float %949 None
        %951 = OpCompositeExtract %uint %threadIdx 1
        %952 = OpBitcast %int %951
        %953 = OpIMul %int %952 %int_32
        %954 = OpIAdd %int %953 %int_25
        %956 = OpBitcast %uint %954
        %957 = OpExtInst %uint %152 UMin %956 %uint_255
        %958 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %957
        %959 = OpLoad %float %958 None
        %960 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
        %961 = OpLoad %float %960 None
        %962 = OpExtInst %float %152 Fma %950 %959 %961
               OpStore %942 %962 None
        %963 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
        %964 = OpCompositeExtract %uint %threadIdx 0
        %965 = OpBitcast %int %964
        %966 = OpIMul %int %965 %int_32
        %967 = OpIAdd %int %966 %int_9
        %968 = OpBitcast %uint %967
        %969 = OpExtInst %uint %152 UMin %968 %uint_255
        %970 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %969
        %971 = OpLoad %float %970 None
        %972 = OpCompositeExtract %uint %threadIdx 1
        %973 = OpBitcast %int %972
        %974 = OpIMul %int %973 %int_32
        %975 = OpIAdd %int %974 %int_1
        %976 = OpBitcast %uint %975
        %977 = OpExtInst %uint %152 UMin %976 %uint_255
        %978 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %977
        %979 = OpLoad %float %978 None
        %980 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
        %981 = OpLoad %float %980 None
        %982 = OpExtInst %float %152 Fma %971 %979 %981
               OpStore %963 %982 None
        %983 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
        %984 = OpCompositeExtract %uint %threadIdx 0
        %985 = OpBitcast %int %984
        %986 = OpIMul %int %985 %int_32
        %987 = OpIAdd %int %986 %int_9
        %988 = OpBitcast %uint %987
        %989 = OpExtInst %uint %152 UMin %988 %uint_255
        %990 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %989
        %991 = OpLoad %float %990 None
        %992 = OpCompositeExtract %uint %threadIdx 1
        %993 = OpBitcast %int %992
        %994 = OpIMul %int %993 %int_32
        %995 = OpIAdd %int %994 %int_9
        %996 = OpBitcast %uint %995
        %997 = OpExtInst %uint %152 UMin %996 %uint_255
        %998 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %997
        %999 = OpLoad %float %998 None
       %1000 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %1001 = OpLoad %float %1000 None
       %1002 = OpExtInst %float %152 Fma %991 %999 %1001
               OpStore %983 %1002 None
       %1003 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %1004 = OpCompositeExtract %uint %threadIdx 0
       %1005 = OpBitcast %int %1004
       %1006 = OpIMul %int %1005 %int_32
       %1007 = OpIAdd %int %1006 %int_9
       %1008 = OpBitcast %uint %1007
       %1009 = OpExtInst %uint %152 UMin %1008 %uint_255
       %1010 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1009
       %1011 = OpLoad %float %1010 None
       %1012 = OpCompositeExtract %uint %threadIdx 1
       %1013 = OpBitcast %int %1012
       %1014 = OpIMul %int %1013 %int_32
       %1015 = OpIAdd %int %1014 %int_17
       %1016 = OpBitcast %uint %1015
       %1017 = OpExtInst %uint %152 UMin %1016 %uint_255
       %1018 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1017
       %1019 = OpLoad %float %1018 None
       %1020 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %1021 = OpLoad %float %1020 None
       %1022 = OpExtInst %float %152 Fma %1011 %1019 %1021
               OpStore %1003 %1022 None
       %1023 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %1024 = OpCompositeExtract %uint %threadIdx 0
       %1025 = OpBitcast %int %1024
       %1026 = OpIMul %int %1025 %int_32
       %1027 = OpIAdd %int %1026 %int_9
       %1028 = OpBitcast %uint %1027
       %1029 = OpExtInst %uint %152 UMin %1028 %uint_255
       %1030 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1029
       %1031 = OpLoad %float %1030 None
       %1032 = OpCompositeExtract %uint %threadIdx 1
       %1033 = OpBitcast %int %1032
       %1034 = OpIMul %int %1033 %int_32
       %1035 = OpIAdd %int %1034 %int_25
       %1036 = OpBitcast %uint %1035
       %1037 = OpExtInst %uint %152 UMin %1036 %uint_255
       %1038 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1037
       %1039 = OpLoad %float %1038 None
       %1040 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %1041 = OpLoad %float %1040 None
       %1042 = OpExtInst %float %152 Fma %1031 %1039 %1041
               OpStore %1023 %1042 None
       %1043 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %1044 = OpCompositeExtract %uint %threadIdx 0
       %1045 = OpBitcast %int %1044
       %1046 = OpIMul %int %1045 %int_32
       %1047 = OpIAdd %int %1046 %int_17
       %1048 = OpBitcast %uint %1047
       %1049 = OpExtInst %uint %152 UMin %1048 %uint_255
       %1050 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1049
       %1051 = OpLoad %float %1050 None
       %1052 = OpCompositeExtract %uint %threadIdx 1
       %1053 = OpBitcast %int %1052
       %1054 = OpIMul %int %1053 %int_32
       %1055 = OpIAdd %int %1054 %int_1
       %1056 = OpBitcast %uint %1055
       %1057 = OpExtInst %uint %152 UMin %1056 %uint_255
       %1058 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1057
       %1059 = OpLoad %float %1058 None
       %1060 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %1061 = OpLoad %float %1060 None
       %1062 = OpExtInst %float %152 Fma %1051 %1059 %1061
               OpStore %1043 %1062 None
       %1063 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %1064 = OpCompositeExtract %uint %threadIdx 0
       %1065 = OpBitcast %int %1064
       %1066 = OpIMul %int %1065 %int_32
       %1067 = OpIAdd %int %1066 %int_17
       %1068 = OpBitcast %uint %1067
       %1069 = OpExtInst %uint %152 UMin %1068 %uint_255
       %1070 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1069
       %1071 = OpLoad %float %1070 None
       %1072 = OpCompositeExtract %uint %threadIdx 1
       %1073 = OpBitcast %int %1072
       %1074 = OpIMul %int %1073 %int_32
       %1075 = OpIAdd %int %1074 %int_9
       %1076 = OpBitcast %uint %1075
       %1077 = OpExtInst %uint %152 UMin %1076 %uint_255
       %1078 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1077
       %1079 = OpLoad %float %1078 None
       %1080 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %1081 = OpLoad %float %1080 None
       %1082 = OpExtInst %float %152 Fma %1071 %1079 %1081
               OpStore %1063 %1082 None
       %1083 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %1084 = OpCompositeExtract %uint %threadIdx 0
       %1085 = OpBitcast %int %1084
       %1086 = OpIMul %int %1085 %int_32
       %1087 = OpIAdd %int %1086 %int_17
       %1088 = OpBitcast %uint %1087
       %1089 = OpExtInst %uint %152 UMin %1088 %uint_255
       %1090 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1089
       %1091 = OpLoad %float %1090 None
       %1092 = OpCompositeExtract %uint %threadIdx 1
       %1093 = OpBitcast %int %1092
       %1094 = OpIMul %int %1093 %int_32
       %1095 = OpIAdd %int %1094 %int_17
       %1096 = OpBitcast %uint %1095
       %1097 = OpExtInst %uint %152 UMin %1096 %uint_255
       %1098 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1097
       %1099 = OpLoad %float %1098 None
       %1100 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %1101 = OpLoad %float %1100 None
       %1102 = OpExtInst %float %152 Fma %1091 %1099 %1101
               OpStore %1083 %1102 None
       %1103 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %1104 = OpCompositeExtract %uint %threadIdx 0
       %1105 = OpBitcast %int %1104
       %1106 = OpIMul %int %1105 %int_32
       %1107 = OpIAdd %int %1106 %int_17
       %1108 = OpBitcast %uint %1107
       %1109 = OpExtInst %uint %152 UMin %1108 %uint_255
       %1110 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1109
       %1111 = OpLoad %float %1110 None
       %1112 = OpCompositeExtract %uint %threadIdx 1
       %1113 = OpBitcast %int %1112
       %1114 = OpIMul %int %1113 %int_32
       %1115 = OpIAdd %int %1114 %int_25
       %1116 = OpBitcast %uint %1115
       %1117 = OpExtInst %uint %152 UMin %1116 %uint_255
       %1118 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1117
       %1119 = OpLoad %float %1118 None
       %1120 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %1121 = OpLoad %float %1120 None
       %1122 = OpExtInst %float %152 Fma %1111 %1119 %1121
               OpStore %1103 %1122 None
       %1123 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %1124 = OpCompositeExtract %uint %threadIdx 0
       %1125 = OpBitcast %int %1124
       %1126 = OpIMul %int %1125 %int_32
       %1127 = OpIAdd %int %1126 %int_25
       %1128 = OpBitcast %uint %1127
       %1129 = OpExtInst %uint %152 UMin %1128 %uint_255
       %1130 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1129
       %1131 = OpLoad %float %1130 None
       %1132 = OpCompositeExtract %uint %threadIdx 1
       %1133 = OpBitcast %int %1132
       %1134 = OpIMul %int %1133 %int_32
       %1135 = OpIAdd %int %1134 %int_1
       %1136 = OpBitcast %uint %1135
       %1137 = OpExtInst %uint %152 UMin %1136 %uint_255
       %1138 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1137
       %1139 = OpLoad %float %1138 None
       %1140 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %1141 = OpLoad %float %1140 None
       %1142 = OpExtInst %float %152 Fma %1131 %1139 %1141
               OpStore %1123 %1142 None
       %1143 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %1144 = OpCompositeExtract %uint %threadIdx 0
       %1145 = OpBitcast %int %1144
       %1146 = OpIMul %int %1145 %int_32
       %1147 = OpIAdd %int %1146 %int_25
       %1148 = OpBitcast %uint %1147
       %1149 = OpExtInst %uint %152 UMin %1148 %uint_255
       %1150 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1149
       %1151 = OpLoad %float %1150 None
       %1152 = OpCompositeExtract %uint %threadIdx 1
       %1153 = OpBitcast %int %1152
       %1154 = OpIMul %int %1153 %int_32
       %1155 = OpIAdd %int %1154 %int_9
       %1156 = OpBitcast %uint %1155
       %1157 = OpExtInst %uint %152 UMin %1156 %uint_255
       %1158 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1157
       %1159 = OpLoad %float %1158 None
       %1160 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %1161 = OpLoad %float %1160 None
       %1162 = OpExtInst %float %152 Fma %1151 %1159 %1161
               OpStore %1143 %1162 None
       %1163 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %1164 = OpCompositeExtract %uint %threadIdx 0
       %1165 = OpBitcast %int %1164
       %1166 = OpIMul %int %1165 %int_32
       %1167 = OpIAdd %int %1166 %int_25
       %1168 = OpBitcast %uint %1167
       %1169 = OpExtInst %uint %152 UMin %1168 %uint_255
       %1170 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1169
       %1171 = OpLoad %float %1170 None
       %1172 = OpCompositeExtract %uint %threadIdx 1
       %1173 = OpBitcast %int %1172
       %1174 = OpIMul %int %1173 %int_32
       %1175 = OpIAdd %int %1174 %int_17
       %1176 = OpBitcast %uint %1175
       %1177 = OpExtInst %uint %152 UMin %1176 %uint_255
       %1178 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1177
       %1179 = OpLoad %float %1178 None
       %1180 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %1181 = OpLoad %float %1180 None
       %1182 = OpExtInst %float %152 Fma %1171 %1179 %1181
               OpStore %1163 %1182 None
       %1183 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %1184 = OpCompositeExtract %uint %threadIdx 0
       %1185 = OpBitcast %int %1184
       %1186 = OpIMul %int %1185 %int_32
       %1187 = OpIAdd %int %1186 %int_25
       %1188 = OpBitcast %uint %1187
       %1189 = OpExtInst %uint %152 UMin %1188 %uint_255
       %1190 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1189
       %1191 = OpLoad %float %1190 None
       %1192 = OpCompositeExtract %uint %threadIdx 1
       %1193 = OpBitcast %int %1192
       %1194 = OpIMul %int %1193 %int_32
       %1195 = OpIAdd %int %1194 %int_25
       %1196 = OpBitcast %uint %1195
       %1197 = OpExtInst %uint %152 UMin %1196 %uint_255
       %1198 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1197
       %1199 = OpLoad %float %1198 None
       %1200 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %1201 = OpLoad %float %1200 None
       %1202 = OpExtInst %float %152 Fma %1191 %1199 %1201
               OpStore %1183 %1202 None
       %1203 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %1204 = OpCompositeExtract %uint %threadIdx 0
       %1205 = OpBitcast %int %1204
       %1206 = OpIMul %int %1205 %int_32
       %1207 = OpIAdd %int %1206 %int_2
       %1208 = OpBitcast %uint %1207
       %1209 = OpExtInst %uint %152 UMin %1208 %uint_255
       %1210 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1209
       %1211 = OpLoad %float %1210 None
       %1212 = OpCompositeExtract %uint %threadIdx 1
       %1213 = OpBitcast %int %1212
       %1214 = OpIMul %int %1213 %int_32
       %1215 = OpIAdd %int %1214 %int_2
       %1216 = OpBitcast %uint %1215
       %1217 = OpExtInst %uint %152 UMin %1216 %uint_255
       %1218 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1217
       %1219 = OpLoad %float %1218 None
       %1220 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %1221 = OpLoad %float %1220 None
       %1222 = OpExtInst %float %152 Fma %1211 %1219 %1221
               OpStore %1203 %1222 None
       %1223 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %1224 = OpCompositeExtract %uint %threadIdx 0
       %1225 = OpBitcast %int %1224
       %1226 = OpIMul %int %1225 %int_32
       %1227 = OpIAdd %int %1226 %int_2
       %1228 = OpBitcast %uint %1227
       %1229 = OpExtInst %uint %152 UMin %1228 %uint_255
       %1230 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1229
       %1231 = OpLoad %float %1230 None
       %1232 = OpCompositeExtract %uint %threadIdx 1
       %1233 = OpBitcast %int %1232
       %1234 = OpIMul %int %1233 %int_32
       %1235 = OpIAdd %int %1234 %int_10
       %1237 = OpBitcast %uint %1235
       %1238 = OpExtInst %uint %152 UMin %1237 %uint_255
       %1239 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1238
       %1240 = OpLoad %float %1239 None
       %1241 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %1242 = OpLoad %float %1241 None
       %1243 = OpExtInst %float %152 Fma %1231 %1240 %1242
               OpStore %1223 %1243 None
       %1244 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %1245 = OpCompositeExtract %uint %threadIdx 0
       %1246 = OpBitcast %int %1245
       %1247 = OpIMul %int %1246 %int_32
       %1248 = OpIAdd %int %1247 %int_2
       %1249 = OpBitcast %uint %1248
       %1250 = OpExtInst %uint %152 UMin %1249 %uint_255
       %1251 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1250
       %1252 = OpLoad %float %1251 None
       %1253 = OpCompositeExtract %uint %threadIdx 1
       %1254 = OpBitcast %int %1253
       %1255 = OpIMul %int %1254 %int_32
       %1256 = OpIAdd %int %1255 %int_18
       %1258 = OpBitcast %uint %1256
       %1259 = OpExtInst %uint %152 UMin %1258 %uint_255
       %1260 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1259
       %1261 = OpLoad %float %1260 None
       %1262 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %1263 = OpLoad %float %1262 None
       %1264 = OpExtInst %float %152 Fma %1252 %1261 %1263
               OpStore %1244 %1264 None
       %1265 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %1266 = OpCompositeExtract %uint %threadIdx 0
       %1267 = OpBitcast %int %1266
       %1268 = OpIMul %int %1267 %int_32
       %1269 = OpIAdd %int %1268 %int_2
       %1270 = OpBitcast %uint %1269
       %1271 = OpExtInst %uint %152 UMin %1270 %uint_255
       %1272 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1271
       %1273 = OpLoad %float %1272 None
       %1274 = OpCompositeExtract %uint %threadIdx 1
       %1275 = OpBitcast %int %1274
       %1276 = OpIMul %int %1275 %int_32
       %1277 = OpIAdd %int %1276 %int_26
       %1279 = OpBitcast %uint %1277
       %1280 = OpExtInst %uint %152 UMin %1279 %uint_255
       %1281 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1280
       %1282 = OpLoad %float %1281 None
       %1283 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %1284 = OpLoad %float %1283 None
       %1285 = OpExtInst %float %152 Fma %1273 %1282 %1284
               OpStore %1265 %1285 None
       %1286 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %1287 = OpCompositeExtract %uint %threadIdx 0
       %1288 = OpBitcast %int %1287
       %1289 = OpIMul %int %1288 %int_32
       %1290 = OpIAdd %int %1289 %int_10
       %1291 = OpBitcast %uint %1290
       %1292 = OpExtInst %uint %152 UMin %1291 %uint_255
       %1293 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1292
       %1294 = OpLoad %float %1293 None
       %1295 = OpCompositeExtract %uint %threadIdx 1
       %1296 = OpBitcast %int %1295
       %1297 = OpIMul %int %1296 %int_32
       %1298 = OpIAdd %int %1297 %int_2
       %1299 = OpBitcast %uint %1298
       %1300 = OpExtInst %uint %152 UMin %1299 %uint_255
       %1301 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1300
       %1302 = OpLoad %float %1301 None
       %1303 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %1304 = OpLoad %float %1303 None
       %1305 = OpExtInst %float %152 Fma %1294 %1302 %1304
               OpStore %1286 %1305 None
       %1306 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %1307 = OpCompositeExtract %uint %threadIdx 0
       %1308 = OpBitcast %int %1307
       %1309 = OpIMul %int %1308 %int_32
       %1310 = OpIAdd %int %1309 %int_10
       %1311 = OpBitcast %uint %1310
       %1312 = OpExtInst %uint %152 UMin %1311 %uint_255
       %1313 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1312
       %1314 = OpLoad %float %1313 None
       %1315 = OpCompositeExtract %uint %threadIdx 1
       %1316 = OpBitcast %int %1315
       %1317 = OpIMul %int %1316 %int_32
       %1318 = OpIAdd %int %1317 %int_10
       %1319 = OpBitcast %uint %1318
       %1320 = OpExtInst %uint %152 UMin %1319 %uint_255
       %1321 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1320
       %1322 = OpLoad %float %1321 None
       %1323 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %1324 = OpLoad %float %1323 None
       %1325 = OpExtInst %float %152 Fma %1314 %1322 %1324
               OpStore %1306 %1325 None
       %1326 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %1327 = OpCompositeExtract %uint %threadIdx 0
       %1328 = OpBitcast %int %1327
       %1329 = OpIMul %int %1328 %int_32
       %1330 = OpIAdd %int %1329 %int_10
       %1331 = OpBitcast %uint %1330
       %1332 = OpExtInst %uint %152 UMin %1331 %uint_255
       %1333 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1332
       %1334 = OpLoad %float %1333 None
       %1335 = OpCompositeExtract %uint %threadIdx 1
       %1336 = OpBitcast %int %1335
       %1337 = OpIMul %int %1336 %int_32
       %1338 = OpIAdd %int %1337 %int_18
       %1339 = OpBitcast %uint %1338
       %1340 = OpExtInst %uint %152 UMin %1339 %uint_255
       %1341 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1340
       %1342 = OpLoad %float %1341 None
       %1343 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %1344 = OpLoad %float %1343 None
       %1345 = OpExtInst %float %152 Fma %1334 %1342 %1344
               OpStore %1326 %1345 None
       %1346 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %1347 = OpCompositeExtract %uint %threadIdx 0
       %1348 = OpBitcast %int %1347
       %1349 = OpIMul %int %1348 %int_32
       %1350 = OpIAdd %int %1349 %int_10
       %1351 = OpBitcast %uint %1350
       %1352 = OpExtInst %uint %152 UMin %1351 %uint_255
       %1353 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1352
       %1354 = OpLoad %float %1353 None
       %1355 = OpCompositeExtract %uint %threadIdx 1
       %1356 = OpBitcast %int %1355
       %1357 = OpIMul %int %1356 %int_32
       %1358 = OpIAdd %int %1357 %int_26
       %1359 = OpBitcast %uint %1358
       %1360 = OpExtInst %uint %152 UMin %1359 %uint_255
       %1361 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1360
       %1362 = OpLoad %float %1361 None
       %1363 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %1364 = OpLoad %float %1363 None
       %1365 = OpExtInst %float %152 Fma %1354 %1362 %1364
               OpStore %1346 %1365 None
       %1366 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %1367 = OpCompositeExtract %uint %threadIdx 0
       %1368 = OpBitcast %int %1367
       %1369 = OpIMul %int %1368 %int_32
       %1370 = OpIAdd %int %1369 %int_18
       %1371 = OpBitcast %uint %1370
       %1372 = OpExtInst %uint %152 UMin %1371 %uint_255
       %1373 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1372
       %1374 = OpLoad %float %1373 None
       %1375 = OpCompositeExtract %uint %threadIdx 1
       %1376 = OpBitcast %int %1375
       %1377 = OpIMul %int %1376 %int_32
       %1378 = OpIAdd %int %1377 %int_2
       %1379 = OpBitcast %uint %1378
       %1380 = OpExtInst %uint %152 UMin %1379 %uint_255
       %1381 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1380
       %1382 = OpLoad %float %1381 None
       %1383 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %1384 = OpLoad %float %1383 None
       %1385 = OpExtInst %float %152 Fma %1374 %1382 %1384
               OpStore %1366 %1385 None
       %1386 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %1387 = OpCompositeExtract %uint %threadIdx 0
       %1388 = OpBitcast %int %1387
       %1389 = OpIMul %int %1388 %int_32
       %1390 = OpIAdd %int %1389 %int_18
       %1391 = OpBitcast %uint %1390
       %1392 = OpExtInst %uint %152 UMin %1391 %uint_255
       %1393 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1392
       %1394 = OpLoad %float %1393 None
       %1395 = OpCompositeExtract %uint %threadIdx 1
       %1396 = OpBitcast %int %1395
       %1397 = OpIMul %int %1396 %int_32
       %1398 = OpIAdd %int %1397 %int_10
       %1399 = OpBitcast %uint %1398
       %1400 = OpExtInst %uint %152 UMin %1399 %uint_255
       %1401 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1400
       %1402 = OpLoad %float %1401 None
       %1403 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %1404 = OpLoad %float %1403 None
       %1405 = OpExtInst %float %152 Fma %1394 %1402 %1404
               OpStore %1386 %1405 None
       %1406 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %1407 = OpCompositeExtract %uint %threadIdx 0
       %1408 = OpBitcast %int %1407
       %1409 = OpIMul %int %1408 %int_32
       %1410 = OpIAdd %int %1409 %int_18
       %1411 = OpBitcast %uint %1410
       %1412 = OpExtInst %uint %152 UMin %1411 %uint_255
       %1413 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1412
       %1414 = OpLoad %float %1413 None
       %1415 = OpCompositeExtract %uint %threadIdx 1
       %1416 = OpBitcast %int %1415
       %1417 = OpIMul %int %1416 %int_32
       %1418 = OpIAdd %int %1417 %int_18
       %1419 = OpBitcast %uint %1418
       %1420 = OpExtInst %uint %152 UMin %1419 %uint_255
       %1421 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1420
       %1422 = OpLoad %float %1421 None
       %1423 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %1424 = OpLoad %float %1423 None
       %1425 = OpExtInst %float %152 Fma %1414 %1422 %1424
               OpStore %1406 %1425 None
       %1426 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %1427 = OpCompositeExtract %uint %threadIdx 0
       %1428 = OpBitcast %int %1427
       %1429 = OpIMul %int %1428 %int_32
       %1430 = OpIAdd %int %1429 %int_18
       %1431 = OpBitcast %uint %1430
       %1432 = OpExtInst %uint %152 UMin %1431 %uint_255
       %1433 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1432
       %1434 = OpLoad %float %1433 None
       %1435 = OpCompositeExtract %uint %threadIdx 1
       %1436 = OpBitcast %int %1435
       %1437 = OpIMul %int %1436 %int_32
       %1438 = OpIAdd %int %1437 %int_26
       %1439 = OpBitcast %uint %1438
       %1440 = OpExtInst %uint %152 UMin %1439 %uint_255
       %1441 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1440
       %1442 = OpLoad %float %1441 None
       %1443 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %1444 = OpLoad %float %1443 None
       %1445 = OpExtInst %float %152 Fma %1434 %1442 %1444
               OpStore %1426 %1445 None
       %1446 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %1447 = OpCompositeExtract %uint %threadIdx 0
       %1448 = OpBitcast %int %1447
       %1449 = OpIMul %int %1448 %int_32
       %1450 = OpIAdd %int %1449 %int_26
       %1451 = OpBitcast %uint %1450
       %1452 = OpExtInst %uint %152 UMin %1451 %uint_255
       %1453 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1452
       %1454 = OpLoad %float %1453 None
       %1455 = OpCompositeExtract %uint %threadIdx 1
       %1456 = OpBitcast %int %1455
       %1457 = OpIMul %int %1456 %int_32
       %1458 = OpIAdd %int %1457 %int_2
       %1459 = OpBitcast %uint %1458
       %1460 = OpExtInst %uint %152 UMin %1459 %uint_255
       %1461 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1460
       %1462 = OpLoad %float %1461 None
       %1463 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %1464 = OpLoad %float %1463 None
       %1465 = OpExtInst %float %152 Fma %1454 %1462 %1464
               OpStore %1446 %1465 None
       %1466 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %1467 = OpCompositeExtract %uint %threadIdx 0
       %1468 = OpBitcast %int %1467
       %1469 = OpIMul %int %1468 %int_32
       %1470 = OpIAdd %int %1469 %int_26
       %1471 = OpBitcast %uint %1470
       %1472 = OpExtInst %uint %152 UMin %1471 %uint_255
       %1473 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1472
       %1474 = OpLoad %float %1473 None
       %1475 = OpCompositeExtract %uint %threadIdx 1
       %1476 = OpBitcast %int %1475
       %1477 = OpIMul %int %1476 %int_32
       %1478 = OpIAdd %int %1477 %int_10
       %1479 = OpBitcast %uint %1478
       %1480 = OpExtInst %uint %152 UMin %1479 %uint_255
       %1481 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1480
       %1482 = OpLoad %float %1481 None
       %1483 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %1484 = OpLoad %float %1483 None
       %1485 = OpExtInst %float %152 Fma %1474 %1482 %1484
               OpStore %1466 %1485 None
       %1486 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %1487 = OpCompositeExtract %uint %threadIdx 0
       %1488 = OpBitcast %int %1487
       %1489 = OpIMul %int %1488 %int_32
       %1490 = OpIAdd %int %1489 %int_26
       %1491 = OpBitcast %uint %1490
       %1492 = OpExtInst %uint %152 UMin %1491 %uint_255
       %1493 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1492
       %1494 = OpLoad %float %1493 None
       %1495 = OpCompositeExtract %uint %threadIdx 1
       %1496 = OpBitcast %int %1495
       %1497 = OpIMul %int %1496 %int_32
       %1498 = OpIAdd %int %1497 %int_18
       %1499 = OpBitcast %uint %1498
       %1500 = OpExtInst %uint %152 UMin %1499 %uint_255
       %1501 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1500
       %1502 = OpLoad %float %1501 None
       %1503 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %1504 = OpLoad %float %1503 None
       %1505 = OpExtInst %float %152 Fma %1494 %1502 %1504
               OpStore %1486 %1505 None
       %1506 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %1507 = OpCompositeExtract %uint %threadIdx 0
       %1508 = OpBitcast %int %1507
       %1509 = OpIMul %int %1508 %int_32
       %1510 = OpIAdd %int %1509 %int_26
       %1511 = OpBitcast %uint %1510
       %1512 = OpExtInst %uint %152 UMin %1511 %uint_255
       %1513 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1512
       %1514 = OpLoad %float %1513 None
       %1515 = OpCompositeExtract %uint %threadIdx 1
       %1516 = OpBitcast %int %1515
       %1517 = OpIMul %int %1516 %int_32
       %1518 = OpIAdd %int %1517 %int_26
       %1519 = OpBitcast %uint %1518
       %1520 = OpExtInst %uint %152 UMin %1519 %uint_255
       %1521 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1520
       %1522 = OpLoad %float %1521 None
       %1523 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %1524 = OpLoad %float %1523 None
       %1525 = OpExtInst %float %152 Fma %1514 %1522 %1524
               OpStore %1506 %1525 None
       %1526 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %1527 = OpCompositeExtract %uint %threadIdx 0
       %1528 = OpBitcast %int %1527
       %1529 = OpIMul %int %1528 %int_32
       %1530 = OpIAdd %int %1529 %int_3
       %1531 = OpBitcast %uint %1530
       %1532 = OpExtInst %uint %152 UMin %1531 %uint_255
       %1533 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1532
       %1534 = OpLoad %float %1533 None
       %1535 = OpCompositeExtract %uint %threadIdx 1
       %1536 = OpBitcast %int %1535
       %1537 = OpIMul %int %1536 %int_32
       %1538 = OpIAdd %int %1537 %int_3
       %1539 = OpBitcast %uint %1538
       %1540 = OpExtInst %uint %152 UMin %1539 %uint_255
       %1541 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1540
       %1542 = OpLoad %float %1541 None
       %1543 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %1544 = OpLoad %float %1543 None
       %1545 = OpExtInst %float %152 Fma %1534 %1542 %1544
               OpStore %1526 %1545 None
       %1546 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %1547 = OpCompositeExtract %uint %threadIdx 0
       %1548 = OpBitcast %int %1547
       %1549 = OpIMul %int %1548 %int_32
       %1550 = OpIAdd %int %1549 %int_3
       %1551 = OpBitcast %uint %1550
       %1552 = OpExtInst %uint %152 UMin %1551 %uint_255
       %1553 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1552
       %1554 = OpLoad %float %1553 None
       %1555 = OpCompositeExtract %uint %threadIdx 1
       %1556 = OpBitcast %int %1555
       %1557 = OpIMul %int %1556 %int_32
       %1558 = OpIAdd %int %1557 %int_11
       %1560 = OpBitcast %uint %1558
       %1561 = OpExtInst %uint %152 UMin %1560 %uint_255
       %1562 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1561
       %1563 = OpLoad %float %1562 None
       %1564 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %1565 = OpLoad %float %1564 None
       %1566 = OpExtInst %float %152 Fma %1554 %1563 %1565
               OpStore %1546 %1566 None
       %1567 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %1568 = OpCompositeExtract %uint %threadIdx 0
       %1569 = OpBitcast %int %1568
       %1570 = OpIMul %int %1569 %int_32
       %1571 = OpIAdd %int %1570 %int_3
       %1572 = OpBitcast %uint %1571
       %1573 = OpExtInst %uint %152 UMin %1572 %uint_255
       %1574 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1573
       %1575 = OpLoad %float %1574 None
       %1576 = OpCompositeExtract %uint %threadIdx 1
       %1577 = OpBitcast %int %1576
       %1578 = OpIMul %int %1577 %int_32
       %1579 = OpIAdd %int %1578 %int_19
       %1581 = OpBitcast %uint %1579
       %1582 = OpExtInst %uint %152 UMin %1581 %uint_255
       %1583 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1582
       %1584 = OpLoad %float %1583 None
       %1585 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %1586 = OpLoad %float %1585 None
       %1587 = OpExtInst %float %152 Fma %1575 %1584 %1586
               OpStore %1567 %1587 None
       %1588 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %1589 = OpCompositeExtract %uint %threadIdx 0
       %1590 = OpBitcast %int %1589
       %1591 = OpIMul %int %1590 %int_32
       %1592 = OpIAdd %int %1591 %int_3
       %1593 = OpBitcast %uint %1592
       %1594 = OpExtInst %uint %152 UMin %1593 %uint_255
       %1595 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1594
       %1596 = OpLoad %float %1595 None
       %1597 = OpCompositeExtract %uint %threadIdx 1
       %1598 = OpBitcast %int %1597
       %1599 = OpIMul %int %1598 %int_32
       %1600 = OpIAdd %int %1599 %int_27
       %1602 = OpBitcast %uint %1600
       %1603 = OpExtInst %uint %152 UMin %1602 %uint_255
       %1604 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1603
       %1605 = OpLoad %float %1604 None
       %1606 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %1607 = OpLoad %float %1606 None
       %1608 = OpExtInst %float %152 Fma %1596 %1605 %1607
               OpStore %1588 %1608 None
       %1609 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %1610 = OpCompositeExtract %uint %threadIdx 0
       %1611 = OpBitcast %int %1610
       %1612 = OpIMul %int %1611 %int_32
       %1613 = OpIAdd %int %1612 %int_11
       %1614 = OpBitcast %uint %1613
       %1615 = OpExtInst %uint %152 UMin %1614 %uint_255
       %1616 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1615
       %1617 = OpLoad %float %1616 None
       %1618 = OpCompositeExtract %uint %threadIdx 1
       %1619 = OpBitcast %int %1618
       %1620 = OpIMul %int %1619 %int_32
       %1621 = OpIAdd %int %1620 %int_3
       %1622 = OpBitcast %uint %1621
       %1623 = OpExtInst %uint %152 UMin %1622 %uint_255
       %1624 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1623
       %1625 = OpLoad %float %1624 None
       %1626 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %1627 = OpLoad %float %1626 None
       %1628 = OpExtInst %float %152 Fma %1617 %1625 %1627
               OpStore %1609 %1628 None
       %1629 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %1630 = OpCompositeExtract %uint %threadIdx 0
       %1631 = OpBitcast %int %1630
       %1632 = OpIMul %int %1631 %int_32
       %1633 = OpIAdd %int %1632 %int_11
       %1634 = OpBitcast %uint %1633
       %1635 = OpExtInst %uint %152 UMin %1634 %uint_255
       %1636 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1635
       %1637 = OpLoad %float %1636 None
       %1638 = OpCompositeExtract %uint %threadIdx 1
       %1639 = OpBitcast %int %1638
       %1640 = OpIMul %int %1639 %int_32
       %1641 = OpIAdd %int %1640 %int_11
       %1642 = OpBitcast %uint %1641
       %1643 = OpExtInst %uint %152 UMin %1642 %uint_255
       %1644 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1643
       %1645 = OpLoad %float %1644 None
       %1646 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %1647 = OpLoad %float %1646 None
       %1648 = OpExtInst %float %152 Fma %1637 %1645 %1647
               OpStore %1629 %1648 None
       %1649 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %1650 = OpCompositeExtract %uint %threadIdx 0
       %1651 = OpBitcast %int %1650
       %1652 = OpIMul %int %1651 %int_32
       %1653 = OpIAdd %int %1652 %int_11
       %1654 = OpBitcast %uint %1653
       %1655 = OpExtInst %uint %152 UMin %1654 %uint_255
       %1656 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1655
       %1657 = OpLoad %float %1656 None
       %1658 = OpCompositeExtract %uint %threadIdx 1
       %1659 = OpBitcast %int %1658
       %1660 = OpIMul %int %1659 %int_32
       %1661 = OpIAdd %int %1660 %int_19
       %1662 = OpBitcast %uint %1661
       %1663 = OpExtInst %uint %152 UMin %1662 %uint_255
       %1664 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1663
       %1665 = OpLoad %float %1664 None
       %1666 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %1667 = OpLoad %float %1666 None
       %1668 = OpExtInst %float %152 Fma %1657 %1665 %1667
               OpStore %1649 %1668 None
       %1669 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %1670 = OpCompositeExtract %uint %threadIdx 0
       %1671 = OpBitcast %int %1670
       %1672 = OpIMul %int %1671 %int_32
       %1673 = OpIAdd %int %1672 %int_11
       %1674 = OpBitcast %uint %1673
       %1675 = OpExtInst %uint %152 UMin %1674 %uint_255
       %1676 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1675
       %1677 = OpLoad %float %1676 None
       %1678 = OpCompositeExtract %uint %threadIdx 1
       %1679 = OpBitcast %int %1678
       %1680 = OpIMul %int %1679 %int_32
       %1681 = OpIAdd %int %1680 %int_27
       %1682 = OpBitcast %uint %1681
       %1683 = OpExtInst %uint %152 UMin %1682 %uint_255
       %1684 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1683
       %1685 = OpLoad %float %1684 None
       %1686 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %1687 = OpLoad %float %1686 None
       %1688 = OpExtInst %float %152 Fma %1677 %1685 %1687
               OpStore %1669 %1688 None
       %1689 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %1690 = OpCompositeExtract %uint %threadIdx 0
       %1691 = OpBitcast %int %1690
       %1692 = OpIMul %int %1691 %int_32
       %1693 = OpIAdd %int %1692 %int_19
       %1694 = OpBitcast %uint %1693
       %1695 = OpExtInst %uint %152 UMin %1694 %uint_255
       %1696 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1695
       %1697 = OpLoad %float %1696 None
       %1698 = OpCompositeExtract %uint %threadIdx 1
       %1699 = OpBitcast %int %1698
       %1700 = OpIMul %int %1699 %int_32
       %1701 = OpIAdd %int %1700 %int_3
       %1702 = OpBitcast %uint %1701
       %1703 = OpExtInst %uint %152 UMin %1702 %uint_255
       %1704 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1703
       %1705 = OpLoad %float %1704 None
       %1706 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %1707 = OpLoad %float %1706 None
       %1708 = OpExtInst %float %152 Fma %1697 %1705 %1707
               OpStore %1689 %1708 None
       %1709 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %1710 = OpCompositeExtract %uint %threadIdx 0
       %1711 = OpBitcast %int %1710
       %1712 = OpIMul %int %1711 %int_32
       %1713 = OpIAdd %int %1712 %int_19
       %1714 = OpBitcast %uint %1713
       %1715 = OpExtInst %uint %152 UMin %1714 %uint_255
       %1716 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1715
       %1717 = OpLoad %float %1716 None
       %1718 = OpCompositeExtract %uint %threadIdx 1
       %1719 = OpBitcast %int %1718
       %1720 = OpIMul %int %1719 %int_32
       %1721 = OpIAdd %int %1720 %int_11
       %1722 = OpBitcast %uint %1721
       %1723 = OpExtInst %uint %152 UMin %1722 %uint_255
       %1724 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1723
       %1725 = OpLoad %float %1724 None
       %1726 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %1727 = OpLoad %float %1726 None
       %1728 = OpExtInst %float %152 Fma %1717 %1725 %1727
               OpStore %1709 %1728 None
       %1729 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %1730 = OpCompositeExtract %uint %threadIdx 0
       %1731 = OpBitcast %int %1730
       %1732 = OpIMul %int %1731 %int_32
       %1733 = OpIAdd %int %1732 %int_19
       %1734 = OpBitcast %uint %1733
       %1735 = OpExtInst %uint %152 UMin %1734 %uint_255
       %1736 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1735
       %1737 = OpLoad %float %1736 None
       %1738 = OpCompositeExtract %uint %threadIdx 1
       %1739 = OpBitcast %int %1738
       %1740 = OpIMul %int %1739 %int_32
       %1741 = OpIAdd %int %1740 %int_19
       %1742 = OpBitcast %uint %1741
       %1743 = OpExtInst %uint %152 UMin %1742 %uint_255
       %1744 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1743
       %1745 = OpLoad %float %1744 None
       %1746 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %1747 = OpLoad %float %1746 None
       %1748 = OpExtInst %float %152 Fma %1737 %1745 %1747
               OpStore %1729 %1748 None
       %1749 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %1750 = OpCompositeExtract %uint %threadIdx 0
       %1751 = OpBitcast %int %1750
       %1752 = OpIMul %int %1751 %int_32
       %1753 = OpIAdd %int %1752 %int_19
       %1754 = OpBitcast %uint %1753
       %1755 = OpExtInst %uint %152 UMin %1754 %uint_255
       %1756 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1755
       %1757 = OpLoad %float %1756 None
       %1758 = OpCompositeExtract %uint %threadIdx 1
       %1759 = OpBitcast %int %1758
       %1760 = OpIMul %int %1759 %int_32
       %1761 = OpIAdd %int %1760 %int_27
       %1762 = OpBitcast %uint %1761
       %1763 = OpExtInst %uint %152 UMin %1762 %uint_255
       %1764 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1763
       %1765 = OpLoad %float %1764 None
       %1766 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %1767 = OpLoad %float %1766 None
       %1768 = OpExtInst %float %152 Fma %1757 %1765 %1767
               OpStore %1749 %1768 None
       %1769 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %1770 = OpCompositeExtract %uint %threadIdx 0
       %1771 = OpBitcast %int %1770
       %1772 = OpIMul %int %1771 %int_32
       %1773 = OpIAdd %int %1772 %int_27
       %1774 = OpBitcast %uint %1773
       %1775 = OpExtInst %uint %152 UMin %1774 %uint_255
       %1776 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1775
       %1777 = OpLoad %float %1776 None
       %1778 = OpCompositeExtract %uint %threadIdx 1
       %1779 = OpBitcast %int %1778
       %1780 = OpIMul %int %1779 %int_32
       %1781 = OpIAdd %int %1780 %int_3
       %1782 = OpBitcast %uint %1781
       %1783 = OpExtInst %uint %152 UMin %1782 %uint_255
       %1784 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1783
       %1785 = OpLoad %float %1784 None
       %1786 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %1787 = OpLoad %float %1786 None
       %1788 = OpExtInst %float %152 Fma %1777 %1785 %1787
               OpStore %1769 %1788 None
       %1789 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %1790 = OpCompositeExtract %uint %threadIdx 0
       %1791 = OpBitcast %int %1790
       %1792 = OpIMul %int %1791 %int_32
       %1793 = OpIAdd %int %1792 %int_27
       %1794 = OpBitcast %uint %1793
       %1795 = OpExtInst %uint %152 UMin %1794 %uint_255
       %1796 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1795
       %1797 = OpLoad %float %1796 None
       %1798 = OpCompositeExtract %uint %threadIdx 1
       %1799 = OpBitcast %int %1798
       %1800 = OpIMul %int %1799 %int_32
       %1801 = OpIAdd %int %1800 %int_11
       %1802 = OpBitcast %uint %1801
       %1803 = OpExtInst %uint %152 UMin %1802 %uint_255
       %1804 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1803
       %1805 = OpLoad %float %1804 None
       %1806 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %1807 = OpLoad %float %1806 None
       %1808 = OpExtInst %float %152 Fma %1797 %1805 %1807
               OpStore %1789 %1808 None
       %1809 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %1810 = OpCompositeExtract %uint %threadIdx 0
       %1811 = OpBitcast %int %1810
       %1812 = OpIMul %int %1811 %int_32
       %1813 = OpIAdd %int %1812 %int_27
       %1814 = OpBitcast %uint %1813
       %1815 = OpExtInst %uint %152 UMin %1814 %uint_255
       %1816 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1815
       %1817 = OpLoad %float %1816 None
       %1818 = OpCompositeExtract %uint %threadIdx 1
       %1819 = OpBitcast %int %1818
       %1820 = OpIMul %int %1819 %int_32
       %1821 = OpIAdd %int %1820 %int_19
       %1822 = OpBitcast %uint %1821
       %1823 = OpExtInst %uint %152 UMin %1822 %uint_255
       %1824 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1823
       %1825 = OpLoad %float %1824 None
       %1826 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %1827 = OpLoad %float %1826 None
       %1828 = OpExtInst %float %152 Fma %1817 %1825 %1827
               OpStore %1809 %1828 None
       %1829 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %1830 = OpCompositeExtract %uint %threadIdx 0
       %1831 = OpBitcast %int %1830
       %1832 = OpIMul %int %1831 %int_32
       %1833 = OpIAdd %int %1832 %int_27
       %1834 = OpBitcast %uint %1833
       %1835 = OpExtInst %uint %152 UMin %1834 %uint_255
       %1836 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1835
       %1837 = OpLoad %float %1836 None
       %1838 = OpCompositeExtract %uint %threadIdx 1
       %1839 = OpBitcast %int %1838
       %1840 = OpIMul %int %1839 %int_32
       %1841 = OpIAdd %int %1840 %int_27
       %1842 = OpBitcast %uint %1841
       %1843 = OpExtInst %uint %152 UMin %1842 %uint_255
       %1844 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1843
       %1845 = OpLoad %float %1844 None
       %1846 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %1847 = OpLoad %float %1846 None
       %1848 = OpExtInst %float %152 Fma %1837 %1845 %1847
               OpStore %1829 %1848 None
       %1849 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %1850 = OpCompositeExtract %uint %threadIdx 0
       %1851 = OpBitcast %int %1850
       %1852 = OpIMul %int %1851 %int_32
       %1853 = OpIAdd %int %1852 %int_4
       %1854 = OpBitcast %uint %1853
       %1855 = OpExtInst %uint %152 UMin %1854 %uint_255
       %1856 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1855
       %1857 = OpLoad %float %1856 None
       %1858 = OpCompositeExtract %uint %threadIdx 1
       %1859 = OpBitcast %int %1858
       %1860 = OpIMul %int %1859 %int_32
       %1861 = OpIAdd %int %1860 %int_4
       %1862 = OpBitcast %uint %1861
       %1863 = OpExtInst %uint %152 UMin %1862 %uint_255
       %1864 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1863
       %1865 = OpLoad %float %1864 None
       %1866 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %1867 = OpLoad %float %1866 None
       %1868 = OpExtInst %float %152 Fma %1857 %1865 %1867
               OpStore %1849 %1868 None
       %1869 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %1870 = OpCompositeExtract %uint %threadIdx 0
       %1871 = OpBitcast %int %1870
       %1872 = OpIMul %int %1871 %int_32
       %1873 = OpIAdd %int %1872 %int_4
       %1874 = OpBitcast %uint %1873
       %1875 = OpExtInst %uint %152 UMin %1874 %uint_255
       %1876 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1875
       %1877 = OpLoad %float %1876 None
       %1878 = OpCompositeExtract %uint %threadIdx 1
       %1879 = OpBitcast %int %1878
       %1880 = OpIMul %int %1879 %int_32
       %1881 = OpIAdd %int %1880 %int_12
       %1882 = OpBitcast %uint %1881
       %1883 = OpExtInst %uint %152 UMin %1882 %uint_255
       %1884 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1883
       %1885 = OpLoad %float %1884 None
       %1886 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %1887 = OpLoad %float %1886 None
       %1888 = OpExtInst %float %152 Fma %1877 %1885 %1887
               OpStore %1869 %1888 None
       %1889 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %1890 = OpCompositeExtract %uint %threadIdx 0
       %1891 = OpBitcast %int %1890
       %1892 = OpIMul %int %1891 %int_32
       %1893 = OpIAdd %int %1892 %int_4
       %1894 = OpBitcast %uint %1893
       %1895 = OpExtInst %uint %152 UMin %1894 %uint_255
       %1896 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1895
       %1897 = OpLoad %float %1896 None
       %1898 = OpCompositeExtract %uint %threadIdx 1
       %1899 = OpBitcast %int %1898
       %1900 = OpIMul %int %1899 %int_32
       %1901 = OpIAdd %int %1900 %int_20
       %1903 = OpBitcast %uint %1901
       %1904 = OpExtInst %uint %152 UMin %1903 %uint_255
       %1905 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1904
       %1906 = OpLoad %float %1905 None
       %1907 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %1908 = OpLoad %float %1907 None
       %1909 = OpExtInst %float %152 Fma %1897 %1906 %1908
               OpStore %1889 %1909 None
       %1910 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %1911 = OpCompositeExtract %uint %threadIdx 0
       %1912 = OpBitcast %int %1911
       %1913 = OpIMul %int %1912 %int_32
       %1914 = OpIAdd %int %1913 %int_4
       %1915 = OpBitcast %uint %1914
       %1916 = OpExtInst %uint %152 UMin %1915 %uint_255
       %1917 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1916
       %1918 = OpLoad %float %1917 None
       %1919 = OpCompositeExtract %uint %threadIdx 1
       %1920 = OpBitcast %int %1919
       %1921 = OpIMul %int %1920 %int_32
       %1922 = OpIAdd %int %1921 %int_28
       %1924 = OpBitcast %uint %1922
       %1925 = OpExtInst %uint %152 UMin %1924 %uint_255
       %1926 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1925
       %1927 = OpLoad %float %1926 None
       %1928 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %1929 = OpLoad %float %1928 None
       %1930 = OpExtInst %float %152 Fma %1918 %1927 %1929
               OpStore %1910 %1930 None
       %1931 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %1932 = OpCompositeExtract %uint %threadIdx 0
       %1933 = OpBitcast %int %1932
       %1934 = OpIMul %int %1933 %int_32
       %1935 = OpIAdd %int %1934 %int_12
       %1936 = OpBitcast %uint %1935
       %1937 = OpExtInst %uint %152 UMin %1936 %uint_255
       %1938 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1937
       %1939 = OpLoad %float %1938 None
       %1940 = OpCompositeExtract %uint %threadIdx 1
       %1941 = OpBitcast %int %1940
       %1942 = OpIMul %int %1941 %int_32
       %1943 = OpIAdd %int %1942 %int_4
       %1944 = OpBitcast %uint %1943
       %1945 = OpExtInst %uint %152 UMin %1944 %uint_255
       %1946 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1945
       %1947 = OpLoad %float %1946 None
       %1948 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %1949 = OpLoad %float %1948 None
       %1950 = OpExtInst %float %152 Fma %1939 %1947 %1949
               OpStore %1931 %1950 None
       %1951 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %1952 = OpCompositeExtract %uint %threadIdx 0
       %1953 = OpBitcast %int %1952
       %1954 = OpIMul %int %1953 %int_32
       %1955 = OpIAdd %int %1954 %int_12
       %1956 = OpBitcast %uint %1955
       %1957 = OpExtInst %uint %152 UMin %1956 %uint_255
       %1958 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1957
       %1959 = OpLoad %float %1958 None
       %1960 = OpCompositeExtract %uint %threadIdx 1
       %1961 = OpBitcast %int %1960
       %1962 = OpIMul %int %1961 %int_32
       %1963 = OpIAdd %int %1962 %int_12
       %1964 = OpBitcast %uint %1963
       %1965 = OpExtInst %uint %152 UMin %1964 %uint_255
       %1966 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1965
       %1967 = OpLoad %float %1966 None
       %1968 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %1969 = OpLoad %float %1968 None
       %1970 = OpExtInst %float %152 Fma %1959 %1967 %1969
               OpStore %1951 %1970 None
       %1971 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %1972 = OpCompositeExtract %uint %threadIdx 0
       %1973 = OpBitcast %int %1972
       %1974 = OpIMul %int %1973 %int_32
       %1975 = OpIAdd %int %1974 %int_12
       %1976 = OpBitcast %uint %1975
       %1977 = OpExtInst %uint %152 UMin %1976 %uint_255
       %1978 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1977
       %1979 = OpLoad %float %1978 None
       %1980 = OpCompositeExtract %uint %threadIdx 1
       %1981 = OpBitcast %int %1980
       %1982 = OpIMul %int %1981 %int_32
       %1983 = OpIAdd %int %1982 %int_20
       %1984 = OpBitcast %uint %1983
       %1985 = OpExtInst %uint %152 UMin %1984 %uint_255
       %1986 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %1985
       %1987 = OpLoad %float %1986 None
       %1988 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %1989 = OpLoad %float %1988 None
       %1990 = OpExtInst %float %152 Fma %1979 %1987 %1989
               OpStore %1971 %1990 None
       %1991 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %1992 = OpCompositeExtract %uint %threadIdx 0
       %1993 = OpBitcast %int %1992
       %1994 = OpIMul %int %1993 %int_32
       %1995 = OpIAdd %int %1994 %int_12
       %1996 = OpBitcast %uint %1995
       %1997 = OpExtInst %uint %152 UMin %1996 %uint_255
       %1998 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %1997
       %1999 = OpLoad %float %1998 None
       %2000 = OpCompositeExtract %uint %threadIdx 1
       %2001 = OpBitcast %int %2000
       %2002 = OpIMul %int %2001 %int_32
       %2003 = OpIAdd %int %2002 %int_28
       %2004 = OpBitcast %uint %2003
       %2005 = OpExtInst %uint %152 UMin %2004 %uint_255
       %2006 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2005
       %2007 = OpLoad %float %2006 None
       %2008 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %2009 = OpLoad %float %2008 None
       %2010 = OpExtInst %float %152 Fma %1999 %2007 %2009
               OpStore %1991 %2010 None
       %2011 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %2012 = OpCompositeExtract %uint %threadIdx 0
       %2013 = OpBitcast %int %2012
       %2014 = OpIMul %int %2013 %int_32
       %2015 = OpIAdd %int %2014 %int_20
       %2016 = OpBitcast %uint %2015
       %2017 = OpExtInst %uint %152 UMin %2016 %uint_255
       %2018 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2017
       %2019 = OpLoad %float %2018 None
       %2020 = OpCompositeExtract %uint %threadIdx 1
       %2021 = OpBitcast %int %2020
       %2022 = OpIMul %int %2021 %int_32
       %2023 = OpIAdd %int %2022 %int_4
       %2024 = OpBitcast %uint %2023
       %2025 = OpExtInst %uint %152 UMin %2024 %uint_255
       %2026 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2025
       %2027 = OpLoad %float %2026 None
       %2028 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %2029 = OpLoad %float %2028 None
       %2030 = OpExtInst %float %152 Fma %2019 %2027 %2029
               OpStore %2011 %2030 None
       %2031 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %2032 = OpCompositeExtract %uint %threadIdx 0
       %2033 = OpBitcast %int %2032
       %2034 = OpIMul %int %2033 %int_32
       %2035 = OpIAdd %int %2034 %int_20
       %2036 = OpBitcast %uint %2035
       %2037 = OpExtInst %uint %152 UMin %2036 %uint_255
       %2038 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2037
       %2039 = OpLoad %float %2038 None
       %2040 = OpCompositeExtract %uint %threadIdx 1
       %2041 = OpBitcast %int %2040
       %2042 = OpIMul %int %2041 %int_32
       %2043 = OpIAdd %int %2042 %int_12
       %2044 = OpBitcast %uint %2043
       %2045 = OpExtInst %uint %152 UMin %2044 %uint_255
       %2046 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2045
       %2047 = OpLoad %float %2046 None
       %2048 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %2049 = OpLoad %float %2048 None
       %2050 = OpExtInst %float %152 Fma %2039 %2047 %2049
               OpStore %2031 %2050 None
       %2051 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %2052 = OpCompositeExtract %uint %threadIdx 0
       %2053 = OpBitcast %int %2052
       %2054 = OpIMul %int %2053 %int_32
       %2055 = OpIAdd %int %2054 %int_20
       %2056 = OpBitcast %uint %2055
       %2057 = OpExtInst %uint %152 UMin %2056 %uint_255
       %2058 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2057
       %2059 = OpLoad %float %2058 None
       %2060 = OpCompositeExtract %uint %threadIdx 1
       %2061 = OpBitcast %int %2060
       %2062 = OpIMul %int %2061 %int_32
       %2063 = OpIAdd %int %2062 %int_20
       %2064 = OpBitcast %uint %2063
       %2065 = OpExtInst %uint %152 UMin %2064 %uint_255
       %2066 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2065
       %2067 = OpLoad %float %2066 None
       %2068 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %2069 = OpLoad %float %2068 None
       %2070 = OpExtInst %float %152 Fma %2059 %2067 %2069
               OpStore %2051 %2070 None
       %2071 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %2072 = OpCompositeExtract %uint %threadIdx 0
       %2073 = OpBitcast %int %2072
       %2074 = OpIMul %int %2073 %int_32
       %2075 = OpIAdd %int %2074 %int_20
       %2076 = OpBitcast %uint %2075
       %2077 = OpExtInst %uint %152 UMin %2076 %uint_255
       %2078 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2077
       %2079 = OpLoad %float %2078 None
       %2080 = OpCompositeExtract %uint %threadIdx 1
       %2081 = OpBitcast %int %2080
       %2082 = OpIMul %int %2081 %int_32
       %2083 = OpIAdd %int %2082 %int_28
       %2084 = OpBitcast %uint %2083
       %2085 = OpExtInst %uint %152 UMin %2084 %uint_255
       %2086 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2085
       %2087 = OpLoad %float %2086 None
       %2088 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %2089 = OpLoad %float %2088 None
       %2090 = OpExtInst %float %152 Fma %2079 %2087 %2089
               OpStore %2071 %2090 None
       %2091 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %2092 = OpCompositeExtract %uint %threadIdx 0
       %2093 = OpBitcast %int %2092
       %2094 = OpIMul %int %2093 %int_32
       %2095 = OpIAdd %int %2094 %int_28
       %2096 = OpBitcast %uint %2095
       %2097 = OpExtInst %uint %152 UMin %2096 %uint_255
       %2098 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2097
       %2099 = OpLoad %float %2098 None
       %2100 = OpCompositeExtract %uint %threadIdx 1
       %2101 = OpBitcast %int %2100
       %2102 = OpIMul %int %2101 %int_32
       %2103 = OpIAdd %int %2102 %int_4
       %2104 = OpBitcast %uint %2103
       %2105 = OpExtInst %uint %152 UMin %2104 %uint_255
       %2106 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2105
       %2107 = OpLoad %float %2106 None
       %2108 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %2109 = OpLoad %float %2108 None
       %2110 = OpExtInst %float %152 Fma %2099 %2107 %2109
               OpStore %2091 %2110 None
       %2111 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %2112 = OpCompositeExtract %uint %threadIdx 0
       %2113 = OpBitcast %int %2112
       %2114 = OpIMul %int %2113 %int_32
       %2115 = OpIAdd %int %2114 %int_28
       %2116 = OpBitcast %uint %2115
       %2117 = OpExtInst %uint %152 UMin %2116 %uint_255
       %2118 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2117
       %2119 = OpLoad %float %2118 None
       %2120 = OpCompositeExtract %uint %threadIdx 1
       %2121 = OpBitcast %int %2120
       %2122 = OpIMul %int %2121 %int_32
       %2123 = OpIAdd %int %2122 %int_12
       %2124 = OpBitcast %uint %2123
       %2125 = OpExtInst %uint %152 UMin %2124 %uint_255
       %2126 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2125
       %2127 = OpLoad %float %2126 None
       %2128 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %2129 = OpLoad %float %2128 None
       %2130 = OpExtInst %float %152 Fma %2119 %2127 %2129
               OpStore %2111 %2130 None
       %2131 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %2132 = OpCompositeExtract %uint %threadIdx 0
       %2133 = OpBitcast %int %2132
       %2134 = OpIMul %int %2133 %int_32
       %2135 = OpIAdd %int %2134 %int_28
       %2136 = OpBitcast %uint %2135
       %2137 = OpExtInst %uint %152 UMin %2136 %uint_255
       %2138 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2137
       %2139 = OpLoad %float %2138 None
       %2140 = OpCompositeExtract %uint %threadIdx 1
       %2141 = OpBitcast %int %2140
       %2142 = OpIMul %int %2141 %int_32
       %2143 = OpIAdd %int %2142 %int_20
       %2144 = OpBitcast %uint %2143
       %2145 = OpExtInst %uint %152 UMin %2144 %uint_255
       %2146 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2145
       %2147 = OpLoad %float %2146 None
       %2148 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %2149 = OpLoad %float %2148 None
       %2150 = OpExtInst %float %152 Fma %2139 %2147 %2149
               OpStore %2131 %2150 None
       %2151 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %2152 = OpCompositeExtract %uint %threadIdx 0
       %2153 = OpBitcast %int %2152
       %2154 = OpIMul %int %2153 %int_32
       %2155 = OpIAdd %int %2154 %int_28
       %2156 = OpBitcast %uint %2155
       %2157 = OpExtInst %uint %152 UMin %2156 %uint_255
       %2158 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2157
       %2159 = OpLoad %float %2158 None
       %2160 = OpCompositeExtract %uint %threadIdx 1
       %2161 = OpBitcast %int %2160
       %2162 = OpIMul %int %2161 %int_32
       %2163 = OpIAdd %int %2162 %int_28
       %2164 = OpBitcast %uint %2163
       %2165 = OpExtInst %uint %152 UMin %2164 %uint_255
       %2166 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2165
       %2167 = OpLoad %float %2166 None
       %2168 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %2169 = OpLoad %float %2168 None
       %2170 = OpExtInst %float %152 Fma %2159 %2167 %2169
               OpStore %2151 %2170 None
       %2171 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %2172 = OpCompositeExtract %uint %threadIdx 0
       %2173 = OpBitcast %int %2172
       %2174 = OpIMul %int %2173 %int_32
       %2175 = OpIAdd %int %2174 %int_5
       %2177 = OpBitcast %uint %2175
       %2178 = OpExtInst %uint %152 UMin %2177 %uint_255
       %2179 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2178
       %2180 = OpLoad %float %2179 None
       %2181 = OpCompositeExtract %uint %threadIdx 1
       %2182 = OpBitcast %int %2181
       %2183 = OpIMul %int %2182 %int_32
       %2184 = OpIAdd %int %2183 %int_5
       %2185 = OpBitcast %uint %2184
       %2186 = OpExtInst %uint %152 UMin %2185 %uint_255
       %2187 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2186
       %2188 = OpLoad %float %2187 None
       %2189 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %2190 = OpLoad %float %2189 None
       %2191 = OpExtInst %float %152 Fma %2180 %2188 %2190
               OpStore %2171 %2191 None
       %2192 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %2193 = OpCompositeExtract %uint %threadIdx 0
       %2194 = OpBitcast %int %2193
       %2195 = OpIMul %int %2194 %int_32
       %2196 = OpIAdd %int %2195 %int_5
       %2197 = OpBitcast %uint %2196
       %2198 = OpExtInst %uint %152 UMin %2197 %uint_255
       %2199 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2198
       %2200 = OpLoad %float %2199 None
       %2201 = OpCompositeExtract %uint %threadIdx 1
       %2202 = OpBitcast %int %2201
       %2203 = OpIMul %int %2202 %int_32
       %2204 = OpIAdd %int %2203 %int_13
       %2206 = OpBitcast %uint %2204
       %2207 = OpExtInst %uint %152 UMin %2206 %uint_255
       %2208 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2207
       %2209 = OpLoad %float %2208 None
       %2210 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %2211 = OpLoad %float %2210 None
       %2212 = OpExtInst %float %152 Fma %2200 %2209 %2211
               OpStore %2192 %2212 None
       %2213 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %2214 = OpCompositeExtract %uint %threadIdx 0
       %2215 = OpBitcast %int %2214
       %2216 = OpIMul %int %2215 %int_32
       %2217 = OpIAdd %int %2216 %int_5
       %2218 = OpBitcast %uint %2217
       %2219 = OpExtInst %uint %152 UMin %2218 %uint_255
       %2220 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2219
       %2221 = OpLoad %float %2220 None
       %2222 = OpCompositeExtract %uint %threadIdx 1
       %2223 = OpBitcast %int %2222
       %2224 = OpIMul %int %2223 %int_32
       %2225 = OpIAdd %int %2224 %int_21
       %2227 = OpBitcast %uint %2225
       %2228 = OpExtInst %uint %152 UMin %2227 %uint_255
       %2229 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2228
       %2230 = OpLoad %float %2229 None
       %2231 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %2232 = OpLoad %float %2231 None
       %2233 = OpExtInst %float %152 Fma %2221 %2230 %2232
               OpStore %2213 %2233 None
       %2234 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %2235 = OpCompositeExtract %uint %threadIdx 0
       %2236 = OpBitcast %int %2235
       %2237 = OpIMul %int %2236 %int_32
       %2238 = OpIAdd %int %2237 %int_5
       %2239 = OpBitcast %uint %2238
       %2240 = OpExtInst %uint %152 UMin %2239 %uint_255
       %2241 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2240
       %2242 = OpLoad %float %2241 None
       %2243 = OpCompositeExtract %uint %threadIdx 1
       %2244 = OpBitcast %int %2243
       %2245 = OpIMul %int %2244 %int_32
       %2246 = OpIAdd %int %2245 %int_29
       %2248 = OpBitcast %uint %2246
       %2249 = OpExtInst %uint %152 UMin %2248 %uint_255
       %2250 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2249
       %2251 = OpLoad %float %2250 None
       %2252 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %2253 = OpLoad %float %2252 None
       %2254 = OpExtInst %float %152 Fma %2242 %2251 %2253
               OpStore %2234 %2254 None
       %2255 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %2256 = OpCompositeExtract %uint %threadIdx 0
       %2257 = OpBitcast %int %2256
       %2258 = OpIMul %int %2257 %int_32
       %2259 = OpIAdd %int %2258 %int_13
       %2260 = OpBitcast %uint %2259
       %2261 = OpExtInst %uint %152 UMin %2260 %uint_255
       %2262 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2261
       %2263 = OpLoad %float %2262 None
       %2264 = OpCompositeExtract %uint %threadIdx 1
       %2265 = OpBitcast %int %2264
       %2266 = OpIMul %int %2265 %int_32
       %2267 = OpIAdd %int %2266 %int_5
       %2268 = OpBitcast %uint %2267
       %2269 = OpExtInst %uint %152 UMin %2268 %uint_255
       %2270 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2269
       %2271 = OpLoad %float %2270 None
       %2272 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %2273 = OpLoad %float %2272 None
       %2274 = OpExtInst %float %152 Fma %2263 %2271 %2273
               OpStore %2255 %2274 None
       %2275 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %2276 = OpCompositeExtract %uint %threadIdx 0
       %2277 = OpBitcast %int %2276
       %2278 = OpIMul %int %2277 %int_32
       %2279 = OpIAdd %int %2278 %int_13
       %2280 = OpBitcast %uint %2279
       %2281 = OpExtInst %uint %152 UMin %2280 %uint_255
       %2282 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2281
       %2283 = OpLoad %float %2282 None
       %2284 = OpCompositeExtract %uint %threadIdx 1
       %2285 = OpBitcast %int %2284
       %2286 = OpIMul %int %2285 %int_32
       %2287 = OpIAdd %int %2286 %int_13
       %2288 = OpBitcast %uint %2287
       %2289 = OpExtInst %uint %152 UMin %2288 %uint_255
       %2290 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2289
       %2291 = OpLoad %float %2290 None
       %2292 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %2293 = OpLoad %float %2292 None
       %2294 = OpExtInst %float %152 Fma %2283 %2291 %2293
               OpStore %2275 %2294 None
       %2295 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %2296 = OpCompositeExtract %uint %threadIdx 0
       %2297 = OpBitcast %int %2296
       %2298 = OpIMul %int %2297 %int_32
       %2299 = OpIAdd %int %2298 %int_13
       %2300 = OpBitcast %uint %2299
       %2301 = OpExtInst %uint %152 UMin %2300 %uint_255
       %2302 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2301
       %2303 = OpLoad %float %2302 None
       %2304 = OpCompositeExtract %uint %threadIdx 1
       %2305 = OpBitcast %int %2304
       %2306 = OpIMul %int %2305 %int_32
       %2307 = OpIAdd %int %2306 %int_21
       %2308 = OpBitcast %uint %2307
       %2309 = OpExtInst %uint %152 UMin %2308 %uint_255
       %2310 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2309
       %2311 = OpLoad %float %2310 None
       %2312 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %2313 = OpLoad %float %2312 None
       %2314 = OpExtInst %float %152 Fma %2303 %2311 %2313
               OpStore %2295 %2314 None
       %2315 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %2316 = OpCompositeExtract %uint %threadIdx 0
       %2317 = OpBitcast %int %2316
       %2318 = OpIMul %int %2317 %int_32
       %2319 = OpIAdd %int %2318 %int_13
       %2320 = OpBitcast %uint %2319
       %2321 = OpExtInst %uint %152 UMin %2320 %uint_255
       %2322 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2321
       %2323 = OpLoad %float %2322 None
       %2324 = OpCompositeExtract %uint %threadIdx 1
       %2325 = OpBitcast %int %2324
       %2326 = OpIMul %int %2325 %int_32
       %2327 = OpIAdd %int %2326 %int_29
       %2328 = OpBitcast %uint %2327
       %2329 = OpExtInst %uint %152 UMin %2328 %uint_255
       %2330 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2329
       %2331 = OpLoad %float %2330 None
       %2332 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %2333 = OpLoad %float %2332 None
       %2334 = OpExtInst %float %152 Fma %2323 %2331 %2333
               OpStore %2315 %2334 None
       %2335 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %2336 = OpCompositeExtract %uint %threadIdx 0
       %2337 = OpBitcast %int %2336
       %2338 = OpIMul %int %2337 %int_32
       %2339 = OpIAdd %int %2338 %int_21
       %2340 = OpBitcast %uint %2339
       %2341 = OpExtInst %uint %152 UMin %2340 %uint_255
       %2342 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2341
       %2343 = OpLoad %float %2342 None
       %2344 = OpCompositeExtract %uint %threadIdx 1
       %2345 = OpBitcast %int %2344
       %2346 = OpIMul %int %2345 %int_32
       %2347 = OpIAdd %int %2346 %int_5
       %2348 = OpBitcast %uint %2347
       %2349 = OpExtInst %uint %152 UMin %2348 %uint_255
       %2350 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2349
       %2351 = OpLoad %float %2350 None
       %2352 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %2353 = OpLoad %float %2352 None
       %2354 = OpExtInst %float %152 Fma %2343 %2351 %2353
               OpStore %2335 %2354 None
       %2355 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %2356 = OpCompositeExtract %uint %threadIdx 0
       %2357 = OpBitcast %int %2356
       %2358 = OpIMul %int %2357 %int_32
       %2359 = OpIAdd %int %2358 %int_21
       %2360 = OpBitcast %uint %2359
       %2361 = OpExtInst %uint %152 UMin %2360 %uint_255
       %2362 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2361
       %2363 = OpLoad %float %2362 None
       %2364 = OpCompositeExtract %uint %threadIdx 1
       %2365 = OpBitcast %int %2364
       %2366 = OpIMul %int %2365 %int_32
       %2367 = OpIAdd %int %2366 %int_13
       %2368 = OpBitcast %uint %2367
       %2369 = OpExtInst %uint %152 UMin %2368 %uint_255
       %2370 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2369
       %2371 = OpLoad %float %2370 None
       %2372 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %2373 = OpLoad %float %2372 None
       %2374 = OpExtInst %float %152 Fma %2363 %2371 %2373
               OpStore %2355 %2374 None
       %2375 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %2376 = OpCompositeExtract %uint %threadIdx 0
       %2377 = OpBitcast %int %2376
       %2378 = OpIMul %int %2377 %int_32
       %2379 = OpIAdd %int %2378 %int_21
       %2380 = OpBitcast %uint %2379
       %2381 = OpExtInst %uint %152 UMin %2380 %uint_255
       %2382 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2381
       %2383 = OpLoad %float %2382 None
       %2384 = OpCompositeExtract %uint %threadIdx 1
       %2385 = OpBitcast %int %2384
       %2386 = OpIMul %int %2385 %int_32
       %2387 = OpIAdd %int %2386 %int_21
       %2388 = OpBitcast %uint %2387
       %2389 = OpExtInst %uint %152 UMin %2388 %uint_255
       %2390 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2389
       %2391 = OpLoad %float %2390 None
       %2392 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %2393 = OpLoad %float %2392 None
       %2394 = OpExtInst %float %152 Fma %2383 %2391 %2393
               OpStore %2375 %2394 None
       %2395 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %2396 = OpCompositeExtract %uint %threadIdx 0
       %2397 = OpBitcast %int %2396
       %2398 = OpIMul %int %2397 %int_32
       %2399 = OpIAdd %int %2398 %int_21
       %2400 = OpBitcast %uint %2399
       %2401 = OpExtInst %uint %152 UMin %2400 %uint_255
       %2402 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2401
       %2403 = OpLoad %float %2402 None
       %2404 = OpCompositeExtract %uint %threadIdx 1
       %2405 = OpBitcast %int %2404
       %2406 = OpIMul %int %2405 %int_32
       %2407 = OpIAdd %int %2406 %int_29
       %2408 = OpBitcast %uint %2407
       %2409 = OpExtInst %uint %152 UMin %2408 %uint_255
       %2410 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2409
       %2411 = OpLoad %float %2410 None
       %2412 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %2413 = OpLoad %float %2412 None
       %2414 = OpExtInst %float %152 Fma %2403 %2411 %2413
               OpStore %2395 %2414 None
       %2415 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %2416 = OpCompositeExtract %uint %threadIdx 0
       %2417 = OpBitcast %int %2416
       %2418 = OpIMul %int %2417 %int_32
       %2419 = OpIAdd %int %2418 %int_29
       %2420 = OpBitcast %uint %2419
       %2421 = OpExtInst %uint %152 UMin %2420 %uint_255
       %2422 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2421
       %2423 = OpLoad %float %2422 None
       %2424 = OpCompositeExtract %uint %threadIdx 1
       %2425 = OpBitcast %int %2424
       %2426 = OpIMul %int %2425 %int_32
       %2427 = OpIAdd %int %2426 %int_5
       %2428 = OpBitcast %uint %2427
       %2429 = OpExtInst %uint %152 UMin %2428 %uint_255
       %2430 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2429
       %2431 = OpLoad %float %2430 None
       %2432 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %2433 = OpLoad %float %2432 None
       %2434 = OpExtInst %float %152 Fma %2423 %2431 %2433
               OpStore %2415 %2434 None
       %2435 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %2436 = OpCompositeExtract %uint %threadIdx 0
       %2437 = OpBitcast %int %2436
       %2438 = OpIMul %int %2437 %int_32
       %2439 = OpIAdd %int %2438 %int_29
       %2440 = OpBitcast %uint %2439
       %2441 = OpExtInst %uint %152 UMin %2440 %uint_255
       %2442 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2441
       %2443 = OpLoad %float %2442 None
       %2444 = OpCompositeExtract %uint %threadIdx 1
       %2445 = OpBitcast %int %2444
       %2446 = OpIMul %int %2445 %int_32
       %2447 = OpIAdd %int %2446 %int_13
       %2448 = OpBitcast %uint %2447
       %2449 = OpExtInst %uint %152 UMin %2448 %uint_255
       %2450 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2449
       %2451 = OpLoad %float %2450 None
       %2452 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %2453 = OpLoad %float %2452 None
       %2454 = OpExtInst %float %152 Fma %2443 %2451 %2453
               OpStore %2435 %2454 None
       %2455 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %2456 = OpCompositeExtract %uint %threadIdx 0
       %2457 = OpBitcast %int %2456
       %2458 = OpIMul %int %2457 %int_32
       %2459 = OpIAdd %int %2458 %int_29
       %2460 = OpBitcast %uint %2459
       %2461 = OpExtInst %uint %152 UMin %2460 %uint_255
       %2462 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2461
       %2463 = OpLoad %float %2462 None
       %2464 = OpCompositeExtract %uint %threadIdx 1
       %2465 = OpBitcast %int %2464
       %2466 = OpIMul %int %2465 %int_32
       %2467 = OpIAdd %int %2466 %int_21
       %2468 = OpBitcast %uint %2467
       %2469 = OpExtInst %uint %152 UMin %2468 %uint_255
       %2470 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2469
       %2471 = OpLoad %float %2470 None
       %2472 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %2473 = OpLoad %float %2472 None
       %2474 = OpExtInst %float %152 Fma %2463 %2471 %2473
               OpStore %2455 %2474 None
       %2475 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %2476 = OpCompositeExtract %uint %threadIdx 0
       %2477 = OpBitcast %int %2476
       %2478 = OpIMul %int %2477 %int_32
       %2479 = OpIAdd %int %2478 %int_29
       %2480 = OpBitcast %uint %2479
       %2481 = OpExtInst %uint %152 UMin %2480 %uint_255
       %2482 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2481
       %2483 = OpLoad %float %2482 None
       %2484 = OpCompositeExtract %uint %threadIdx 1
       %2485 = OpBitcast %int %2484
       %2486 = OpIMul %int %2485 %int_32
       %2487 = OpIAdd %int %2486 %int_29
       %2488 = OpBitcast %uint %2487
       %2489 = OpExtInst %uint %152 UMin %2488 %uint_255
       %2490 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2489
       %2491 = OpLoad %float %2490 None
       %2492 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %2493 = OpLoad %float %2492 None
       %2494 = OpExtInst %float %152 Fma %2483 %2491 %2493
               OpStore %2475 %2494 None
       %2495 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %2496 = OpCompositeExtract %uint %threadIdx 0
       %2497 = OpBitcast %int %2496
       %2498 = OpIMul %int %2497 %int_32
       %2499 = OpIAdd %int %2498 %int_6
       %2501 = OpBitcast %uint %2499
       %2502 = OpExtInst %uint %152 UMin %2501 %uint_255
       %2503 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2502
       %2504 = OpLoad %float %2503 None
       %2505 = OpCompositeExtract %uint %threadIdx 1
       %2506 = OpBitcast %int %2505
       %2507 = OpIMul %int %2506 %int_32
       %2508 = OpIAdd %int %2507 %int_6
       %2509 = OpBitcast %uint %2508
       %2510 = OpExtInst %uint %152 UMin %2509 %uint_255
       %2511 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2510
       %2512 = OpLoad %float %2511 None
       %2513 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %2514 = OpLoad %float %2513 None
       %2515 = OpExtInst %float %152 Fma %2504 %2512 %2514
               OpStore %2495 %2515 None
       %2516 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %2517 = OpCompositeExtract %uint %threadIdx 0
       %2518 = OpBitcast %int %2517
       %2519 = OpIMul %int %2518 %int_32
       %2520 = OpIAdd %int %2519 %int_6
       %2521 = OpBitcast %uint %2520
       %2522 = OpExtInst %uint %152 UMin %2521 %uint_255
       %2523 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2522
       %2524 = OpLoad %float %2523 None
       %2525 = OpCompositeExtract %uint %threadIdx 1
       %2526 = OpBitcast %int %2525
       %2527 = OpIMul %int %2526 %int_32
       %2528 = OpIAdd %int %2527 %int_14
       %2530 = OpBitcast %uint %2528
       %2531 = OpExtInst %uint %152 UMin %2530 %uint_255
       %2532 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2531
       %2533 = OpLoad %float %2532 None
       %2534 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %2535 = OpLoad %float %2534 None
       %2536 = OpExtInst %float %152 Fma %2524 %2533 %2535
               OpStore %2516 %2536 None
       %2537 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %2538 = OpCompositeExtract %uint %threadIdx 0
       %2539 = OpBitcast %int %2538
       %2540 = OpIMul %int %2539 %int_32
       %2541 = OpIAdd %int %2540 %int_6
       %2542 = OpBitcast %uint %2541
       %2543 = OpExtInst %uint %152 UMin %2542 %uint_255
       %2544 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2543
       %2545 = OpLoad %float %2544 None
       %2546 = OpCompositeExtract %uint %threadIdx 1
       %2547 = OpBitcast %int %2546
       %2548 = OpIMul %int %2547 %int_32
       %2549 = OpIAdd %int %2548 %int_22
       %2551 = OpBitcast %uint %2549
       %2552 = OpExtInst %uint %152 UMin %2551 %uint_255
       %2553 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2552
       %2554 = OpLoad %float %2553 None
       %2555 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %2556 = OpLoad %float %2555 None
       %2557 = OpExtInst %float %152 Fma %2545 %2554 %2556
               OpStore %2537 %2557 None
       %2558 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %2559 = OpCompositeExtract %uint %threadIdx 0
       %2560 = OpBitcast %int %2559
       %2561 = OpIMul %int %2560 %int_32
       %2562 = OpIAdd %int %2561 %int_6
       %2563 = OpBitcast %uint %2562
       %2564 = OpExtInst %uint %152 UMin %2563 %uint_255
       %2565 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2564
       %2566 = OpLoad %float %2565 None
       %2567 = OpCompositeExtract %uint %threadIdx 1
       %2568 = OpBitcast %int %2567
       %2569 = OpIMul %int %2568 %int_32
       %2570 = OpIAdd %int %2569 %int_30
       %2572 = OpBitcast %uint %2570
       %2573 = OpExtInst %uint %152 UMin %2572 %uint_255
       %2574 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2573
       %2575 = OpLoad %float %2574 None
       %2576 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %2577 = OpLoad %float %2576 None
       %2578 = OpExtInst %float %152 Fma %2566 %2575 %2577
               OpStore %2558 %2578 None
       %2579 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %2580 = OpCompositeExtract %uint %threadIdx 0
       %2581 = OpBitcast %int %2580
       %2582 = OpIMul %int %2581 %int_32
       %2583 = OpIAdd %int %2582 %int_14
       %2584 = OpBitcast %uint %2583
       %2585 = OpExtInst %uint %152 UMin %2584 %uint_255
       %2586 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2585
       %2587 = OpLoad %float %2586 None
       %2588 = OpCompositeExtract %uint %threadIdx 1
       %2589 = OpBitcast %int %2588
       %2590 = OpIMul %int %2589 %int_32
       %2591 = OpIAdd %int %2590 %int_6
       %2592 = OpBitcast %uint %2591
       %2593 = OpExtInst %uint %152 UMin %2592 %uint_255
       %2594 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2593
       %2595 = OpLoad %float %2594 None
       %2596 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %2597 = OpLoad %float %2596 None
       %2598 = OpExtInst %float %152 Fma %2587 %2595 %2597
               OpStore %2579 %2598 None
       %2599 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %2600 = OpCompositeExtract %uint %threadIdx 0
       %2601 = OpBitcast %int %2600
       %2602 = OpIMul %int %2601 %int_32
       %2603 = OpIAdd %int %2602 %int_14
       %2604 = OpBitcast %uint %2603
       %2605 = OpExtInst %uint %152 UMin %2604 %uint_255
       %2606 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2605
       %2607 = OpLoad %float %2606 None
       %2608 = OpCompositeExtract %uint %threadIdx 1
       %2609 = OpBitcast %int %2608
       %2610 = OpIMul %int %2609 %int_32
       %2611 = OpIAdd %int %2610 %int_14
       %2612 = OpBitcast %uint %2611
       %2613 = OpExtInst %uint %152 UMin %2612 %uint_255
       %2614 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2613
       %2615 = OpLoad %float %2614 None
       %2616 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %2617 = OpLoad %float %2616 None
       %2618 = OpExtInst %float %152 Fma %2607 %2615 %2617
               OpStore %2599 %2618 None
       %2619 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %2620 = OpCompositeExtract %uint %threadIdx 0
       %2621 = OpBitcast %int %2620
       %2622 = OpIMul %int %2621 %int_32
       %2623 = OpIAdd %int %2622 %int_14
       %2624 = OpBitcast %uint %2623
       %2625 = OpExtInst %uint %152 UMin %2624 %uint_255
       %2626 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2625
       %2627 = OpLoad %float %2626 None
       %2628 = OpCompositeExtract %uint %threadIdx 1
       %2629 = OpBitcast %int %2628
       %2630 = OpIMul %int %2629 %int_32
       %2631 = OpIAdd %int %2630 %int_22
       %2632 = OpBitcast %uint %2631
       %2633 = OpExtInst %uint %152 UMin %2632 %uint_255
       %2634 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2633
       %2635 = OpLoad %float %2634 None
       %2636 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %2637 = OpLoad %float %2636 None
       %2638 = OpExtInst %float %152 Fma %2627 %2635 %2637
               OpStore %2619 %2638 None
       %2639 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %2640 = OpCompositeExtract %uint %threadIdx 0
       %2641 = OpBitcast %int %2640
       %2642 = OpIMul %int %2641 %int_32
       %2643 = OpIAdd %int %2642 %int_14
       %2644 = OpBitcast %uint %2643
       %2645 = OpExtInst %uint %152 UMin %2644 %uint_255
       %2646 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2645
       %2647 = OpLoad %float %2646 None
       %2648 = OpCompositeExtract %uint %threadIdx 1
       %2649 = OpBitcast %int %2648
       %2650 = OpIMul %int %2649 %int_32
       %2651 = OpIAdd %int %2650 %int_30
       %2652 = OpBitcast %uint %2651
       %2653 = OpExtInst %uint %152 UMin %2652 %uint_255
       %2654 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2653
       %2655 = OpLoad %float %2654 None
       %2656 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %2657 = OpLoad %float %2656 None
       %2658 = OpExtInst %float %152 Fma %2647 %2655 %2657
               OpStore %2639 %2658 None
       %2659 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %2660 = OpCompositeExtract %uint %threadIdx 0
       %2661 = OpBitcast %int %2660
       %2662 = OpIMul %int %2661 %int_32
       %2663 = OpIAdd %int %2662 %int_22
       %2664 = OpBitcast %uint %2663
       %2665 = OpExtInst %uint %152 UMin %2664 %uint_255
       %2666 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2665
       %2667 = OpLoad %float %2666 None
       %2668 = OpCompositeExtract %uint %threadIdx 1
       %2669 = OpBitcast %int %2668
       %2670 = OpIMul %int %2669 %int_32
       %2671 = OpIAdd %int %2670 %int_6
       %2672 = OpBitcast %uint %2671
       %2673 = OpExtInst %uint %152 UMin %2672 %uint_255
       %2674 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2673
       %2675 = OpLoad %float %2674 None
       %2676 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %2677 = OpLoad %float %2676 None
       %2678 = OpExtInst %float %152 Fma %2667 %2675 %2677
               OpStore %2659 %2678 None
       %2679 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %2680 = OpCompositeExtract %uint %threadIdx 0
       %2681 = OpBitcast %int %2680
       %2682 = OpIMul %int %2681 %int_32
       %2683 = OpIAdd %int %2682 %int_22
       %2684 = OpBitcast %uint %2683
       %2685 = OpExtInst %uint %152 UMin %2684 %uint_255
       %2686 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2685
       %2687 = OpLoad %float %2686 None
       %2688 = OpCompositeExtract %uint %threadIdx 1
       %2689 = OpBitcast %int %2688
       %2690 = OpIMul %int %2689 %int_32
       %2691 = OpIAdd %int %2690 %int_14
       %2692 = OpBitcast %uint %2691
       %2693 = OpExtInst %uint %152 UMin %2692 %uint_255
       %2694 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2693
       %2695 = OpLoad %float %2694 None
       %2696 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %2697 = OpLoad %float %2696 None
       %2698 = OpExtInst %float %152 Fma %2687 %2695 %2697
               OpStore %2679 %2698 None
       %2699 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %2700 = OpCompositeExtract %uint %threadIdx 0
       %2701 = OpBitcast %int %2700
       %2702 = OpIMul %int %2701 %int_32
       %2703 = OpIAdd %int %2702 %int_22
       %2704 = OpBitcast %uint %2703
       %2705 = OpExtInst %uint %152 UMin %2704 %uint_255
       %2706 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2705
       %2707 = OpLoad %float %2706 None
       %2708 = OpCompositeExtract %uint %threadIdx 1
       %2709 = OpBitcast %int %2708
       %2710 = OpIMul %int %2709 %int_32
       %2711 = OpIAdd %int %2710 %int_22
       %2712 = OpBitcast %uint %2711
       %2713 = OpExtInst %uint %152 UMin %2712 %uint_255
       %2714 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2713
       %2715 = OpLoad %float %2714 None
       %2716 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %2717 = OpLoad %float %2716 None
       %2718 = OpExtInst %float %152 Fma %2707 %2715 %2717
               OpStore %2699 %2718 None
       %2719 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %2720 = OpCompositeExtract %uint %threadIdx 0
       %2721 = OpBitcast %int %2720
       %2722 = OpIMul %int %2721 %int_32
       %2723 = OpIAdd %int %2722 %int_22
       %2724 = OpBitcast %uint %2723
       %2725 = OpExtInst %uint %152 UMin %2724 %uint_255
       %2726 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2725
       %2727 = OpLoad %float %2726 None
       %2728 = OpCompositeExtract %uint %threadIdx 1
       %2729 = OpBitcast %int %2728
       %2730 = OpIMul %int %2729 %int_32
       %2731 = OpIAdd %int %2730 %int_30
       %2732 = OpBitcast %uint %2731
       %2733 = OpExtInst %uint %152 UMin %2732 %uint_255
       %2734 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2733
       %2735 = OpLoad %float %2734 None
       %2736 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %2737 = OpLoad %float %2736 None
       %2738 = OpExtInst %float %152 Fma %2727 %2735 %2737
               OpStore %2719 %2738 None
       %2739 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %2740 = OpCompositeExtract %uint %threadIdx 0
       %2741 = OpBitcast %int %2740
       %2742 = OpIMul %int %2741 %int_32
       %2743 = OpIAdd %int %2742 %int_30
       %2744 = OpBitcast %uint %2743
       %2745 = OpExtInst %uint %152 UMin %2744 %uint_255
       %2746 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2745
       %2747 = OpLoad %float %2746 None
       %2748 = OpCompositeExtract %uint %threadIdx 1
       %2749 = OpBitcast %int %2748
       %2750 = OpIMul %int %2749 %int_32
       %2751 = OpIAdd %int %2750 %int_6
       %2752 = OpBitcast %uint %2751
       %2753 = OpExtInst %uint %152 UMin %2752 %uint_255
       %2754 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2753
       %2755 = OpLoad %float %2754 None
       %2756 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %2757 = OpLoad %float %2756 None
       %2758 = OpExtInst %float %152 Fma %2747 %2755 %2757
               OpStore %2739 %2758 None
       %2759 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %2760 = OpCompositeExtract %uint %threadIdx 0
       %2761 = OpBitcast %int %2760
       %2762 = OpIMul %int %2761 %int_32
       %2763 = OpIAdd %int %2762 %int_30
       %2764 = OpBitcast %uint %2763
       %2765 = OpExtInst %uint %152 UMin %2764 %uint_255
       %2766 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2765
       %2767 = OpLoad %float %2766 None
       %2768 = OpCompositeExtract %uint %threadIdx 1
       %2769 = OpBitcast %int %2768
       %2770 = OpIMul %int %2769 %int_32
       %2771 = OpIAdd %int %2770 %int_14
       %2772 = OpBitcast %uint %2771
       %2773 = OpExtInst %uint %152 UMin %2772 %uint_255
       %2774 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2773
       %2775 = OpLoad %float %2774 None
       %2776 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %2777 = OpLoad %float %2776 None
       %2778 = OpExtInst %float %152 Fma %2767 %2775 %2777
               OpStore %2759 %2778 None
       %2779 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %2780 = OpCompositeExtract %uint %threadIdx 0
       %2781 = OpBitcast %int %2780
       %2782 = OpIMul %int %2781 %int_32
       %2783 = OpIAdd %int %2782 %int_30
       %2784 = OpBitcast %uint %2783
       %2785 = OpExtInst %uint %152 UMin %2784 %uint_255
       %2786 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2785
       %2787 = OpLoad %float %2786 None
       %2788 = OpCompositeExtract %uint %threadIdx 1
       %2789 = OpBitcast %int %2788
       %2790 = OpIMul %int %2789 %int_32
       %2791 = OpIAdd %int %2790 %int_22
       %2792 = OpBitcast %uint %2791
       %2793 = OpExtInst %uint %152 UMin %2792 %uint_255
       %2794 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2793
       %2795 = OpLoad %float %2794 None
       %2796 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %2797 = OpLoad %float %2796 None
       %2798 = OpExtInst %float %152 Fma %2787 %2795 %2797
               OpStore %2779 %2798 None
       %2799 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %2800 = OpCompositeExtract %uint %threadIdx 0
       %2801 = OpBitcast %int %2800
       %2802 = OpIMul %int %2801 %int_32
       %2803 = OpIAdd %int %2802 %int_30
       %2804 = OpBitcast %uint %2803
       %2805 = OpExtInst %uint %152 UMin %2804 %uint_255
       %2806 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2805
       %2807 = OpLoad %float %2806 None
       %2808 = OpCompositeExtract %uint %threadIdx 1
       %2809 = OpBitcast %int %2808
       %2810 = OpIMul %int %2809 %int_32
       %2811 = OpIAdd %int %2810 %int_30
       %2812 = OpBitcast %uint %2811
       %2813 = OpExtInst %uint %152 UMin %2812 %uint_255
       %2814 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2813
       %2815 = OpLoad %float %2814 None
       %2816 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %2817 = OpLoad %float %2816 None
       %2818 = OpExtInst %float %152 Fma %2807 %2815 %2817
               OpStore %2799 %2818 None
       %2819 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %2820 = OpCompositeExtract %uint %threadIdx 0
       %2821 = OpBitcast %int %2820
       %2822 = OpIMul %int %2821 %int_32
       %2823 = OpIAdd %int %2822 %int_7
       %2825 = OpBitcast %uint %2823
       %2826 = OpExtInst %uint %152 UMin %2825 %uint_255
       %2827 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2826
       %2828 = OpLoad %float %2827 None
       %2829 = OpCompositeExtract %uint %threadIdx 1
       %2830 = OpBitcast %int %2829
       %2831 = OpIMul %int %2830 %int_32
       %2832 = OpIAdd %int %2831 %int_7
       %2833 = OpBitcast %uint %2832
       %2834 = OpExtInst %uint %152 UMin %2833 %uint_255
       %2835 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2834
       %2836 = OpLoad %float %2835 None
       %2837 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %2838 = OpLoad %float %2837 None
       %2839 = OpExtInst %float %152 Fma %2828 %2836 %2838
               OpStore %2819 %2839 None
       %2840 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %2841 = OpCompositeExtract %uint %threadIdx 0
       %2842 = OpBitcast %int %2841
       %2843 = OpIMul %int %2842 %int_32
       %2844 = OpIAdd %int %2843 %int_7
       %2845 = OpBitcast %uint %2844
       %2846 = OpExtInst %uint %152 UMin %2845 %uint_255
       %2847 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2846
       %2848 = OpLoad %float %2847 None
       %2849 = OpCompositeExtract %uint %threadIdx 1
       %2850 = OpBitcast %int %2849
       %2851 = OpIMul %int %2850 %int_32
       %2852 = OpIAdd %int %2851 %int_15
       %2854 = OpBitcast %uint %2852
       %2855 = OpExtInst %uint %152 UMin %2854 %uint_255
       %2856 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2855
       %2857 = OpLoad %float %2856 None
       %2858 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %2859 = OpLoad %float %2858 None
       %2860 = OpExtInst %float %152 Fma %2848 %2857 %2859
               OpStore %2840 %2860 None
       %2861 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %2862 = OpCompositeExtract %uint %threadIdx 0
       %2863 = OpBitcast %int %2862
       %2864 = OpIMul %int %2863 %int_32
       %2865 = OpIAdd %int %2864 %int_7
       %2866 = OpBitcast %uint %2865
       %2867 = OpExtInst %uint %152 UMin %2866 %uint_255
       %2868 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2867
       %2869 = OpLoad %float %2868 None
       %2870 = OpCompositeExtract %uint %threadIdx 1
       %2871 = OpBitcast %int %2870
       %2872 = OpIMul %int %2871 %int_32
       %2873 = OpIAdd %int %2872 %int_23
       %2875 = OpBitcast %uint %2873
       %2876 = OpExtInst %uint %152 UMin %2875 %uint_255
       %2877 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2876
       %2878 = OpLoad %float %2877 None
       %2879 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %2880 = OpLoad %float %2879 None
       %2881 = OpExtInst %float %152 Fma %2869 %2878 %2880
               OpStore %2861 %2881 None
       %2882 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %2883 = OpCompositeExtract %uint %threadIdx 0
       %2884 = OpBitcast %int %2883
       %2885 = OpIMul %int %2884 %int_32
       %2886 = OpIAdd %int %2885 %int_7
       %2887 = OpBitcast %uint %2886
       %2888 = OpExtInst %uint %152 UMin %2887 %uint_255
       %2889 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2888
       %2890 = OpLoad %float %2889 None
       %2891 = OpCompositeExtract %uint %threadIdx 1
       %2892 = OpBitcast %int %2891
       %2893 = OpIMul %int %2892 %int_32
       %2894 = OpIAdd %int %2893 %int_31
       %2896 = OpBitcast %uint %2894
       %2897 = OpExtInst %uint %152 UMin %2896 %uint_255
       %2898 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2897
       %2899 = OpLoad %float %2898 None
       %2900 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %2901 = OpLoad %float %2900 None
       %2902 = OpExtInst %float %152 Fma %2890 %2899 %2901
               OpStore %2882 %2902 None
       %2903 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %2904 = OpCompositeExtract %uint %threadIdx 0
       %2905 = OpBitcast %int %2904
       %2906 = OpIMul %int %2905 %int_32
       %2907 = OpIAdd %int %2906 %int_15
       %2908 = OpBitcast %uint %2907
       %2909 = OpExtInst %uint %152 UMin %2908 %uint_255
       %2910 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2909
       %2911 = OpLoad %float %2910 None
       %2912 = OpCompositeExtract %uint %threadIdx 1
       %2913 = OpBitcast %int %2912
       %2914 = OpIMul %int %2913 %int_32
       %2915 = OpIAdd %int %2914 %int_7
       %2916 = OpBitcast %uint %2915
       %2917 = OpExtInst %uint %152 UMin %2916 %uint_255
       %2918 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2917
       %2919 = OpLoad %float %2918 None
       %2920 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %2921 = OpLoad %float %2920 None
       %2922 = OpExtInst %float %152 Fma %2911 %2919 %2921
               OpStore %2903 %2922 None
       %2923 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %2924 = OpCompositeExtract %uint %threadIdx 0
       %2925 = OpBitcast %int %2924
       %2926 = OpIMul %int %2925 %int_32
       %2927 = OpIAdd %int %2926 %int_15
       %2928 = OpBitcast %uint %2927
       %2929 = OpExtInst %uint %152 UMin %2928 %uint_255
       %2930 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2929
       %2931 = OpLoad %float %2930 None
       %2932 = OpCompositeExtract %uint %threadIdx 1
       %2933 = OpBitcast %int %2932
       %2934 = OpIMul %int %2933 %int_32
       %2935 = OpIAdd %int %2934 %int_15
       %2936 = OpBitcast %uint %2935
       %2937 = OpExtInst %uint %152 UMin %2936 %uint_255
       %2938 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2937
       %2939 = OpLoad %float %2938 None
       %2940 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %2941 = OpLoad %float %2940 None
       %2942 = OpExtInst %float %152 Fma %2931 %2939 %2941
               OpStore %2923 %2942 None
       %2943 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %2944 = OpCompositeExtract %uint %threadIdx 0
       %2945 = OpBitcast %int %2944
       %2946 = OpIMul %int %2945 %int_32
       %2947 = OpIAdd %int %2946 %int_15
       %2948 = OpBitcast %uint %2947
       %2949 = OpExtInst %uint %152 UMin %2948 %uint_255
       %2950 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2949
       %2951 = OpLoad %float %2950 None
       %2952 = OpCompositeExtract %uint %threadIdx 1
       %2953 = OpBitcast %int %2952
       %2954 = OpIMul %int %2953 %int_32
       %2955 = OpIAdd %int %2954 %int_23
       %2956 = OpBitcast %uint %2955
       %2957 = OpExtInst %uint %152 UMin %2956 %uint_255
       %2958 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2957
       %2959 = OpLoad %float %2958 None
       %2960 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %2961 = OpLoad %float %2960 None
       %2962 = OpExtInst %float %152 Fma %2951 %2959 %2961
               OpStore %2943 %2962 None
       %2963 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %2964 = OpCompositeExtract %uint %threadIdx 0
       %2965 = OpBitcast %int %2964
       %2966 = OpIMul %int %2965 %int_32
       %2967 = OpIAdd %int %2966 %int_15
       %2968 = OpBitcast %uint %2967
       %2969 = OpExtInst %uint %152 UMin %2968 %uint_255
       %2970 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2969
       %2971 = OpLoad %float %2970 None
       %2972 = OpCompositeExtract %uint %threadIdx 1
       %2973 = OpBitcast %int %2972
       %2974 = OpIMul %int %2973 %int_32
       %2975 = OpIAdd %int %2974 %int_31
       %2976 = OpBitcast %uint %2975
       %2977 = OpExtInst %uint %152 UMin %2976 %uint_255
       %2978 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2977
       %2979 = OpLoad %float %2978 None
       %2980 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %2981 = OpLoad %float %2980 None
       %2982 = OpExtInst %float %152 Fma %2971 %2979 %2981
               OpStore %2963 %2982 None
       %2983 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %2984 = OpCompositeExtract %uint %threadIdx 0
       %2985 = OpBitcast %int %2984
       %2986 = OpIMul %int %2985 %int_32
       %2987 = OpIAdd %int %2986 %int_23
       %2988 = OpBitcast %uint %2987
       %2989 = OpExtInst %uint %152 UMin %2988 %uint_255
       %2990 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %2989
       %2991 = OpLoad %float %2990 None
       %2992 = OpCompositeExtract %uint %threadIdx 1
       %2993 = OpBitcast %int %2992
       %2994 = OpIMul %int %2993 %int_32
       %2995 = OpIAdd %int %2994 %int_7
       %2996 = OpBitcast %uint %2995
       %2997 = OpExtInst %uint %152 UMin %2996 %uint_255
       %2998 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %2997
       %2999 = OpLoad %float %2998 None
       %3000 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %3001 = OpLoad %float %3000 None
       %3002 = OpExtInst %float %152 Fma %2991 %2999 %3001
               OpStore %2983 %3002 None
       %3003 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %3004 = OpCompositeExtract %uint %threadIdx 0
       %3005 = OpBitcast %int %3004
       %3006 = OpIMul %int %3005 %int_32
       %3007 = OpIAdd %int %3006 %int_23
       %3008 = OpBitcast %uint %3007
       %3009 = OpExtInst %uint %152 UMin %3008 %uint_255
       %3010 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %3009
       %3011 = OpLoad %float %3010 None
       %3012 = OpCompositeExtract %uint %threadIdx 1
       %3013 = OpBitcast %int %3012
       %3014 = OpIMul %int %3013 %int_32
       %3015 = OpIAdd %int %3014 %int_15
       %3016 = OpBitcast %uint %3015
       %3017 = OpExtInst %uint %152 UMin %3016 %uint_255
       %3018 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %3017
       %3019 = OpLoad %float %3018 None
       %3020 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %3021 = OpLoad %float %3020 None
       %3022 = OpExtInst %float %152 Fma %3011 %3019 %3021
               OpStore %3003 %3022 None
       %3023 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %3024 = OpCompositeExtract %uint %threadIdx 0
       %3025 = OpBitcast %int %3024
       %3026 = OpIMul %int %3025 %int_32
       %3027 = OpIAdd %int %3026 %int_23
       %3028 = OpBitcast %uint %3027
       %3029 = OpExtInst %uint %152 UMin %3028 %uint_255
       %3030 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %3029
       %3031 = OpLoad %float %3030 None
       %3032 = OpCompositeExtract %uint %threadIdx 1
       %3033 = OpBitcast %int %3032
       %3034 = OpIMul %int %3033 %int_32
       %3035 = OpIAdd %int %3034 %int_23
       %3036 = OpBitcast %uint %3035
       %3037 = OpExtInst %uint %152 UMin %3036 %uint_255
       %3038 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %3037
       %3039 = OpLoad %float %3038 None
       %3040 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %3041 = OpLoad %float %3040 None
       %3042 = OpExtInst %float %152 Fma %3031 %3039 %3041
               OpStore %3023 %3042 None
       %3043 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %3044 = OpCompositeExtract %uint %threadIdx 0
       %3045 = OpBitcast %int %3044
       %3046 = OpIMul %int %3045 %int_32
       %3047 = OpIAdd %int %3046 %int_23
       %3048 = OpBitcast %uint %3047
       %3049 = OpExtInst %uint %152 UMin %3048 %uint_255
       %3050 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %3049
       %3051 = OpLoad %float %3050 None
       %3052 = OpCompositeExtract %uint %threadIdx 1
       %3053 = OpBitcast %int %3052
       %3054 = OpIMul %int %3053 %int_32
       %3055 = OpIAdd %int %3054 %int_31
       %3056 = OpBitcast %uint %3055
       %3057 = OpExtInst %uint %152 UMin %3056 %uint_255
       %3058 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %3057
       %3059 = OpLoad %float %3058 None
       %3060 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %3061 = OpLoad %float %3060 None
       %3062 = OpExtInst %float %152 Fma %3051 %3059 %3061
               OpStore %3043 %3062 None
       %3063 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %3064 = OpCompositeExtract %uint %threadIdx 0
       %3065 = OpBitcast %int %3064
       %3066 = OpIMul %int %3065 %int_32
       %3067 = OpIAdd %int %3066 %int_31
       %3068 = OpBitcast %uint %3067
       %3069 = OpExtInst %uint %152 UMin %3068 %uint_255
       %3070 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %3069
       %3071 = OpLoad %float %3070 None
       %3072 = OpCompositeExtract %uint %threadIdx 1
       %3073 = OpBitcast %int %3072
       %3074 = OpIMul %int %3073 %int_32
       %3075 = OpIAdd %int %3074 %int_7
       %3076 = OpBitcast %uint %3075
       %3077 = OpExtInst %uint %152 UMin %3076 %uint_255
       %3078 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %3077
       %3079 = OpLoad %float %3078 None
       %3080 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %3081 = OpLoad %float %3080 None
       %3082 = OpExtInst %float %152 Fma %3071 %3079 %3081
               OpStore %3063 %3082 None
       %3083 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %3084 = OpCompositeExtract %uint %threadIdx 0
       %3085 = OpBitcast %int %3084
       %3086 = OpIMul %int %3085 %int_32
       %3087 = OpIAdd %int %3086 %int_31
       %3088 = OpBitcast %uint %3087
       %3089 = OpExtInst %uint %152 UMin %3088 %uint_255
       %3090 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %3089
       %3091 = OpLoad %float %3090 None
       %3092 = OpCompositeExtract %uint %threadIdx 1
       %3093 = OpBitcast %int %3092
       %3094 = OpIMul %int %3093 %int_32
       %3095 = OpIAdd %int %3094 %int_15
       %3096 = OpBitcast %uint %3095
       %3097 = OpExtInst %uint %152 UMin %3096 %uint_255
       %3098 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %3097
       %3099 = OpLoad %float %3098 None
       %3100 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %3101 = OpLoad %float %3100 None
       %3102 = OpExtInst %float %152 Fma %3091 %3099 %3101
               OpStore %3083 %3102 None
       %3103 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %3104 = OpCompositeExtract %uint %threadIdx 0
       %3105 = OpBitcast %int %3104
       %3106 = OpIMul %int %3105 %int_32
       %3107 = OpIAdd %int %3106 %int_31
       %3108 = OpBitcast %uint %3107
       %3109 = OpExtInst %uint %152 UMin %3108 %uint_255
       %3110 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %3109
       %3111 = OpLoad %float %3110 None
       %3112 = OpCompositeExtract %uint %threadIdx 1
       %3113 = OpBitcast %int %3112
       %3114 = OpIMul %int %3113 %int_32
       %3115 = OpIAdd %int %3114 %int_23
       %3116 = OpBitcast %uint %3115
       %3117 = OpExtInst %uint %152 UMin %3116 %uint_255
       %3118 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %3117
       %3119 = OpLoad %float %3118 None
       %3120 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %3121 = OpLoad %float %3120 None
       %3122 = OpExtInst %float %152 Fma %3111 %3119 %3121
               OpStore %3103 %3122 None
       %3123 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %3124 = OpCompositeExtract %uint %threadIdx 0
       %3125 = OpBitcast %int %3124
       %3126 = OpIMul %int %3125 %int_32
       %3127 = OpIAdd %int %3126 %int_31
       %3128 = OpBitcast %uint %3127
       %3129 = OpExtInst %uint %152 UMin %3128 %uint_255
       %3130 = OpAccessChain %_ptr_Workgroup_float %rms_norm115_reindex_pad_shared %3129
       %3131 = OpLoad %float %3130 None
       %3132 = OpCompositeExtract %uint %threadIdx 1
       %3133 = OpBitcast %int %3132
       %3134 = OpIMul %int %3133 %int_32
       %3135 = OpIAdd %int %3134 %int_31
       %3136 = OpBitcast %uint %3135
       %3137 = OpExtInst %uint %152 UMin %3136 %uint_255
       %3138 = OpAccessChain %_ptr_Workgroup_float %dequantize_reindex_shared %3137
       %3139 = OpLoad %float %3138 None
       %3140 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %3141 = OpLoad %float %3140 None
       %3142 = OpExtInst %float %152 Fma %3131 %3139 %3141
               OpStore %3123 %3142 None
               OpBranch %112
        %112 = OpLabel
       %3143 = OpLoad %int %ax3_0 None
       %3144 = OpIAdd %int %3143 %int_1
               OpStore %ax3_0 %3144 None
               OpBranch %113
        %114 = OpLabel
       %3145 = OpIMul %int %v__1 %int_32
       %3146 = OpCompositeExtract %uint %threadIdx 0
       %3147 = OpBitcast %int %3146
       %3148 = OpIMul %int %3147 %int_4
       %3149 = OpIAdd %int %3145 %3148
       %3150 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3151 = OpLoad %int %3150 None
       %3152 = OpSLessThan %bool %3149 %3151
               OpSelectionMerge %3153 None
               OpBranchConditional %3152 %3154 %3153
       %3154 = OpLabel
       %3155 = OpIMul %int %v__1 %int_1212416
       %3157 = OpCompositeExtract %uint %threadIdx 0
       %3158 = OpBitcast %int %3157
       %3159 = OpIMul %int %3158 %int_151552
       %3161 = OpIAdd %int %3155 %3159
       %3162 = OpCompositeExtract %uint %blockIdx 1
       %3163 = OpBitcast %int %3162
       %3164 = OpIMul %int %3163 %int_32
       %3165 = OpIAdd %int %3161 %3164
       %3166 = OpCompositeExtract %uint %threadIdx 1
       %3167 = OpBitcast %int %3166
       %3168 = OpIMul %int %3167 %int_4
       %3169 = OpIAdd %int %3165 %3168
       %3170 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3169
       %3172 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_0
       %3173 = OpLoad %float %3172 None
               OpStore %3170 %3173 None
               OpBranch %3153
       %3153 = OpLabel
       %3174 = OpIMul %int %v__1 %int_32
       %3175 = OpCompositeExtract %uint %threadIdx 0
       %3176 = OpBitcast %int %3175
       %3177 = OpIMul %int %3176 %int_4
       %3178 = OpIAdd %int %3174 %3177
       %3179 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3180 = OpLoad %int %3179 None
       %3181 = OpSLessThan %bool %3178 %3180
               OpSelectionMerge %3182 None
               OpBranchConditional %3181 %3183 %3182
       %3183 = OpLabel
       %3184 = OpIMul %int %v__1 %int_1212416
       %3185 = OpCompositeExtract %uint %threadIdx 0
       %3186 = OpBitcast %int %3185
       %3187 = OpIMul %int %3186 %int_151552
       %3188 = OpIAdd %int %3184 %3187
       %3189 = OpCompositeExtract %uint %blockIdx 1
       %3190 = OpBitcast %int %3189
       %3191 = OpIMul %int %3190 %int_32
       %3192 = OpIAdd %int %3188 %3191
       %3193 = OpCompositeExtract %uint %threadIdx 1
       %3194 = OpBitcast %int %3193
       %3195 = OpIMul %int %3194 %int_4
       %3196 = OpIAdd %int %3192 %3195
       %3197 = OpIAdd %int %3196 %int_1
       %3198 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3197
       %3199 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_1
       %3200 = OpLoad %float %3199 None
               OpStore %3198 %3200 None
               OpBranch %3182
       %3182 = OpLabel
       %3201 = OpIMul %int %v__1 %int_32
       %3202 = OpCompositeExtract %uint %threadIdx 0
       %3203 = OpBitcast %int %3202
       %3204 = OpIMul %int %3203 %int_4
       %3205 = OpIAdd %int %3201 %3204
       %3206 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3207 = OpLoad %int %3206 None
       %3208 = OpSLessThan %bool %3205 %3207
               OpSelectionMerge %3209 None
               OpBranchConditional %3208 %3210 %3209
       %3210 = OpLabel
       %3211 = OpIMul %int %v__1 %int_1212416
       %3212 = OpCompositeExtract %uint %threadIdx 0
       %3213 = OpBitcast %int %3212
       %3214 = OpIMul %int %3213 %int_151552
       %3215 = OpIAdd %int %3211 %3214
       %3216 = OpCompositeExtract %uint %blockIdx 1
       %3217 = OpBitcast %int %3216
       %3218 = OpIMul %int %3217 %int_32
       %3219 = OpIAdd %int %3215 %3218
       %3220 = OpCompositeExtract %uint %threadIdx 1
       %3221 = OpBitcast %int %3220
       %3222 = OpIMul %int %3221 %int_4
       %3223 = OpIAdd %int %3219 %3222
       %3224 = OpIAdd %int %3223 %int_2
       %3225 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3224
       %3226 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_2
       %3227 = OpLoad %float %3226 None
               OpStore %3225 %3227 None
               OpBranch %3209
       %3209 = OpLabel
       %3228 = OpIMul %int %v__1 %int_32
       %3229 = OpCompositeExtract %uint %threadIdx 0
       %3230 = OpBitcast %int %3229
       %3231 = OpIMul %int %3230 %int_4
       %3232 = OpIAdd %int %3228 %3231
       %3233 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3234 = OpLoad %int %3233 None
       %3235 = OpSLessThan %bool %3232 %3234
               OpSelectionMerge %3236 None
               OpBranchConditional %3235 %3237 %3236
       %3237 = OpLabel
       %3238 = OpIMul %int %v__1 %int_1212416
       %3239 = OpCompositeExtract %uint %threadIdx 0
       %3240 = OpBitcast %int %3239
       %3241 = OpIMul %int %3240 %int_151552
       %3242 = OpIAdd %int %3238 %3241
       %3243 = OpCompositeExtract %uint %blockIdx 1
       %3244 = OpBitcast %int %3243
       %3245 = OpIMul %int %3244 %int_32
       %3246 = OpIAdd %int %3242 %3245
       %3247 = OpCompositeExtract %uint %threadIdx 1
       %3248 = OpBitcast %int %3247
       %3249 = OpIMul %int %3248 %int_4
       %3250 = OpIAdd %int %3246 %3249
       %3251 = OpIAdd %int %3250 %int_3
       %3252 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3251
       %3253 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_3
       %3254 = OpLoad %float %3253 None
               OpStore %3252 %3254 None
               OpBranch %3236
       %3236 = OpLabel
       %3255 = OpIMul %int %v__1 %int_32
       %3256 = OpCompositeExtract %uint %threadIdx 0
       %3257 = OpBitcast %int %3256
       %3258 = OpIMul %int %3257 %int_4
       %3259 = OpIAdd %int %3255 %3258
       %3260 = OpIAdd %int %3259 %int_1
       %3261 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3262 = OpLoad %int %3261 None
       %3263 = OpSLessThan %bool %3260 %3262
               OpSelectionMerge %3264 None
               OpBranchConditional %3263 %3265 %3264
       %3265 = OpLabel
       %3266 = OpIMul %int %v__1 %int_1212416
       %3267 = OpCompositeExtract %uint %threadIdx 0
       %3268 = OpBitcast %int %3267
       %3269 = OpIMul %int %3268 %int_151552
       %3270 = OpIAdd %int %3266 %3269
       %3271 = OpCompositeExtract %uint %blockIdx 1
       %3272 = OpBitcast %int %3271
       %3273 = OpIMul %int %3272 %int_32
       %3274 = OpIAdd %int %3270 %3273
       %3275 = OpCompositeExtract %uint %threadIdx 1
       %3276 = OpBitcast %int %3275
       %3277 = OpIMul %int %3276 %int_4
       %3278 = OpIAdd %int %3274 %3277
       %3279 = OpIAdd %int %3278 %int_37888
       %3281 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3279
       %3282 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_4
       %3283 = OpLoad %float %3282 None
               OpStore %3281 %3283 None
               OpBranch %3264
       %3264 = OpLabel
       %3284 = OpIMul %int %v__1 %int_32
       %3285 = OpCompositeExtract %uint %threadIdx 0
       %3286 = OpBitcast %int %3285
       %3287 = OpIMul %int %3286 %int_4
       %3288 = OpIAdd %int %3284 %3287
       %3289 = OpIAdd %int %3288 %int_1
       %3290 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3291 = OpLoad %int %3290 None
       %3292 = OpSLessThan %bool %3289 %3291
               OpSelectionMerge %3293 None
               OpBranchConditional %3292 %3294 %3293
       %3294 = OpLabel
       %3295 = OpIMul %int %v__1 %int_1212416
       %3296 = OpCompositeExtract %uint %threadIdx 0
       %3297 = OpBitcast %int %3296
       %3298 = OpIMul %int %3297 %int_151552
       %3299 = OpIAdd %int %3295 %3298
       %3300 = OpCompositeExtract %uint %blockIdx 1
       %3301 = OpBitcast %int %3300
       %3302 = OpIMul %int %3301 %int_32
       %3303 = OpIAdd %int %3299 %3302
       %3304 = OpCompositeExtract %uint %threadIdx 1
       %3305 = OpBitcast %int %3304
       %3306 = OpIMul %int %3305 %int_4
       %3307 = OpIAdd %int %3303 %3306
       %3308 = OpIAdd %int %3307 %int_37889
       %3310 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3308
       %3311 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_5
       %3312 = OpLoad %float %3311 None
               OpStore %3310 %3312 None
               OpBranch %3293
       %3293 = OpLabel
       %3313 = OpIMul %int %v__1 %int_32
       %3314 = OpCompositeExtract %uint %threadIdx 0
       %3315 = OpBitcast %int %3314
       %3316 = OpIMul %int %3315 %int_4
       %3317 = OpIAdd %int %3313 %3316
       %3318 = OpIAdd %int %3317 %int_1
       %3319 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3320 = OpLoad %int %3319 None
       %3321 = OpSLessThan %bool %3318 %3320
               OpSelectionMerge %3322 None
               OpBranchConditional %3321 %3323 %3322
       %3323 = OpLabel
       %3324 = OpIMul %int %v__1 %int_1212416
       %3325 = OpCompositeExtract %uint %threadIdx 0
       %3326 = OpBitcast %int %3325
       %3327 = OpIMul %int %3326 %int_151552
       %3328 = OpIAdd %int %3324 %3327
       %3329 = OpCompositeExtract %uint %blockIdx 1
       %3330 = OpBitcast %int %3329
       %3331 = OpIMul %int %3330 %int_32
       %3332 = OpIAdd %int %3328 %3331
       %3333 = OpCompositeExtract %uint %threadIdx 1
       %3334 = OpBitcast %int %3333
       %3335 = OpIMul %int %3334 %int_4
       %3336 = OpIAdd %int %3332 %3335
       %3337 = OpIAdd %int %3336 %int_37890
       %3339 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3337
       %3340 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_6
       %3341 = OpLoad %float %3340 None
               OpStore %3339 %3341 None
               OpBranch %3322
       %3322 = OpLabel
       %3342 = OpIMul %int %v__1 %int_32
       %3343 = OpCompositeExtract %uint %threadIdx 0
       %3344 = OpBitcast %int %3343
       %3345 = OpIMul %int %3344 %int_4
       %3346 = OpIAdd %int %3342 %3345
       %3347 = OpIAdd %int %3346 %int_1
       %3348 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3349 = OpLoad %int %3348 None
       %3350 = OpSLessThan %bool %3347 %3349
               OpSelectionMerge %3351 None
               OpBranchConditional %3350 %3352 %3351
       %3352 = OpLabel
       %3353 = OpIMul %int %v__1 %int_1212416
       %3354 = OpCompositeExtract %uint %threadIdx 0
       %3355 = OpBitcast %int %3354
       %3356 = OpIMul %int %3355 %int_151552
       %3357 = OpIAdd %int %3353 %3356
       %3358 = OpCompositeExtract %uint %blockIdx 1
       %3359 = OpBitcast %int %3358
       %3360 = OpIMul %int %3359 %int_32
       %3361 = OpIAdd %int %3357 %3360
       %3362 = OpCompositeExtract %uint %threadIdx 1
       %3363 = OpBitcast %int %3362
       %3364 = OpIMul %int %3363 %int_4
       %3365 = OpIAdd %int %3361 %3364
       %3366 = OpIAdd %int %3365 %int_37891
       %3368 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3366
       %3369 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_7
       %3370 = OpLoad %float %3369 None
               OpStore %3368 %3370 None
               OpBranch %3351
       %3351 = OpLabel
       %3371 = OpIMul %int %v__1 %int_32
       %3372 = OpCompositeExtract %uint %threadIdx 0
       %3373 = OpBitcast %int %3372
       %3374 = OpIMul %int %3373 %int_4
       %3375 = OpIAdd %int %3371 %3374
       %3376 = OpIAdd %int %3375 %int_2
       %3377 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3378 = OpLoad %int %3377 None
       %3379 = OpSLessThan %bool %3376 %3378
               OpSelectionMerge %3380 None
               OpBranchConditional %3379 %3381 %3380
       %3381 = OpLabel
       %3382 = OpIMul %int %v__1 %int_1212416
       %3383 = OpCompositeExtract %uint %threadIdx 0
       %3384 = OpBitcast %int %3383
       %3385 = OpIMul %int %3384 %int_151552
       %3386 = OpIAdd %int %3382 %3385
       %3387 = OpCompositeExtract %uint %blockIdx 1
       %3388 = OpBitcast %int %3387
       %3389 = OpIMul %int %3388 %int_32
       %3390 = OpIAdd %int %3386 %3389
       %3391 = OpCompositeExtract %uint %threadIdx 1
       %3392 = OpBitcast %int %3391
       %3393 = OpIMul %int %3392 %int_4
       %3394 = OpIAdd %int %3390 %3393
       %3395 = OpIAdd %int %3394 %int_75776
       %3397 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3395
       %3398 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_8
       %3399 = OpLoad %float %3398 None
               OpStore %3397 %3399 None
               OpBranch %3380
       %3380 = OpLabel
       %3400 = OpIMul %int %v__1 %int_32
       %3401 = OpCompositeExtract %uint %threadIdx 0
       %3402 = OpBitcast %int %3401
       %3403 = OpIMul %int %3402 %int_4
       %3404 = OpIAdd %int %3400 %3403
       %3405 = OpIAdd %int %3404 %int_2
       %3406 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3407 = OpLoad %int %3406 None
       %3408 = OpSLessThan %bool %3405 %3407
               OpSelectionMerge %3409 None
               OpBranchConditional %3408 %3410 %3409
       %3410 = OpLabel
       %3411 = OpIMul %int %v__1 %int_1212416
       %3412 = OpCompositeExtract %uint %threadIdx 0
       %3413 = OpBitcast %int %3412
       %3414 = OpIMul %int %3413 %int_151552
       %3415 = OpIAdd %int %3411 %3414
       %3416 = OpCompositeExtract %uint %blockIdx 1
       %3417 = OpBitcast %int %3416
       %3418 = OpIMul %int %3417 %int_32
       %3419 = OpIAdd %int %3415 %3418
       %3420 = OpCompositeExtract %uint %threadIdx 1
       %3421 = OpBitcast %int %3420
       %3422 = OpIMul %int %3421 %int_4
       %3423 = OpIAdd %int %3419 %3422
       %3424 = OpIAdd %int %3423 %int_75777
       %3426 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3424
       %3427 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_9
       %3428 = OpLoad %float %3427 None
               OpStore %3426 %3428 None
               OpBranch %3409
       %3409 = OpLabel
       %3429 = OpIMul %int %v__1 %int_32
       %3430 = OpCompositeExtract %uint %threadIdx 0
       %3431 = OpBitcast %int %3430
       %3432 = OpIMul %int %3431 %int_4
       %3433 = OpIAdd %int %3429 %3432
       %3434 = OpIAdd %int %3433 %int_2
       %3435 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3436 = OpLoad %int %3435 None
       %3437 = OpSLessThan %bool %3434 %3436
               OpSelectionMerge %3438 None
               OpBranchConditional %3437 %3439 %3438
       %3439 = OpLabel
       %3440 = OpIMul %int %v__1 %int_1212416
       %3441 = OpCompositeExtract %uint %threadIdx 0
       %3442 = OpBitcast %int %3441
       %3443 = OpIMul %int %3442 %int_151552
       %3444 = OpIAdd %int %3440 %3443
       %3445 = OpCompositeExtract %uint %blockIdx 1
       %3446 = OpBitcast %int %3445
       %3447 = OpIMul %int %3446 %int_32
       %3448 = OpIAdd %int %3444 %3447
       %3449 = OpCompositeExtract %uint %threadIdx 1
       %3450 = OpBitcast %int %3449
       %3451 = OpIMul %int %3450 %int_4
       %3452 = OpIAdd %int %3448 %3451
       %3453 = OpIAdd %int %3452 %int_75778
       %3455 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3453
       %3456 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_10
       %3457 = OpLoad %float %3456 None
               OpStore %3455 %3457 None
               OpBranch %3438
       %3438 = OpLabel
       %3458 = OpIMul %int %v__1 %int_32
       %3459 = OpCompositeExtract %uint %threadIdx 0
       %3460 = OpBitcast %int %3459
       %3461 = OpIMul %int %3460 %int_4
       %3462 = OpIAdd %int %3458 %3461
       %3463 = OpIAdd %int %3462 %int_2
       %3464 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3465 = OpLoad %int %3464 None
       %3466 = OpSLessThan %bool %3463 %3465
               OpSelectionMerge %3467 None
               OpBranchConditional %3466 %3468 %3467
       %3468 = OpLabel
       %3469 = OpIMul %int %v__1 %int_1212416
       %3470 = OpCompositeExtract %uint %threadIdx 0
       %3471 = OpBitcast %int %3470
       %3472 = OpIMul %int %3471 %int_151552
       %3473 = OpIAdd %int %3469 %3472
       %3474 = OpCompositeExtract %uint %blockIdx 1
       %3475 = OpBitcast %int %3474
       %3476 = OpIMul %int %3475 %int_32
       %3477 = OpIAdd %int %3473 %3476
       %3478 = OpCompositeExtract %uint %threadIdx 1
       %3479 = OpBitcast %int %3478
       %3480 = OpIMul %int %3479 %int_4
       %3481 = OpIAdd %int %3477 %3480
       %3482 = OpIAdd %int %3481 %int_75779
       %3484 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3482
       %3485 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_11
       %3486 = OpLoad %float %3485 None
               OpStore %3484 %3486 None
               OpBranch %3467
       %3467 = OpLabel
       %3487 = OpIMul %int %v__1 %int_32
       %3488 = OpCompositeExtract %uint %threadIdx 0
       %3489 = OpBitcast %int %3488
       %3490 = OpIMul %int %3489 %int_4
       %3491 = OpIAdd %int %3487 %3490
       %3492 = OpIAdd %int %3491 %int_3
       %3493 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3494 = OpLoad %int %3493 None
       %3495 = OpSLessThan %bool %3492 %3494
               OpSelectionMerge %3496 None
               OpBranchConditional %3495 %3497 %3496
       %3497 = OpLabel
       %3498 = OpIMul %int %v__1 %int_1212416
       %3499 = OpCompositeExtract %uint %threadIdx 0
       %3500 = OpBitcast %int %3499
       %3501 = OpIMul %int %3500 %int_151552
       %3502 = OpIAdd %int %3498 %3501
       %3503 = OpCompositeExtract %uint %blockIdx 1
       %3504 = OpBitcast %int %3503
       %3505 = OpIMul %int %3504 %int_32
       %3506 = OpIAdd %int %3502 %3505
       %3507 = OpCompositeExtract %uint %threadIdx 1
       %3508 = OpBitcast %int %3507
       %3509 = OpIMul %int %3508 %int_4
       %3510 = OpIAdd %int %3506 %3509
       %3511 = OpIAdd %int %3510 %int_113664
       %3513 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3511
       %3514 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_12
       %3515 = OpLoad %float %3514 None
               OpStore %3513 %3515 None
               OpBranch %3496
       %3496 = OpLabel
       %3516 = OpIMul %int %v__1 %int_32
       %3517 = OpCompositeExtract %uint %threadIdx 0
       %3518 = OpBitcast %int %3517
       %3519 = OpIMul %int %3518 %int_4
       %3520 = OpIAdd %int %3516 %3519
       %3521 = OpIAdd %int %3520 %int_3
       %3522 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3523 = OpLoad %int %3522 None
       %3524 = OpSLessThan %bool %3521 %3523
               OpSelectionMerge %3525 None
               OpBranchConditional %3524 %3526 %3525
       %3526 = OpLabel
       %3527 = OpIMul %int %v__1 %int_1212416
       %3528 = OpCompositeExtract %uint %threadIdx 0
       %3529 = OpBitcast %int %3528
       %3530 = OpIMul %int %3529 %int_151552
       %3531 = OpIAdd %int %3527 %3530
       %3532 = OpCompositeExtract %uint %blockIdx 1
       %3533 = OpBitcast %int %3532
       %3534 = OpIMul %int %3533 %int_32
       %3535 = OpIAdd %int %3531 %3534
       %3536 = OpCompositeExtract %uint %threadIdx 1
       %3537 = OpBitcast %int %3536
       %3538 = OpIMul %int %3537 %int_4
       %3539 = OpIAdd %int %3535 %3538
       %3540 = OpIAdd %int %3539 %int_113665
       %3542 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3540
       %3543 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_13
       %3544 = OpLoad %float %3543 None
               OpStore %3542 %3544 None
               OpBranch %3525
       %3525 = OpLabel
       %3545 = OpIMul %int %v__1 %int_32
       %3546 = OpCompositeExtract %uint %threadIdx 0
       %3547 = OpBitcast %int %3546
       %3548 = OpIMul %int %3547 %int_4
       %3549 = OpIAdd %int %3545 %3548
       %3550 = OpIAdd %int %3549 %int_3
       %3551 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3552 = OpLoad %int %3551 None
       %3553 = OpSLessThan %bool %3550 %3552
               OpSelectionMerge %3554 None
               OpBranchConditional %3553 %3555 %3554
       %3555 = OpLabel
       %3556 = OpIMul %int %v__1 %int_1212416
       %3557 = OpCompositeExtract %uint %threadIdx 0
       %3558 = OpBitcast %int %3557
       %3559 = OpIMul %int %3558 %int_151552
       %3560 = OpIAdd %int %3556 %3559
       %3561 = OpCompositeExtract %uint %blockIdx 1
       %3562 = OpBitcast %int %3561
       %3563 = OpIMul %int %3562 %int_32
       %3564 = OpIAdd %int %3560 %3563
       %3565 = OpCompositeExtract %uint %threadIdx 1
       %3566 = OpBitcast %int %3565
       %3567 = OpIMul %int %3566 %int_4
       %3568 = OpIAdd %int %3564 %3567
       %3569 = OpIAdd %int %3568 %int_113666
       %3571 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3569
       %3572 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_14
       %3573 = OpLoad %float %3572 None
               OpStore %3571 %3573 None
               OpBranch %3554
       %3554 = OpLabel
       %3574 = OpIMul %int %v__1 %int_32
       %3575 = OpCompositeExtract %uint %threadIdx 0
       %3576 = OpBitcast %int %3575
       %3577 = OpIMul %int %3576 %int_4
       %3578 = OpIAdd %int %3574 %3577
       %3579 = OpIAdd %int %3578 %int_3
       %3580 = OpAccessChain %_ptr_Uniform_int %17 %uint_0 %uint_0
       %3581 = OpLoad %int %3580 None
       %3582 = OpSLessThan %bool %3579 %3581
               OpSelectionMerge %3583 None
               OpBranchConditional %3582 %3584 %3583
       %3584 = OpLabel
       %3585 = OpIMul %int %v__1 %int_1212416
       %3586 = OpCompositeExtract %uint %threadIdx 0
       %3587 = OpBitcast %int %3586
       %3588 = OpIMul %int %3587 %int_151552
       %3589 = OpIAdd %int %3585 %3588
       %3590 = OpCompositeExtract %uint %blockIdx 1
       %3591 = OpBitcast %int %3590
       %3592 = OpIMul %int %3591 %int_32
       %3593 = OpIAdd %int %3589 %3592
       %3594 = OpCompositeExtract %uint %threadIdx 1
       %3595 = OpBitcast %int %3594
       %3596 = OpIMul %int %3595 %int_4
       %3597 = OpIAdd %int %3593 %3596
       %3598 = OpIAdd %int %3597 %int_113667
       %3600 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %3598
       %3601 = OpAccessChain %_ptr_Function_float %NT_matmul_intermediate_reindex_pad_local %uint_15
       %3602 = OpLoad %float %3601 None
               OpStore %3600 %3602 None
               OpBranch %3583
       %3583 = OpLabel
               OpBranch %67
         %67 = OpLabel
       %3603 = OpLoad %int %var_1 None
       %3604 = OpIAdd %int %3603 %int_1
               OpStore %var_1 %3604 None
               OpBranch %68
         %69 = OpLabel
               OpReturn
               OpFunctionEnd
%fused_fused_dequantize3_NT_matmul7_kernel_2 = OpFunction %void None %3606
       %3607 = OpLabel
       %3608 = OpLoad %v3uint %fused_fused_dequantize3_NT_matmul7_kernel_2_workgroup_id_Input None
       %3609 = OpLoad %v3uint %fused_fused_dequantize3_NT_matmul7_kernel_2_num_workgroups_Input None
       %3610 = OpLoad %v3uint %fused_fused_dequantize3_NT_matmul7_kernel_2_local_invocation_id_Input None
       %3611 = OpFunctionCall %void %fused_fused_dequantize3_NT_matmul7_kernel_2_inner %3608 %3609 %3610
               OpReturn
               OpFunctionEnd

// Dumped WGSL:
//----------------------------------------
// Function: fused_split_silu_multiply_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_multiply : array<f32>;
@group(0) @binding(1) var<storage, read> lv2 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn fused_split_silu_multiply_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_multiply[((v__1 * 256i) + i32(threadIdx.x))] = ((lv2[((((v__1 / 74i) * 37888i) + ((v__1 % 74i) * 256i)) + i32(threadIdx.x))] * (1.000000e+00f / (1.000000e+00f + exp((0.000000e+00f - lv2[((((v__1 / 74i) * 37888i) + ((v__1 % 74i) * 256i)) + i32(threadIdx.x))]))))) * lv2[(((((v__1 / 74i) * 37888i) + ((v__1 % 74i) * 256i)) + i32(threadIdx.x)) + 18944i)]);
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize4_fused_NT_matmul8_add3_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv460 : array<u32>;
@group(0) @binding(2) var<storage, read> lv461 : array<f32>;
@group(0) @binding(3) var<storage, read> lv791 : array<f32>;
@group(0) @binding(4) var<storage, read> lv792 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize4_fused_NT_matmul8_add3_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 4>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 4>;
  var NT_matmul_intermediate_pad_local : array<f32, 4>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 2i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 37i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv460[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv461[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>0u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[9i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>4u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[10i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>8u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[11i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>12u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[12i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>16u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[13i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>20u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[14i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>24u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[15i] = ((f32(((lv460[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>28u) & 15u)) - 7.000000e+00f) * lv461[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    if ((i32(blockIdx.y) * 2i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[(((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[(((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 2i) + 1i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18944i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18945i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18946i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18947i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18948i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18949i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18950i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18951i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18944i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18945i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18946i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18947i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18948i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18949i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18950i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv792[((((i32(blockIdx.y) * 37888i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18951i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 2i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 2i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.seq_len + 1i)>>1u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 2i) + ax0) < podArgs.seq_len)) {
        T_add[((((i32(blockIdx.y) * 7168i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)] = (NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)] + lv791[((((i32(blockIdx.y) * 7168i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)]);
      }
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 134
; Schema: 0
               OpCapability Shader
         %82 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_split_silu_multiply_kernel "fused_split_silu_multiply_kernel" %fused_split_silu_multiply_kernel_workgroup_id_Input %fused_split_silu_multiply_kernel_num_workgroups_Input %fused_split_silu_multiply_kernel_local_invocation_id_Input
               OpExecutionMode %fused_split_silu_multiply_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %fused_split_silu_multiply_kernel_workgroup_id_Input "fused_split_silu_multiply_kernel_workgroup_id_Input"
               OpName %fused_split_silu_multiply_kernel_num_workgroups_Input "fused_split_silu_multiply_kernel_num_workgroups_Input"
               OpName %fused_split_silu_multiply_kernel_local_invocation_id_Input "fused_split_silu_multiply_kernel_local_invocation_id_Input"
               OpName %fused_split_silu_multiply_kernel_inner "fused_split_silu_multiply_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_mod_i32 "tint_mod_i32"
               OpName %lhs_0 "lhs"
               OpName %rhs_0 "rhs"
               OpName %fused_split_silu_multiply_kernel "fused_split_silu_multiply_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %fused_split_silu_multiply_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_split_silu_multiply_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_split_silu_multiply_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%fused_split_silu_multiply_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%fused_split_silu_multiply_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%fused_split_silu_multiply_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %25 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
     %int_74 = OpConstant %int 74
  %int_37888 = OpConstant %int 37888
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
    %float_0 = OpConstant %float 0
    %float_1 = OpConstant %float 1
  %int_18944 = OpConstant %int 18944
        %102 = OpTypeFunction %int %int %int
      %int_0 = OpConstant %int 0
%int_n2147483648 = OpConstant %int -2147483648
     %int_n1 = OpConstant %int -1
      %int_1 = OpConstant %int 1
        %128 = OpTypeFunction %void
%fused_split_silu_multiply_kernel_inner = OpFunction %void None %25
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %26 = OpLabel
         %27 = OpCompositeExtract %uint %blockIdx 2
         %28 = OpCompositeExtract %uint %gridDim 0
         %29 = OpIMul %uint %27 %28
         %30 = OpCompositeExtract %uint %blockIdx 0
         %31 = OpIAdd %uint %29 %30
         %32 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_1
         %36 = OpLoad %uint %32 None
         %37 = OpUGreaterThan %bool %31 %36
               OpSelectionMerge %39 None
               OpBranchConditional %37 %40 %39
         %40 = OpLabel
               OpReturn
         %39 = OpLabel
         %41 = OpCompositeExtract %uint %blockIdx 2
         %42 = OpCompositeExtract %uint %gridDim 0
         %43 = OpIMul %uint %41 %42
         %44 = OpCompositeExtract %uint %blockIdx 0
         %45 = OpIAdd %uint %43 %44
       %v__1 = OpBitcast %int %45
         %47 = OpIMul %int %v__1 %int_256
         %49 = OpCompositeExtract %uint %threadIdx 0
         %50 = OpBitcast %int %49
         %51 = OpIAdd %int %47 %50
         %52 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %51
         %54 = OpFunctionCall %int %tint_div_i32 %v__1 %int_74
         %57 = OpIMul %int %54 %int_37888
         %59 = OpFunctionCall %int %tint_mod_i32 %v__1 %int_74
         %61 = OpIMul %int %59 %int_256
         %62 = OpIAdd %int %57 %61
         %63 = OpCompositeExtract %uint %threadIdx 0
         %64 = OpBitcast %int %63
         %65 = OpIAdd %int %62 %64
         %66 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %65
         %68 = OpLoad %float %66 None
         %69 = OpFunctionCall %int %tint_div_i32 %v__1 %int_74
         %70 = OpIMul %int %69 %int_37888
         %71 = OpFunctionCall %int %tint_mod_i32 %v__1 %int_74
         %72 = OpIMul %int %71 %int_256
         %73 = OpIAdd %int %70 %72
         %74 = OpCompositeExtract %uint %threadIdx 0
         %75 = OpBitcast %int %74
         %76 = OpIAdd %int %73 %75
         %77 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %76
         %78 = OpLoad %float %77 None
         %79 = OpFSub %float %float_0 %78
         %81 = OpExtInst %float %82 Exp %79
         %83 = OpFAdd %float %float_1 %81
         %85 = OpFDiv %float %float_1 %83
         %86 = OpFMul %float %68 %85
         %87 = OpFunctionCall %int %tint_div_i32 %v__1 %int_74
         %88 = OpIMul %int %87 %int_37888
         %89 = OpFunctionCall %int %tint_mod_i32 %v__1 %int_74
         %90 = OpIMul %int %89 %int_256
         %91 = OpIAdd %int %88 %90
         %92 = OpCompositeExtract %uint %threadIdx 0
         %93 = OpBitcast %int %92
         %94 = OpIAdd %int %91 %93
         %95 = OpIAdd %int %94 %int_18944
         %97 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %95
         %98 = OpLoad %float %97 None
         %99 = OpFMul %float %86 %98
               OpStore %52 %99 None
               OpReturn
               OpFunctionEnd
%tint_div_i32 = OpFunction %int None %102
        %lhs = OpFunctionParameter %int
        %rhs = OpFunctionParameter %int
        %103 = OpLabel
        %104 = OpIEqual %bool %rhs %int_0
        %106 = OpIEqual %bool %lhs %int_n2147483648
        %108 = OpIEqual %bool %rhs %int_n1
        %110 = OpLogicalAnd %bool %106 %108
        %111 = OpLogicalOr %bool %104 %110
        %112 = OpSelect %int %111 %int_1 %rhs
        %114 = OpSDiv %int %lhs %112
               OpReturnValue %114
               OpFunctionEnd
%tint_mod_i32 = OpFunction %int None %102
      %lhs_0 = OpFunctionParameter %int
      %rhs_0 = OpFunctionParameter %int
        %117 = OpLabel
        %118 = OpIEqual %bool %rhs_0 %int_0
        %119 = OpIEqual %bool %lhs_0 %int_n2147483648
        %120 = OpIEqual %bool %rhs_0 %int_n1
        %121 = OpLogicalAnd %bool %119 %120
        %122 = OpLogicalOr %bool %118 %121
        %123 = OpSelect %int %122 %int_1 %rhs_0
        %124 = OpSDiv %int %lhs_0 %123
        %125 = OpIMul %int %124 %123
        %126 = OpISub %int %lhs_0 %125
               OpReturnValue %126
               OpFunctionEnd
%fused_split_silu_multiply_kernel = OpFunction %void None %128
        %129 = OpLabel
        %130 = OpLoad %v3uint %fused_split_silu_multiply_kernel_workgroup_id_Input None
        %131 = OpLoad %v3uint %fused_split_silu_multiply_kernel_num_workgroups_Input None
        %132 = OpLoad %v3uint %fused_split_silu_multiply_kernel_local_invocation_id_Input None
        %133 = OpFunctionCall %void %fused_split_silu_multiply_kernel_inner %130 %131 %132
               OpReturn
               OpFunctionEnd

// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize2_fused_NT_matmul1_add1_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> input_embeds : array<f32>;
@group(0) @binding(2) var<storage, read> lv3 : array<u32>;
@group(0) @binding(3) var<storage, read> lv4 : array<f32>;
@group(0) @binding(4) var<storage, read> reshape339 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize2_fused_NT_matmul1_add1_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 4>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 4>;
  var NT_matmul_intermediate_pad_local : array<f32, 4>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 2i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 2i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 2i) + 1i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 2i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 2i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.batch_size + 1i)>>1u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 2i) + ax0) < podArgs.batch_size)) {
        T_add[((((i32(blockIdx.y) * 7168i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)] = (NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)] + input_embeds[((((i32(blockIdx.y) * 7168i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)]);
      }
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2093
; Schema: 0
               OpCapability Shader
        %279 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %batch_tree_attn_kernel "batch_tree_attn_kernel" %batch_tree_attn_kernel_workgroup_id_Input %batch_tree_attn_kernel_num_workgroups_Input %batch_tree_attn_kernel_local_invocation_id_Input
               OpExecutionMode %batch_tree_attn_kernel LocalSize 32 4 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpMemberName %tint_symbol_13 0 "tint_symbol_12"
               OpName %tint_symbol_13 "tint_symbol_13"
               OpMemberName %tint_symbol_15 0 "tint_symbol_14"
               OpName %tint_symbol_15 "tint_symbol_15"
               OpMemberName %tint_symbol_17 0 "tint_symbol_16"
               OpName %tint_symbol_17 "tint_symbol_17"
               OpMemberName %tint_symbol_19 0 "tint_symbol_18"
               OpName %tint_symbol_19 "tint_symbol_19"
               OpMemberName %PODArgs 0 "attn_score_scaling_factor"
               OpMemberName %PODArgs 1 "batch_size"
               OpMemberName %PODArgs 2 "kv_indptr_elem_offset"
               OpMemberName %PODArgs 3 "kv_len"
               OpMemberName %PODArgs 4 "mask_elem_offset"
               OpMemberName %PODArgs 5 "mn_indptr_elem_offset"
               OpMemberName %PODArgs 6 "q_indptr_elem_offset"
               OpMemberName %PODArgs 7 "q_rope_position_elem_offset"
               OpMemberName %PODArgs 8 "qo_len"
               OpMemberName %PODArgs 9 "rope_scale"
               OpMemberName %PODArgs 10 "rope_theta"
               OpMemberName %PODArgs 11 "rotary_mode"
               OpMemberName %PODArgs 12 "tree_size"
               OpMemberName %PODArgs 13 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_21 0 "tint_symbol_20"
               OpName %tint_symbol_21 "tint_symbol_21"
               OpName %m_smem "m_smem"
               OpName %d_smem "d_smem"
               OpName %Q_smem "Q_smem"
               OpName %K_smem "K_smem"
               OpName %V_smem "V_smem"
               OpName %S_smem "S_smem"
               OpName %m_prev_smem "m_prev_smem"
               OpName %batch_tree_attn_kernel_workgroup_id_Input "batch_tree_attn_kernel_workgroup_id_Input"
               OpName %batch_tree_attn_kernel_num_workgroups_Input "batch_tree_attn_kernel_num_workgroups_Input"
               OpName %batch_tree_attn_kernel_local_invocation_id_Input "batch_tree_attn_kernel_local_invocation_id_Input"
               OpName %batch_tree_attn_kernel_inner "batch_tree_attn_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %tile_id "tile_id"
               OpName %batch_idx "batch_idx"
               OpName %batch_rows "batch_rows"
               OpName %batch_tiles "batch_tiles"
               OpName %kv_chunk_len "kv_chunk_len"
               OpName %O_local "O_local"
               OpName %S_local "S_local"
               OpName %m_prev "m_prev"
               OpName %m_new "m_new"
               OpName %d_new "d_new"
               OpName %b_idx "b_idx"
               OpName %b_idx_1 "b_idx_1"
               OpName %LH_start "LH_start"
               OpName %q_indptr_val "q_indptr_val"
               OpName %li_1 "li_1"
               OpName %lj_1 "lj_1"
               OpName %li_lj_fused_0 "li_lj_fused_0"
               OpName %li_lj_fused_3_s "li_lj_fused_3_s"
               OpName %condval "condval"
               OpName %condval_1 "condval_1"
               OpName %v__2 "v__2"
               OpName %iterator "iterator"
               OpName %L_kv_base "L_kv_base"
               OpName %lz_ly_fused_0 "lz_ly_fused_0"
               OpName %lz_ly_fused_3_s "lz_ly_fused_3_s"
               OpName %condval_2 "condval_2"
               OpName %condval_3 "condval_3"
               OpName %v__3 "v__3"
               OpName %v__4 "v__4"
               OpName %lj_1_init "lj_1_init"
               OpName %lk_0 "lk_0"
               OpName %lj_1_1 "lj_1_1"
               OpName %lk_1 "lk_1"
               OpName %lj_1_2 "lj_1_2"
         
// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize1_fused_NT_matmul_add_kernel_1
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv : array<u32>;
@group(0) @binding(2) var<storage, read> lv1 : array<f32>;
@group(0) @binding(3) var<storage, read> model_layers_0_self_attn_c_attn_bias4 : array<f32>;
@group(0) @binding(4) var<storage, read> rms_norm171 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize1_fused_NT_matmul_add_kernel_1(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 8>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 8>;
  var NT_matmul_intermediate_pad_local : array<f32, 8>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 4i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 4i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 4i) + 1i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
    if (((i32(blockIdx.y) * 4i) + 2i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[5i]);
    }
    if (((i32(blockIdx.y) * 4i) + 3i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(rms_norm171[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[7i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 4i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 4i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.batch_size + 3i)>>2u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 4i) + ax0) < podArgs.batch_size)) {
        T_add[((((i32(blockIdx.y) * 18432i) + (ax0 * 4608i)) + (v__1 * 2i)) + ax1_fused_2)] = (NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)] + model_layers_0_self_attn_c_attn_bias4[((v__1 * 2i) + ax1_fused_2)]);
      }
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1586
; Schema: 0
               OpCapability Shader
        %100 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize3_NT_matmul2_kernel "fused_fused_dequantize3_NT_matmul2_kernel" %fused_fused_dequantize3_NT_matmul2_kernel_workgroup_id_Input %fused_fused_dequantize3_NT_matmul2_kernel_num_workgroups_Input %fused_fused_dequantize3_NT_matmul2_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize3_NT_matmul2_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_workgroup_id_Input "fused_fused_dequantize3_NT_matmul2_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_num_workgroups_Input "fused_fused_dequantize3_NT_matmul2_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_local_invocation_id_Input "fused_fused_dequantize3_NT_matmul2_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_inner "fused_fused_dequantize3_NT_matmul2_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel "fused_fused_dequantize3_NT_matmul2_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize3_NT_matmul2_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize3_NT_matmul2_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize3_NT_matmul2_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_4 ArrayStride 4
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 3886
; Schema: 0
               OpCapability Shader
        %155 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2 "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2" %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_workgroup_id_Input %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_num_workgroups_Input %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2 LocalSize 8 8 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %lv341_reindex_pad_shared "lv341_reindex_pad_shared"
               OpName %dequantize_reindex_shared "dequantize_reindex_shared"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_workgroup_id_Input "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_workgroup_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_num_workgroups_Input "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_num_workgroups_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_local_invocation_id_Input "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_local_invocation_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_inner "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_reindex_pad_local "NT_matmul_intermediate_reindex_pad_local"
               OpName %v__1 "v__1"
               OpName %var_1 "var_1"
               OpName %ax3_0 "ax3_0"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2 "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %12 DescriptorSet 0
               OpDecorate %12 Binding 3
               OpDecorate %12 NonWritable
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %15 DescriptorSet 0
               OpDecorate %15 Binding 4
               OpDecorate %15 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_256 ArrayStride 4
               OpDecorate %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_2_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_16 ArrayStride 4
// Dumped WGSL:
//----------------------------------------
// Function: reshape4_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_reshape : array<f32>;
@group(0) @binding(1) var<storage, read> add168 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn reshape4_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_reshape[((v__1 * 256i) + i32(threadIdx.x))] = add168[((v__1 * 256i) + i32(threadIdx.x))];
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_reshape10_reshape11_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_reshape : array<f32>;
@group(0) @binding(1) var<storage, read> lv144 : array<f32>;

struct PODArgs {
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn fused_reshape10_reshape11_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_reshape[((v__1 * 256i) + i32(threadIdx.x))] = lv144[((v__1 * 256i) + i32(threadIdx.x))];
}



// Dumped WGSL:
//----------------------------------------
// Function: merge_state_inplace_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> S : array<f32>;
@group(0) @binding(1) var<storage, read> S_other : array<f32>;
@group(0) @binding(2) var<storage, read_write> V : array<f32>;
@group(0) @binding(3) var<storage, read> V_other : array<f32>;

struct PODArgs {
  D: i32,
  H: i32,
  N: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(32, 7, 1)
fn merge_state_inplace_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var s_val : array<f32, 1>;
  var s_other_val : array<f32, 1>;
  var s_max : array<f32, 1>;
  var scale : array<f32, 1>;
  var other_scale : array<f32, 1>;
  var v_vec : array<f32, 4>;
  var v_other_vec : array<f32, 4>;
  s_val[0i] = S[(((i32(blockIdx.y) * 7i) + (v__1 * podArgs.H)) + i32(threadIdx.y))];
  s_other_val[0i] = S_other[(((i32(blockIdx.y) * 7i) + (v__1 * podArgs.H)) + i32(threadIdx.y))];
  s_max[0i] = max(s_val[0i], s_other_val[0i]);
  s_val[0i] = exp2((s_val[0i] - s_max[0i]));
  s_other_val[0i] = exp2((s_other_val[0i] - s_max[0i]));
  scale[0i] = (s_val[0i] / (s_val[0i] + s_other_val[0i]));
  other_scale[0i] = (s_other_val[0i] / (s_val[0i] + s_other_val[0i]));
  let v__2 : i32 = ((i32(threadIdx.x) * 4i) + ((((i32(blockIdx.y) * 7i) + (v__1 * podArgs.H)) + i32(threadIdx.y)) * podArgs.D));
  v_vec[0i + 0] = vec4<f32>(V[v__2 + 0], V[v__2 + 1], V[v__2 + 2], V[v__2 + 3])[0];
  v_vec[0i + 1] = vec4<f32>(V[v__2 + 0], V[v__2 + 1], V[v__2 + 2], V[v__2 + 3])[1];
  v_vec[0i + 2] = vec4<f32>(V[v__2 + 0], V[v__2 + 1], V[v__2 + 2], V[v__2 + 3])[2];
  v_vec[0i + 3] = vec4<f32>(V[v__2 + 0], V[v__2 + 1], V[v__2 + 2], V[v__2 + 3])[3];
  v_other_vec[0i + 0] = vec4<f32>(V_other[v__2 + 0], V_other[v__2 + 1], V_other[v__2 + 2], V_other[v__2 + 3])[0];
  v_other_vec[0i + 1] = vec4<f32>(V_other[v__2 + 0], V_other[v__2 + 1], V_other[v__2 + 2], V_other[v__2 + 3])[1];
  v_other_vec[0i + 2] = vec4<f32>(V_other[v__2 + 0], V_other[v__2 + 1], V_other[v__2 + 2], V_other[v__2 + 3])[2];
  v_other_vec[0i + 3] = vec4<f32>(V_other[v__2 + 0], V_other[v__2 + 1], V_other[v__2 + 2], V_other[v__2 + 3])[3];
  for (var vec : i32 = 0; vec < 4i; vec++) {
    v_vec[vec] = fma(v_other_vec[vec], other_scale[0i], (v_vec[vec] * scale[0i]));
  }
  V[v__2 + 0] = vec4<f32>(v_vec[0i + 0], v_vec[0i + 1], v_vec[0i + 2], v_vec[0i + 3])[0];
  V[v__2 + 1] = vec4<f32>(v_vec[0i + 0], v_vec[0i + 1], v_vec[0i + 2], v_vec[0i + 3])[1];
  V[v__2 + 2] = vec4<f32>(v_vec[0i + 0], v_vec[0i + 1], v_vec[0i + 2], v_vec[0i + 3])[2];
  V[v__2 + 3] = vec4<f32>(v_vec[0i + 0], v_vec[0i + 1], v_vec[0i + 2], v_vec[0i + 3])[3];
  S[(((i32(blockIdx.y) * 7i) + (v__1 * podArgs.H)) + i32(threadIdx.y))] = (log2((s_val[0i] + s_other_val[0i])) + s_max[0i]);
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2230
; Schema: 0
               OpCapability Shader
        %308 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %batch_prefill_paged_kv_sliding_window_kernel "batch_prefill_paged_kv_sliding_window_kernel" %batch_prefill_paged_kv_sliding_window_kernel_workgroup_id_Input %batch_prefill_paged_kv_sliding_window_kernel_num_workgroups_Input %batch_prefill_paged_kv_sliding_window_kernel_local_invocation_id_Input
               OpExecutionMode %batch_prefill_paged_kv_sliding_window_kernel LocalSize 32 4 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpMemberName %tint_symbol_13 0 "tint_symbol_12"
               OpName %tint_symbol_13 "tint_symbol_13"
               OpMemberName %tint_symbol_15 0 "tint_symbol_14"
               OpName %tint_symbol_15 "tint_symbol_15"
               OpMemberName %tint_symbol_17 0 "tint_symbol_16"
               OpName %tint_symbol_17 "tint_symbol_17"
               OpMemberName %tint_symbol_19 0 "tint_symbol_18"
               OpName %tint_symbol_19 "tint_symbol_19"
               OpMemberName %PODArgs 0 "attn_score_scaling_factor"
               OpMemberName %PODArgs 1 "batch_size"
               OpMemberName %PODArgs 2 "causal"
               OpMemberName %PODArgs 3 "k_rope_pos_offset_elem_offset"
               OpMemberName %PODArgs 4 "length_info_elem_offset"
               OpMemberName %PODArgs 5 "max_num_pages"
               OpMemberName %PODArgs 6 "nnz_pages"
               OpMemberName %PODArgs 7 "page_indptr_elem_offset"
               OpMemberName %PODArgs 8 "page_values_elem_offset"
               OpMemberName %PODArgs 9 "q_indptr_elem_offset"
               OpMemberName %PODArgs 10 "q_rope_position_elem_offset"
               OpMemberName %PODArgs 11 "rope_scale"
               OpMemberName %PODArgs 12 "rope_theta"
               OpMemberName %PODArgs 13 "rotary_mode"
               OpMemberName %PODArgs 14 "total_len"
               OpMemberName %PODArgs 15 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_21 0 "tint_symbol_20"
               OpName %tint_symbol_21 "tint_symbol_21"
               OpName %m_smem "m_smem"
               OpName %d_smem "d_smem"
               OpName %Q_smem "Q_smem"
               OpName %K_smem "K_smem"
               OpName %V_smem "V_smem"
               OpName %m_prev_smem "m_prev_smem"
               OpName %batch_prefill_paged_kv_sliding_window_kernel_workgroup_id_Input "batch_prefill_paged_kv_sliding_window_kernel_workgroup_id_Input"
               OpName %batch_prefill_paged_kv_sliding_window_kernel_num_workgroups_Input "batch_prefill_paged_kv_sliding_window_kernel_num_workgroups_Input"
               OpName %batch_prefill_paged_kv_sliding_window_kernel_local_invocation_id_Input "batch_prefill_paged_kv_sliding_window_kernel_local_invocation_id_Input"
               OpName %batch_prefill_paged_kv_sliding_window_kernel_inner "batch_prefill_paged_kv_sliding_window_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %tile_id "tile_id"
               OpName %batch_idx "batch_idx"
               OpName %batch_rows "batch_rows"
               OpName %batch_tiles "batch_tiles"
               OpName %kv_chunk_len "kv_chunk_len"
               OpName %O_local "O_local"
               OpName %S_local "S_local"
               OpName %m_prev "m_prev"
               OpName %m_new "m_new"
               OpName %d_new "d_new"
               OpName %b_idx "b_idx"
               OpName %b_idx_1 "b_idx_1"
               OpName %LH_start "LH_start"
               OpName %q_indptr_val "q_indptr_val"
               OpName %cur_page_indptr_begin "cur_page_indptr_begin"
               OpName %cur_page_indptr_end "cur_page_indptr_end"
               OpName %condval "condval"
               OpName %li_1 "li_1"
               OpName %lj_1 "lj_1"
               OpName %li_lj_fused_0 "li_lj_fused_0"
               OpName %li_lj_fused_3_s "li_lj_fused_3_s"
               OpName %condval_1 "condval_1"
               OpName %condval_2 "condval_2"
     
// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize1_fused_NT_matmul_add_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv : array<u32>;
@group(0) @binding(2) var<storage, read> lv1 : array<f32>;
@group(0) @binding(3) var<storage, read> model_layers_0_self_attn_c_attn_bias4 : array<f32>;
@group(0) @binding(4) var<storage, read> rms_norm171 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize1_fused_NT_matmul_add_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 4>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 4>;
  var NT_matmul_intermediate_pad_local : array<f32, 4>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 2i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv1[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv1[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 2i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 2i) + 1i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm171[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 2i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 2i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.batch_size + 1i)>>1u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 2i) + ax0) < podArgs.batch_size)) {
        T_add[((((i32(blockIdx.y) * 9216i) + (ax0 * 4608i)) + (v__1 * 2i)) + ax1_fused_2)] = (NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)] + model_layers_0_self_attn_c_attn_bias4[((v__1 * 2i) + ax1_fused_2)]);
      }
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 67
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_reshape10_reshape11_kernel "fused_reshape10_reshape11_kernel" %fused_reshape10_reshape11_kernel_workgroup_id_Input %fused_reshape10_reshape11_kernel_num_workgroups_Input %fused_reshape10_reshape11_kernel_local_invocation_id_Input
               OpExecutionMode %fused_reshape10_reshape11_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %fused_reshape10_reshape11_kernel_workgroup_id_Input "fused_reshape10_reshape11_kernel_workgroup_id_Input"
               OpName %fused_reshape10_reshape11_kernel_num_workgroups_Input "fused_reshape10_reshape11_kernel_num_workgroups_Input"
               OpName %fused_reshape10_reshape11_kernel_local_invocation_id_Input "fused_reshape10_reshape11_kernel_local_invocation_id_Input"
               OpName %fused_reshape10_reshape11_kernel_inner "fused_reshape10_reshape11_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %fused_reshape10_reshape11_kernel "fused_reshape10_reshape11_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %fused_reshape10_reshape11_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_reshape10_reshape11_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_reshape10_reshape11_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%fused_reshape10_reshape11_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%fused_reshape10_reshape11_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%fused_reshape10_reshape11_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %24 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
       %bool = OpTypeBool
        %int = OpTypeInt 32 1
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
         %61 = OpTypeFunction %void
%fused_reshape10_reshape11_kernel_inner = OpFunction %void None %24
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %25 = OpLabel
         %26 = OpCompositeExtract %uint %blockIdx 2
         %27 = OpCompositeExtract %uint %gridDim 0
         %28 = OpIMul %uint %26 %27
         %29 = OpCompositeExtract %uint %blockIdx 0
         %30 = OpIAdd %uint %28 %29
         %31 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_0
         %34 = OpLoad %uint %31 None
         %35 = OpUGreaterThan %bool %30 %34
               OpSelectionMerge %37 None
               OpBranchConditional %35 %38 %37
         %38 = OpLabel
               OpReturn
         %37 = OpLabel
         %39 = OpCompositeExtract %uint %blockIdx 2
         %40 = OpCompositeExtract %uint %gridDim 0
         %41 = OpIMul %uint %39 %40
         %42 = OpCompositeExtract %uint %blockIdx 0
         %43 = OpIAdd %uint %41 %42
       %v__1 = OpBitcast %int %43
         %46 = OpIMul %int %v__1 %int_256
         %48 = OpCompositeExtract %uint %threadIdx 0
         %49 = OpBitcast %int %48
         %50 = OpIAdd %int %46 %49
         %51 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %50
         %53 = OpIMul %int %v__1 %int_256
         %54 = OpCompositeExtract %uint %threadIdx 0
         %55 = OpBitcast %int %54
         %56 = OpIAdd %int %53 %55
         %57 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %56
         %59 = OpLoad %float %57 None
               OpStore %51 %59 None
               OpReturn
               OpFunctionEnd
%fused_reshape10_reshape11_kernel = OpFunction %void None %61
         %62 = OpLabel
         %63 = OpLoad %v3uint %fused_reshape10_reshape11_kernel_workgroup_id_Input None
         %64 = OpLoad %v3uint %fused_reshape10_reshape11_kernel_num_workgroups_Input None
         %65 = OpLoad %v3uint %fused_reshape10_reshape11_kernel_local_invocation_id_Input None
         %66 = OpFunctionCall %void %fused_reshape10_reshape11_kernel_inner %63 %64 %65
               OpReturn
               OpFunctionEnd

/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 68
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %reshape4_kernel "reshape4_kernel" %reshape4_kernel_workgroup_id_Input %reshape4_kernel_num_workgroups_Input %reshape4_kernel_local_invocation_id_Input
               OpExecutionMode %reshape4_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %reshape4_kernel_workgroup_id_Input "reshape4_kernel_workgroup_id_Input"
               OpName %reshape4_kernel_num_workgroups_Input "reshape4_kernel_num_workgroups_Input"
               OpName %reshape4_kernel_local_invocation_id_Input "reshape4_kernel_local_invocation_id_Input"
               OpName %reshape4_kernel_inner "reshape4_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %reshape4_kernel "reshape4_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %reshape4_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %reshape4_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %reshape4_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%reshape4_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%reshape4_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%reshape4_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %25 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
         %62 = OpTypeFunction %void
%reshape4_kernel_inner = OpFunction %void None %25
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %26 = OpLabel
         %27 = OpCompositeExtract %uint %blockIdx 2
         %28 = OpCompositeExtract %uint %gridDim 0
         %29 = OpIMul %uint %27 %28
         %30 = OpCompositeExtract %uint %blockIdx 0
         %31 = OpIAdd %uint %29 %30
         %32 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_1
         %36 = OpLoad %uint %32 None
         %37 = OpUGreaterThan %bool %31 %36
               OpSelectionMerge %39 None
               OpBranchConditional %37 %40 %39
         %40 = OpLabel
               OpReturn
         %39 = OpLabel
         %41 = OpCompositeExtract %uint %blockIdx 2
         %42 = OpCompositeExtract %uint %gridDim 0
         %43 = OpIMul %uint %41 %42
         %44 = OpCompositeExtract %uint %blockIdx 0
         %45 = OpIAdd %uint %43 %44
       %v__1 = OpBitcast %int %45
         %47 = OpIMul %int %v__1 %int_256
         %49 = OpCompositeExtract %uint %threadIdx 0
         %50 = OpBitcast %int %49
         %51 = OpIAdd %int %47 %50
         %52 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %51
         %54 = OpIMul %int %v__1 %int_256
         %55 = OpCompositeExtract %uint %threadIdx 0
         %56 = OpBitcast %int %55
         %57 = OpIAdd %int %54 %56
         %58 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %57
         %60 = OpLoad %float %58 None
               OpStore %52 %60 None
               OpReturn
               OpFunctionEnd
%reshape4_kernel = OpFunction %void None %62
         %63 = OpLabel
         %64 = OpLoad %v3uint %reshape4_kernel_workgroup_id_Input None
         %65 = OpLoad %v3uint %reshape4_kernel_num_workgroups_Input None
         %66 = OpLoad %v3uint %reshape4_kernel_local_invocation_id_Input None
         %67 = OpFunctionCall %void %reshape4_kernel_inner %64 %65 %66
               OpReturn
               OpFunctionEnd

// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> input_embeds : array<f32>;
@group(0) @binding(2) var<storage, read> lv454 : array<u32>;
@group(0) @binding(3) var<storage, read> lv455 : array<f32>;
@group(0) @binding(4) var<storage, read> reshape227 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> reshape227_reindex_pad_shared : array<f32, 256>;
var<workgroup> dequantize_reindex_shared : array<f32, 256>;
@compute @workgroup_size(8, 8, 1)
fn fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_reindex_pad_local : array<f32, 16>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var var_1 : i32 = 0; var_1 < 1i; var_1++) {
    NT_matmul_intermediate_reindex_pad_local[0i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[1i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[2i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[3i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[4i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[5i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[6i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[7i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[8i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[9i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[10i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[11i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[12i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[13i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[14i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[15i] = 0.000000e+00f;
    for (var ax3_0 : i32 = 0; ax3_0 < 448i; ax3_0++) {
      workgroupBarrier();
      if ((((v__1 * 32i) + (i32(threadIdx.y) * 4i)) + (i32(threadIdx.x)>>1u)) < podArgs.seq_len) {
        reshape227_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = reshape227[(((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i))];
        reshape227_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = reshape227[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 1i)];
        reshape227_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = reshape227[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 2i)];
        reshape227_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = reshape227[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 3i)];
      } else {
        reshape227_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = 0.000000e+00f;
        reshape227_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = 0.000000e+00f;
        reshape227_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = 0.000000e+00f;
        reshape227_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = 0.000000e+00f;
      }
      dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = ((f32(((lv454[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32(((i32(threadIdx.x) & 1i) * 16i))) & 15u)) - 7.000000e+00f) * lv455[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = ((f32(((lv454[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 4i))) & 15u)) - 7.000000e+00f) * lv455[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = ((f32(((lv454[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 8i))) & 15u)) - 7.000000e+00f) * lv455[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = ((f32(((lv454[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 12i))) & 15u)) - 7.000000e+00f) * lv455[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      workgroupBarrier();
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape227_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape227_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape227_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape227_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[15i]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      T_add[((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))] = (NT_matmul_intermediate_reindex_pad_local[0i] + input_embeds[((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)] = (NT_matmul_intermediate_reindex_pad_local[1i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)] = (NT_matmul_intermediate_reindex_pad_local[2i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)] = (NT_matmul_intermediate_reindex_pad_local[3i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3584i)] = (NT_matmul_intermediate_reindex_pad_local[4i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3584i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3585i)] = (NT_matmul_intermediate_reindex_pad_local[5i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3585i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3586i)] = (NT_matmul_intermediate_reindex_pad_local[6i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3586i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3587i)] = (NT_matmul_intermediate_reindex_pad_local[7i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3587i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7168i)] = (NT_matmul_intermediate_reindex_pad_local[8i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7168i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7169i)] = (NT_matmul_intermediate_reindex_pad_local[9i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7169i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7170i)] = (NT_matmul_intermediate_reindex_pad_local[10i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7170i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7171i)] = (NT_matmul_intermediate_reindex_pad_local[11i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7171i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10752i)] = (NT_matmul_intermediate_reindex_pad_local[12i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10752i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10753i)] = (NT_matmul_intermediate_reindex_pad_local[13i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10753i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10754i)] = (NT_matmul_intermediate_reindex_pad_local[14i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10754i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10755i)] = (NT_matmul_intermediate_reindex_pad_local[15i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10755i)]);
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 390
; Schema: 0
               OpCapability Shader
        %105 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %merge_state_inplace_kernel "merge_state_inplace_kernel" %merge_state_inplace_kernel_workgroup_id_Input %merge_state_inplace_kernel_num_workgroups_Input %merge_state_inplace_kernel_local_invocation_id_Input
               OpExecutionMode %merge_state_inplace_kernel LocalSize 32 7 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "D"
               OpMemberName %PODArgs 1 "H"
               OpMemberName %PODArgs 2 "N"
               OpMemberName %PODArgs 3 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %merge_state_inplace_kernel_workgroup_id_Input "merge_state_inplace_kernel_workgroup_id_Input"
               OpName %merge_state_inplace_kernel_num_workgroups_Input "merge_state_inplace_kernel_num_workgroups_Input"
               OpName %merge_state_inplace_kernel_local_invocation_id_Input "merge_state_inplace_kernel_local_invocation_id_Input"
               OpName %merge_state_inplace_kernel_inner "merge_state_inplace_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %s_val "s_val"
               OpName %s_other_val "s_other_val"
               OpName %s_max "s_max"
               OpName %scale "scale"
               OpName %other_scale "other_scale"
               OpName %v_vec "v_vec"
               OpName %v_other_vec "v_other_vec"
               OpName %v__2 "v__2"
               OpName %vec "vec"
               OpName %merge_state_inplace_kernel "merge_state_inplace_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 Coherent
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %12 DescriptorSet 0
               OpDecorate %12 Binding 3
               OpDecorate %12 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %PODArgs 2 Offset 8
               OpMemberDecorate %PODArgs 3 Offset 12
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %15 DescriptorSet 0
               OpDecorate %15 Binding 4
               OpDecorate %15 NonWritable
               OpDecorate %merge_state_inplace_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %merge_state_inplace_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %merge_state_inplace_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_1 ArrayStride 4
               OpDecorate %_arr_float_uint_4 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
          %9 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
%tint_symbol_7 = OpTypeStruct %_runtimearr_float
%_pt
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1603
; Schema: 0
               OpCapability Shader
        %103 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel" %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_workgroup_id_Input %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_num_workgroups_Input %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_workgroup_id_Input "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_num_workgroups_Input "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_local_invocation_id_Input "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_inner "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_workgroup_id_I
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1600
; Schema: 0
               OpCapability Shader
        %103 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel" %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_workgroup_id_Input %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_num_workgroups_Input %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_workgroup_id_Input "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_num_workgroups_Input "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_local_invocation_id_Input "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_inner "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_workgroup_id_I
// Dumped WGSL:
//----------------------------------------
// Function: reshape3_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_reshape : array<f32>;
@group(0) @binding(1) var<storage, read> reshape338 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn reshape3_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_reshape[((v__1 * 256i) + i32(threadIdx.x))] = reshape338[((v__1 * 256i) + i32(threadIdx.x))];
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv460 : array<u32>;
@group(0) @binding(2) var<storage, read> lv461 : array<f32>;
@group(0) @binding(3) var<storage, read> lv791 : array<f32>;
@group(0) @binding(4) var<storage, read> lv792 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> lv792_reindex_pad_shared : array<f32, 256>;
var<workgroup> dequantize_reindex_shared : array<f32, 256>;
@compute @workgroup_size(8, 8, 1)
fn fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_reindex_pad_local : array<f32, 16>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var var_1 : i32 = 0; var_1 < 1i; var_1++) {
    NT_matmul_intermediate_reindex_pad_local[0i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[1i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[2i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[3i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[4i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[5i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[6i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[7i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[8i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[9i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[10i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[11i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[12i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[13i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[14i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[15i] = 0.000000e+00f;
    for (var ax3_0 : i32 = 0; ax3_0 < 2368i; ax3_0++) {
      workgroupBarrier();
      if ((((v__1 * 32i) + (i32(threadIdx.y) * 4i)) + (i32(threadIdx.x)>>1u)) < podArgs.seq_len) {
        lv792_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = lv792[(((((v__1 * 606208i) + (i32(threadIdx.y) * 75776i)) + ((i32(threadIdx.x)>>1u) * 18944i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i))];
        lv792_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = lv792[((((((v__1 * 606208i) + (i32(threadIdx.y) * 75776i)) + ((i32(threadIdx.x)>>1u) * 18944i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 1i)];
        lv792_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = lv792[((((((v__1 * 606208i) + (i32(threadIdx.y) * 75776i)) + ((i32(threadIdx.x)>>1u) * 18944i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 2i)];
        lv792_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = lv792[((((((v__1 * 606208i) + (i32(threadIdx.y) * 75776i)) + ((i32(threadIdx.x)>>1u) * 18944i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 3i)];
      } else {
        lv792_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = 0.000000e+00f;
        lv792_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = 0.000000e+00f;
        lv792_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = 0.000000e+00f;
        lv792_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = 0.000000e+00f;
      }
      dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = ((f32(((lv460[((((i32(blockIdx.y) * 75776i) + (i32(threadIdx.y) * 9472i)) + ((i32(threadIdx.x)>>1u) * 2368i)) + ax3_0)]>>u32(((i32(threadIdx.x) & 1i) * 16i))) & 15u)) - 7.000000e+00f) * lv461[((((i32(blockIdx.y) * 18944i) + (i32(threadIdx.y) * 2368i)) + ((i32(threadIdx.x)>>1u) * 592i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = ((f32(((lv460[((((i32(blockIdx.y) * 75776i) + (i32(threadIdx.y) * 9472i)) + ((i32(threadIdx.x)>>1u) * 2368i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 4i))) & 15u)) - 7.000000e+00f) * lv461[((((i32(blockIdx.y) * 18944i) + (i32(threadIdx.y) * 2368i)) + ((i32(threadIdx.x)>>1u) * 592i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = ((f32(((lv460[((((i32(blockIdx.y) * 75776i) + (i32(threadIdx.y) * 9472i)) + ((i32(threadIdx.x)>>1u) * 2368i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 8i))) & 15u)) - 7.000000e+00f) * lv461[((((i32(blockIdx.y) * 18944i) + (i32(threadIdx.y) * 2368i)) + ((i32(threadIdx.x)>>1u) * 592i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = ((f32(((lv460[((((i32(blockIdx.y) * 75776i) + (i32(threadIdx.y) * 9472i)) + ((i32(threadIdx.x)>>1u) * 2368i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 12i))) & 15u)) - 7.000000e+00f) * lv461[((((i32(blockIdx.y) * 18944i) + (i32(threadIdx.y) * 2368i)) + ((i32(threadIdx.x)>>1u) * 592i)) + (ax3_0>>2u))]);
      workgroupBarrier();
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv792_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv792_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv792_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv792_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(lv792_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[15i]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      T_add[((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))] = (NT_matmul_intermediate_reindex_pad_local[0i] + lv791[((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)] = (NT_matmul_intermediate_reindex_pad_local[1i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)] = (NT_matmul_intermediate_reindex_pad_local[2i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)] = (NT_matmul_intermediate_reindex_pad_local[3i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3584i)] = (NT_matmul_intermediate_reindex_pad_local[4i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3584i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3585i)] = (NT_matmul_intermediate_reindex_pad_local[5i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3585i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3586i)] = (NT_matmul_intermediate_reindex_pad_local[6i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3586i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3587i)] = (NT_matmul_intermediate_reindex_pad_local[7i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3587i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7168i)] = (NT_matmul_intermediate_reindex_pad_local[8i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7168i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7169i)] = (NT_matmul_intermediate_reindex_pad_local[9i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7169i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7170i)] = (NT_matmul_intermediate_reindex_pad_local[10i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7170i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7171i)] = (NT_matmul_intermediate_reindex_pad_local[11i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7171i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10752i)] = (NT_matmul_intermediate_reindex_pad_local[12i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10752i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10753i)] = (NT_matmul_intermediate_reindex_pad_local[13i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10753i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10754i)] = (NT_matmul_intermediate_reindex_pad_local[14i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10754i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.seq_len) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10755i)] = (NT_matmul_intermediate_reindex_pad_local[15i] + lv791[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10755i)]);
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 68
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %reshape3_kernel "reshape3_kernel" %reshape3_kernel_workgroup_id_Input %reshape3_kernel_num_workgroups_Input %reshape3_kernel_local_invocation_id_Input
               OpExecutionMode %reshape3_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %reshape3_kernel_workgroup_id_Input "reshape3_kernel_workgroup_id_Input"
               OpName %reshape3_kernel_num_workgroups_Input "reshape3_kernel_num_workgroups_Input"
               OpName %reshape3_kernel_local_invocation_id_Input "reshape3_kernel_local_invocation_id_Input"
               OpName %reshape3_kernel_inner "reshape3_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %reshape3_kernel "reshape3_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %reshape3_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %reshape3_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %reshape3_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%reshape3_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%reshape3_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%reshape3_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %25 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
         %62 = OpTypeFunction %void
%reshape3_kernel_inner = OpFunction %void None %25
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %26 = OpLabel
         %27 = OpCompositeExtract %uint %blockIdx 2
         %28 = OpCompositeExtract %uint %gridDim 0
         %29 = OpIMul %uint %27 %28
         %30 = OpCompositeExtract %uint %blockIdx 0
         %31 = OpIAdd %uint %29 %30
         %32 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_1
         %36 = OpLoad %uint %32 None
         %37 = OpUGreaterThan %bool %31 %36
               OpSelectionMerge %39 None
               OpBranchConditional %37 %40 %39
         %40 = OpLabel
               OpReturn
         %39 = OpLabel
         %41 = OpCompositeExtract %uint %blockIdx 2
         %42 = OpCompositeExtract %uint %gridDim 0
         %43 = OpIMul %uint %41 %42
         %44 = OpCompositeExtract %uint %blockIdx 0
         %45 = OpIAdd %uint %43 %44
       %v__1 = OpBitcast %int %45
         %47 = OpIMul %int %v__1 %int_256
         %49 = OpCompositeExtract %uint %threadIdx 0
         %50 = OpBitcast %int %49
         %51 = OpIAdd %int %47 %50
         %52 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %51
         %54 = OpIMul %int %v__1 %int_256
         %55 = OpCompositeExtract %uint %threadIdx 0
         %56 = OpBitcast %int %55
         %57 = OpIAdd %int %54 %56
         %58 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %57
         %60 = OpLoad %float %58 None
               OpStore %52 %60 None
               OpReturn
               OpFunctionEnd
%reshape3_kernel = OpFunction %void None %62
         %63 = OpLabel
         %64 = OpLoad %v3uint %reshape3_kernel_workgroup_id_Input None
         %65 = OpLoad %v3uint %reshape3_kernel_num_workgroups_Input None
         %66 = OpLoad %v3uint %reshape3_kernel_local_invocation_id_Input None
         %67 = OpFunctionCall %void %reshape3_kernel_inner %64 %65 %66
               OpReturn
               OpFunctionEnd

// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize1_fused_NT_matmul_add_kernel_2
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv : array<u32>;
@group(0) @binding(2) var<storage, read> lv1 : array<f32>;
@group(0) @binding(3) var<storage, read> model_layers_0_self_attn_c_attn_bias4 : array<f32>;
@group(0) @binding(4) var<storage, read> rms_norm171 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> rms_norm171_reindex_pad_shared : array<f32, 256>;
var<workgroup> dequantize_reindex_shared : array<f32, 256>;
@compute @workgroup_size(8, 8, 1)
fn fused_fused_dequantize1_fused_NT_matmul_add_kernel_2(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_reindex_pad_local : array<f32, 16>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var var_1 : i32 = 0; var_1 < 1i; var_1++) {
    NT_matmul_intermediate_reindex_pad_local[0i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[1i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[2i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[3i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[4i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[5i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[6i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[7i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[8i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[9i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[10i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[11i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[12i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[13i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[14i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[15i] = 0.000000e+00f;
    for (var ax3_0 : i32 = 0; ax3_0 < 448i; ax3_0++) {
      workgroupBarrier();
      if ((((v__1 * 32i) + (i32(threadIdx.y) * 4i)) + (i32(threadIdx.x)>>1u)) < podArgs.batch_size) {
        rms_norm171_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = rms_norm171[(((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i))];
        rms_norm171_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = rms_norm171[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 1i)];
        rms_norm171_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = rms_norm171[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 2i)];
        rms_norm171_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = rms_norm171[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 3i)];
      } else {
        rms_norm171_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = 0.000000e+00f;
        rms_norm171_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = 0.000000e+00f;
        rms_norm171_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = 0.000000e+00f;
        rms_norm171_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = 0.000000e+00f;
      }
      dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = ((f32(((lv[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32(((i32(threadIdx.x) & 1i) * 16i))) & 15u)) - 7.000000e+00f) * lv1[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = ((f32(((lv[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 4i))) & 15u)) - 7.000000e+00f) * lv1[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = ((f32(((lv[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 8i))) & 15u)) - 7.000000e+00f) * lv1[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = ((f32(((lv[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 12i))) & 15u)) - 7.000000e+00f) * lv1[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      workgroupBarrier();
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm171_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm171_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm171_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm171_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm171_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[15i]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      T_add[((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))] = (NT_matmul_intermediate_reindex_pad_local[0i] + model_layers_0_self_attn_c_attn_bias4[((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i))]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)] = (NT_matmul_intermediate_reindex_pad_local[1i] + model_layers_0_self_attn_c_attn_bias4[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 1i)]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)] = (NT_matmul_intermediate_reindex_pad_local[2i] + model_layers_0_self_attn_c_attn_bias4[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 2i)]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)] = (NT_matmul_intermediate_reindex_pad_local[3i] + model_layers_0_self_attn_c_attn_bias4[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 3i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 4608i)] = (NT_matmul_intermediate_reindex_pad_local[4i] + model_layers_0_self_attn_c_attn_bias4[((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i))]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 4609i)] = (NT_matmul_intermediate_reindex_pad_local[5i] + model_layers_0_self_attn_c_attn_bias4[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 1i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 4610i)] = (NT_matmul_intermediate_reindex_pad_local[6i] + model_layers_0_self_attn_c_attn_bias4[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 2i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 4611i)] = (NT_matmul_intermediate_reindex_pad_local[7i] + model_layers_0_self_attn_c_attn_bias4[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 3i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 9216i)] = (NT_matmul_intermediate_reindex_pad_local[8i] + model_layers_0_self_attn_c_attn_bias4[((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i))]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 9217i)] = (NT_matmul_intermediate_reindex_pad_local[9i] + model_layers_0_self_attn_c_attn_bias4[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 1i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 9218i)] = (NT_matmul_intermediate_reindex_pad_local[10i] + model_layers_0_self_attn_c_attn_bias4[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 2i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 9219i)] = (NT_matmul_intermediate_reindex_pad_local[11i] + model_layers_0_self_attn_c_attn_bias4[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 3i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 13824i)] = (NT_matmul_intermediate_reindex_pad_local[12i] + model_layers_0_self_attn_c_attn_bias4[((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i))]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 13825i)] = (NT_matmul_intermediate_reindex_pad_local[13i] + model_layers_0_self_attn_c_attn_bias4[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 1i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 13826i)] = (NT_matmul_intermediate_reindex_pad_local[14i] + model_layers_0_self_attn_c_attn_bias4[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 2i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      T_add[(((((v__1 * 147456i) + (i32(threadIdx.x) * 18432i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 13827i)] = (NT_matmul_intermediate_reindex_pad_local[15i] + model_layers_0_self_attn_c_attn_bias4[(((i32(blockIdx.y) * 32i) + (i32(threadIdx.y) * 4i)) + 3i)]);
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2293
; Schema: 0
               OpCapability Shader
        %104 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize1_fused_NT_matmul_add_kernel_1 "fused_fused_dequantize1_fused_NT_matmul_add_kernel_1" %fused_fused_dequantize1_fused_NT_matmul_add_kernel_1_workgroup_id_Input %fused_fused_dequantize1_fused_NT_matmul_add_kernel_1_num_workgroups_Input %fused_fused_dequantize1_fused_NT_matmul_add_kernel_1_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize1_fused_NT_matmul_add_kernel_1 LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_1_workgroup_id_Input "fused_fused_dequantize1_fused_NT_matmul_add_kernel_1_workgroup_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_1_num_workgroups_Input "fused_fused_dequantize1_fused_NT_matmul_add_kernel_1_num_workgroups_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_1_local_invocation_id_Input "fused_fused_dequantize1_fused_NT_matmul_add_kernel_1_local_invocation_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_1_inner "fused_fused_dequantize1_fused_NT_matmul_add_kernel_1_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_1 "fused_fused_dequantize1_fused_NT_matmul_add_kernel_1"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize1_fused_NT_matmul_add_kernel_1_workgroup_i
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1595
; Schema: 0
               OpCapability Shader
        %103 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize1_fused_NT_matmul_add_kernel "fused_fused_dequantize1_fused_NT_matmul_add_kernel" %fused_fused_dequantize1_fused_NT_matmul_add_kernel_workgroup_id_Input %fused_fused_dequantize1_fused_NT_matmul_add_kernel_num_workgroups_Input %fused_fused_dequantize1_fused_NT_matmul_add_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize1_fused_NT_matmul_add_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_workgroup_id_Input "fused_fused_dequantize1_fused_NT_matmul_add_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_num_workgroups_Input "fused_fused_dequantize1_fused_NT_matmul_add_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_local_invocation_id_Input "fused_fused_dequantize1_fused_NT_matmul_add_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_inner "fused_fused_dequantize1_fused_NT_matmul_add_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel "fused_fused_dequantize1_fused_NT_matmul_add_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize1_fused_NT_matmul_add_kernel_workgroup_id_Input BuiltIn WorkgroupId
      
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 3612
; Schema: 0
               OpCapability Shader
        %152 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize3_NT_matmul2_kernel_2 "fused_fused_dequantize3_NT_matmul2_kernel_2" %fused_fused_dequantize3_NT_matmul2_kernel_2_workgroup_id_Input %fused_fused_dequantize3_NT_matmul2_kernel_2_num_workgroups_Input %fused_fused_dequantize3_NT_matmul2_kernel_2_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize3_NT_matmul2_kernel_2 LocalSize 8 8 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %rms_norm172_reindex_pad_shared "rms_norm172_reindex_pad_shared"
               OpName %dequantize_reindex_shared "dequantize_reindex_shared"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_2_workgroup_id_Input "fused_fused_dequantize3_NT_matmul2_kernel_2_workgroup_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_2_num_workgroups_Input "fused_fused_dequantize3_NT_matmul2_kernel_2_num_workgroups_Input"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_2_local_invocation_id_Input "fused_fused_dequantize3_NT_matmul2_kernel_2_local_invocation_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_2_inner "fused_fused_dequantize3_NT_matmul2_kernel_2_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_reindex_pad_local "NT_matmul_intermediate_reindex_pad_local"
               OpName %v__1 "v__1"
               OpName %var_1 "var_1"
               OpName %ax3_0 "ax3_0"
               OpName %fused_fused_dequantize3_NT_matmul2_kernel_2 "fused_fused_dequantize3_NT_matmul2_kernel_2"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_256 ArrayStride 4
               OpDecorate %fused_fused_dequantize3_NT_matmul2_kernel_2_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize3_NT_matmul2_kernel_2_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize3_NT_matmul2_kernel_2_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
       %uint = OpTypeInt 32 0
%_runtimearr_uint = OpTypeRuntimeArray %uint
%tint_symbol_3 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 Stora
// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> input_embeds : array<f32>;
@group(0) @binding(2) var<storage, read> lv3 : array<u32>;
@group(0) @binding(3) var<storage, read> lv4 : array<f32>;
@group(0) @binding(4) var<storage, read> reshape339 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 8>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 8>;
  var NT_matmul_intermediate_pad_local : array<f32, 8>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 4i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv3[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv4[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv3[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv4[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 4i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[(((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 4i) + 1i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
    if (((i32(blockIdx.y) * 4i) + 2i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7168i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7169i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7170i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7171i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7172i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7173i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7174i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7175i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[5i]);
    }
    if (((i32(blockIdx.y) * 4i) + 3i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10752i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10753i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10754i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10755i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10756i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10757i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10758i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(reshape339[((((i32(blockIdx.y) * 14336i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 10759i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[7i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 4i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 4i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.batch_size + 3i)>>2u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 4i) + ax0) < podArgs.batch_size)) {
        T_add[((((i32(blockIdx.y) * 14336i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)] = (NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)] + input_embeds[((((i32(blockIdx.y) * 14336i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)]);
      }
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize_NT_matmul9_kernel_2
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv787 : array<u32>;
@group(0) @binding(2) var<storage, read> lv788 : array<f32>;
@group(0) @binding(3) var<storage, read> take1 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> take1_reindex_pad_shared : array<f32, 256>;
var<workgroup> dequantize_reindex_shared : array<f32, 256>;
@compute @workgroup_size(8, 8, 1)
fn fused_fused_dequantize_NT_matmul9_kernel_2(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_reindex_pad_local : array<f32, 16>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var var_1 : i32 = 0; var_1 < 1i; var_1++) {
    NT_matmul_intermediate_reindex_pad_local[0i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[1i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[2i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[3i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[4i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[5i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[6i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[7i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[8i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[9i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[10i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[11i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[12i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[13i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[14i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[15i] = 0.000000e+00f;
    for (var ax3_0 : i32 = 0; ax3_0 < 448i; ax3_0++) {
      workgroupBarrier();
      if ((((v__1 * 32i) + (i32(threadIdx.y) * 4i)) + (i32(threadIdx.x)>>1u)) < podArgs.batch_size) {
        take1_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = take1[(((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i))];
        take1_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = take1[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 1i)];
        take1_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = take1[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 2i)];
        take1_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = take1[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 3i)];
      } else {
        take1_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = 0.000000e+00f;
        take1_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = 0.000000e+00f;
        take1_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = 0.000000e+00f;
        take1_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = 0.000000e+00f;
      }
      dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = ((f32(((lv787[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32(((i32(threadIdx.x) & 1i) * 16i))) & 15u)) - 7.000000e+00f) * lv788[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = ((f32(((lv787[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 4i))) & 15u)) - 7.000000e+00f) * lv788[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = ((f32(((lv787[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 8i))) & 15u)) - 7.000000e+00f) * lv788[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = ((f32(((lv787[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 12i))) & 15u)) - 7.000000e+00f) * lv788[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      workgroupBarrier();
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(take1_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(take1_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(take1_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(take1_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(take1_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[15i]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      NT_matmul[((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))] = NT_matmul_intermediate_reindex_pad_local[0i];
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)] = NT_matmul_intermediate_reindex_pad_local[1i];
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)] = NT_matmul_intermediate_reindex_pad_local[2i];
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)] = NT_matmul_intermediate_reindex_pad_local[3i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 152064i)] = NT_matmul_intermediate_reindex_pad_local[4i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 152065i)] = NT_matmul_intermediate_reindex_pad_local[5i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 152066i)] = NT_matmul_intermediate_reindex_pad_local[6i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 152067i)] = NT_matmul_intermediate_reindex_pad_local[7i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 304128i)] = NT_matmul_intermediate_reindex_pad_local[8i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 304129i)] = NT_matmul_intermediate_reindex_pad_local[9i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 304130i)] = NT_matmul_intermediate_reindex_pad_local[10i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 304131i)] = NT_matmul_intermediate_reindex_pad_local[11i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 456192i)] = NT_matmul_intermediate_reindex_pad_local[12i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 456193i)] = NT_matmul_intermediate_reindex_pad_local[13i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 456194i)] = NT_matmul_intermediate_reindex_pad_local[14i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 456195i)] = NT_matmul_intermediate_reindex_pad_local[15i];
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize_NT_matmul4_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv336 : array<u32>;
@group(0) @binding(2) var<storage, read> lv337 : array<f32>;
@group(0) @binding(3) var<storage, read> rms_norm227 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize_NT_matmul4_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 4>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 4>;
  var NT_matmul_intermediate_pad_local : array<f32, 4>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 2i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv336[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv337[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv336[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv337[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 2i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 2i) + 1i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 2i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 2i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.batch_size + 1i)>>1u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 2i) + ax0) < podArgs.batch_size)) {
        NT_matmul[((((i32(blockIdx.y) * 304128i) + (ax0 * 152064i)) + (v__1 * 2i)) + ax1_fused_2)] = NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)];
      }
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_reshape8_reshape9_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_reshape : array<f32>;
@group(0) @binding(1) var<storage, read> add84 : array<f32>;

struct PODArgs {
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn fused_reshape8_reshape9_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_reshape[((v__1 * 256i) + i32(threadIdx.x))] = add84[((v__1 * 256i) + i32(threadIdx.x))];
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize1_fused_NT_matmul10_add4_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv1353 : array<u32>;
@group(0) @binding(2) var<storage, read> lv1354 : array<f32>;
@group(0) @binding(3) var<storage, read> model_layers_0_self_attn_c_attn_bias2 : array<f32>;
@group(0) @binding(4) var<storage, read> rms_norm57 : array<f32>;

struct PODArgs {
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize1_fused_NT_matmul10_add4_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var NT_matmul_rf_local : array<f32, 1>;
  var lv1353_local : array<u32, 1>;
  var NT_matmul_rf_local_1 : array<f32, 1>;
  NT_matmul_rf_local[0i] = 0.000000e+00f;
  lv1353_local[0i] = lv1353[((v__1 * 448i) + i32(threadIdx.x))];
  NT_matmul_rf_local[0i] = fma(rms_norm57[(i32(threadIdx.x) * 8i)], ((f32(((lv1353_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1354[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1i)], ((f32(((lv1353_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1354[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2i)], ((f32(((lv1353_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1354[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 3i)], ((f32(((lv1353_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1354[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 4i)], ((f32(((lv1353_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1354[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 5i)], ((f32(((lv1353_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1354[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 6i)], ((f32(((lv1353_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1354[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 7i)], ((f32(((lv1353_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1354[((v__1 * 112i) + (i32(threadIdx.x)>>2u))]), NT_matmul_rf_local[0i]);
  lv1353_local[0i] = lv1353[(((v__1 * 448i) + i32(threadIdx.x)) + 64i)];
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 512i)], ((f32(((lv1353_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 513i)], ((f32(((lv1353_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 514i)], ((f32(((lv1353_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 515i)], ((f32(((lv1353_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 516i)], ((f32(((lv1353_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 517i)], ((f32(((lv1353_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 518i)], ((f32(((lv1353_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 519i)], ((f32(((lv1353_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 16i)]), NT_matmul_rf_local[0i]);
  lv1353_local[0i] = lv1353[(((v__1 * 448i) + i32(threadIdx.x)) + 128i)];
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1024i)], ((f32(((lv1353_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1025i)], ((f32(((lv1353_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1026i)], ((f32(((lv1353_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1027i)], ((f32(((lv1353_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1028i)], ((f32(((lv1353_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1029i)], ((f32(((lv1353_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1030i)], ((f32(((lv1353_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1031i)], ((f32(((lv1353_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 32i)]), NT_matmul_rf_local[0i]);
  lv1353_local[0i] = lv1353[(((v__1 * 448i) + i32(threadIdx.x)) + 192i)];
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1536i)], ((f32(((lv1353_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1537i)], ((f32(((lv1353_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1538i)], ((f32(((lv1353_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1539i)], ((f32(((lv1353_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1540i)], ((f32(((lv1353_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1541i)], ((f32(((lv1353_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1542i)], ((f32(((lv1353_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 1543i)], ((f32(((lv1353_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 48i)]), NT_matmul_rf_local[0i]);
  lv1353_local[0i] = lv1353[(((v__1 * 448i) + i32(threadIdx.x)) + 256i)];
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2048i)], ((f32(((lv1353_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2049i)], ((f32(((lv1353_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2050i)], ((f32(((lv1353_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2051i)], ((f32(((lv1353_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2052i)], ((f32(((lv1353_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2053i)], ((f32(((lv1353_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2054i)], ((f32(((lv1353_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2055i)], ((f32(((lv1353_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 64i)]), NT_matmul_rf_local[0i]);
  lv1353_local[0i] = lv1353[(((v__1 * 448i) + i32(threadIdx.x)) + 320i)];
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2560i)], ((f32(((lv1353_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2561i)], ((f32(((lv1353_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2562i)], ((f32(((lv1353_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2563i)], ((f32(((lv1353_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2564i)], ((f32(((lv1353_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2565i)], ((f32(((lv1353_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2566i)], ((f32(((lv1353_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 2567i)], ((f32(((lv1353_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 80i)]), NT_matmul_rf_local[0i]);
  lv1353_local[0i] = lv1353[(((v__1 * 448i) + i32(threadIdx.x)) + 384i)];
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 3072i)], ((f32(((lv1353_local[0i]>>0u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 3073i)], ((f32(((lv1353_local[0i]>>4u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 3074i)], ((f32(((lv1353_local[0i]>>8u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 3075i)], ((f32(((lv1353_local[0i]>>12u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 3076i)], ((f32(((lv1353_local[0i]>>16u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 3077i)], ((f32(((lv1353_local[0i]>>20u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 3078i)], ((f32(((lv1353_local[0i]>>24u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local[0i] = fma(rms_norm57[((i32(threadIdx.x) * 8i) + 3079i)], ((f32(((lv1353_local[0i]>>28u) & 15u)) - 7.000000e+00f) * lv1354[(((v__1 * 112i) + (i32(threadIdx.x)>>2u)) + 96i)]), NT_matmul_rf_local[0i]);
  NT_matmul_rf_local_1[0i] = 0.000000e+00f;
  NT_matmul_rf_local_1[0i] = (NT_matmul_rf_local_1[0i] + NT_matmul_rf_local[0i]);
  workgroupBarrier();
  red_buf0[i32(threadIdx.x)] = NT_matmul_rf_local_1[0i];
  workgroupBarrier();
  if (i32(threadIdx.x) < 32i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 16i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 8i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 4i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 2i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 1i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) == 0i) {
    T_add[v__1] = (red_buf0[0i] + model_layers_0_self_attn_c_attn_bias2[v__1]);
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 3883
; Schema: 0
               OpCapability Shader
        %155 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2 "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2" %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_workgroup_id_Input %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_num_workgroups_Input %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2 LocalSize 8 8 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %reshape227_reindex_pad_shared "reshape227_reindex_pad_shared"
               OpName %dequantize_reindex_shared "dequantize_reindex_shared"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_workgroup_id_Input "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_workgroup_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_num_workgroups_Input "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_num_workgroups_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_local_invocation_id_Input "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_local_invocation_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_inner "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_reindex_pad_local "NT_matmul_intermediate_reindex_pad_local"
               OpName %v__1 "v__1"
               OpName %var_1 "var_1"
               OpName %ax3_0 "ax3_0"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2 "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_256 ArrayStride 4
               OpDecorate %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_2_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_16 ArrayS
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 67
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_reshape8_reshape9_kernel "fused_reshape8_reshape9_kernel" %fused_reshape8_reshape9_kernel_workgroup_id_Input %fused_reshape8_reshape9_kernel_num_workgroups_Input %fused_reshape8_reshape9_kernel_local_invocation_id_Input
               OpExecutionMode %fused_reshape8_reshape9_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %fused_reshape8_reshape9_kernel_workgroup_id_Input "fused_reshape8_reshape9_kernel_workgroup_id_Input"
               OpName %fused_reshape8_reshape9_kernel_num_workgroups_Input "fused_reshape8_reshape9_kernel_num_workgroups_Input"
               OpName %fused_reshape8_reshape9_kernel_local_invocation_id_Input "fused_reshape8_reshape9_kernel_local_invocation_id_Input"
               OpName %fused_reshape8_reshape9_kernel_inner "fused_reshape8_reshape9_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %fused_reshape8_reshape9_kernel "fused_reshape8_reshape9_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %fused_reshape8_reshape9_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_reshape8_reshape9_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_reshape8_reshape9_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%fused_reshape8_reshape9_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%fused_reshape8_reshape9_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%fused_reshape8_reshape9_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %24 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
       %bool = OpTypeBool
        %int = OpTypeInt 32 1
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
         %61 = OpTypeFunction %void
%fused_reshape8_reshape9_kernel_inner = OpFunction %void None %24
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %25 = OpLabel
         %26 = OpCompositeExtract %uint %blockIdx 2
         %27 = OpCompositeExtract %uint %gridDim 0
         %28 = OpIMul %uint %26 %27
         %29 = OpCompositeExtract %uint %blockIdx 0
         %30 = OpIAdd %uint %28 %29
         %31 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_0
         %34 = OpLoad %uint %31 None
         %35 = OpUGreaterThan %bool %30 %34
               OpSelectionMerge %37 None
               OpBranchConditional %35 %38 %37
         %38 = OpLabel
               OpReturn
         %37 = OpLabel
         %39 = OpCompositeExtract %uint %blockIdx 2
         %40 = OpCompositeExtract %uint %gridDim 0
         %41 = OpIMul %uint %39 %40
         %42 = OpCompositeExtract %uint %blockIdx 0
         %43 = OpIAdd %uint %41 %42
       %v__1 = OpBitcast %int %43
         %46 = OpIMul %int %v__1 %int_256
         %48 = OpCompositeExtract %uint %threadIdx 0
         %49 = OpBitcast %int %48
         %50 = OpIAdd %int %46 %49
         %51 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %50
         %53 = OpIMul %int %v__1 %int_256
         %54 = OpCompositeExtract %uint %threadIdx 0
         %55 = OpBitcast %int %54
         %56 = OpIAdd %int %53 %55
         %57 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %56
         %59 = OpLoad %float %57 None
               OpStore %51 %59 None
               OpReturn
               OpFunctionEnd
%fused_reshape8_reshape9_kernel = OpFunction %void None %61
         %62 = OpLabel
         %63 = OpLoad %v3uint %fused_reshape8_reshape9_kernel_workgroup_id_Input None
         %64 = OpLoad %v3uint %fused_reshape8_reshape9_kernel_num_workgroups_Input None
         %65 = OpLoad %v3uint %fused_reshape8_reshape9_kernel_local_invocation_id_Input None
         %66 = OpFunctionCall %void %fused_reshape8_reshape9_kernel_inner %63 %64 %65
               OpReturn
               OpFunctionEnd

// Dumped WGSL:
//----------------------------------------
// Function: reshape1_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_reshape : array<f32>;
@group(0) @binding(1) var<storage, read> reshape336 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn reshape1_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_reshape[((v__1 * 256i) + i32(threadIdx.x))] = reshape336[((v__1 * 256i) + i32(threadIdx.x))];
}



// Dumped WGSL:
//----------------------------------------
// Function: rms_norm1_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_cast : array<f32>;
@group(0) @binding(1) var<storage, read> input_embeds : array<f32>;
@group(0) @binding(2) var<storage, read> model_layers_0_input_layernorm_weight3 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(3) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
var<workgroup> T_multiply_red_shared : array<f32, 1>;
@compute @workgroup_size(64, 1, 1)
fn rms_norm1_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var T_multiply_red_rf_local : array<f32, 1>;
  T_multiply_red_rf_local[0i] = 0.000000e+00f;
  T_multiply_red_rf_local[0i] = fma(input_embeds[((v__1 * 3584i) + i32(threadIdx.x))], input_embeds[((v__1 * 3584i) + i32(threadIdx.x))], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 64i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 64i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 128i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 128i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 192i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 192i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 256i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 256i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 320i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 320i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 384i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 384i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 448i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 448i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 512i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 512i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 576i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 576i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 640i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 640i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 704i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 704i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 768i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 768i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 832i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 832i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 896i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 896i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 960i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 960i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1024i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1024i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1088i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1088i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1152i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1152i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1216i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1216i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1280i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1280i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1344i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1344i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1408i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1408i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1472i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1472i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1536i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1536i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1600i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1600i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1664i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1664i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1728i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1728i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1792i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1792i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1856i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1856i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1920i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1920i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1984i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1984i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2048i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2048i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2112i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2112i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2176i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2176i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2240i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2240i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2304i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2304i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2368i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2368i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2432i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2432i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2496i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2496i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2560i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2560i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2624i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2624i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2688i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2688i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2752i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2752i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2816i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2816i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2880i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2880i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2944i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2944i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3008i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3008i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3072i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3072i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3136i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3136i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3200i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3200i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3264i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3264i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3328i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3328i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3392i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3392i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3456i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3456i)], T_multiply_red_rf_local[0i]);
  T_multiply_red_rf_local[0i] = fma(input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3520i)], input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3520i)], T_multiply_red_rf_local[0i]);
  workgroupBarrier();
  red_buf0[i32(threadIdx.x)] = T_multiply_red_rf_local[0i];
  workgroupBarrier();
  if (i32(threadIdx.x) < 32i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 16i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 8i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 4i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 2i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) < 1i) {
    red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
  }
  workgroupBarrier();
  if (i32(threadIdx.x) == 0i) {
    T_multiply_red_shared[0i] = red_buf0[0i];
  }
  workgroupBarrier();
  T_cast[((v__1 * 3584i) + i32(threadIdx.x))] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[((v__1 * 3584i) + i32(threadIdx.x))]) * model_layers_0_input_layernorm_weight3[i32(threadIdx.x)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 64i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 64i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 64i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 128i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 128i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 128i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 192i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 192i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 192i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 256i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 256i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 256i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 320i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 320i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 320i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 384i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 384i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 384i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 448i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 448i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 448i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 512i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 512i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 512i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 576i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 576i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 576i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 640i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 640i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 640i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 704i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 704i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 704i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 768i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 768i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 768i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 832i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 832i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 832i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 896i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 896i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 896i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 960i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 960i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 960i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1024i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1024i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1024i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1088i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1088i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1088i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1152i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1152i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1152i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1216i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1216i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1216i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1280i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1280i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1280i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1344i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1344i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1344i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1408i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1408i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1408i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1472i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1472i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1472i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1536i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1536i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1536i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1600i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1600i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1600i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1664i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1664i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1664i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1728i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1728i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1728i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1792i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1792i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1792i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1856i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1856i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1856i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1920i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1920i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1920i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 1984i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 1984i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 1984i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2048i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2048i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2048i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2112i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2112i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2112i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2176i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2176i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2176i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2240i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2240i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2240i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2304i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2304i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2304i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2368i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2368i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2368i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2432i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2432i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2432i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2496i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2496i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2496i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2560i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2560i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2560i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2624i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2624i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2624i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2688i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2688i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2688i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2752i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2752i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2752i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2816i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2816i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2816i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2880i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2880i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2880i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 2944i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 2944i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 2944i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 3008i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3008i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 3008i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 3072i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3072i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 3072i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 3136i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3136i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 3136i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 3200i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3200i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 3200i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 3264i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3264i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 3264i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 3328i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3328i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 3328i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 3392i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3392i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 3392i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 3456i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3456i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 3456i)]);
  T_cast[(((v__1 * 3584i) + i32(threadIdx.x)) + 3520i)] = (((1.000000e+00f / sqrt(fma(T_multiply_red_shared[0i], 2.790179e-04f, 1.000000e-06f))) * input_embeds[(((v__1 * 3584i) + i32(threadIdx.x)) + 3520i)]) * model_layers_0_input_layernorm_weight3[(i32(threadIdx.x) + 3520i)]);
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 68
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %reshape1_kernel "reshape1_kernel" %reshape1_kernel_workgroup_id_Input %reshape1_kernel_num_workgroups_Input %reshape1_kernel_local_invocation_id_Input
               OpExecutionMode %reshape1_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %reshape1_kernel_workgroup_id_Input "reshape1_kernel_workgroup_id_Input"
               OpName %reshape1_kernel_num_workgroups_Input "reshape1_kernel_num_workgroups_Input"
               OpName %reshape1_kernel_local_invocation_id_Input "reshape1_kernel_local_invocation_id_Input"
               OpName %reshape1_kernel_inner "reshape1_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %reshape1_kernel "reshape1_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %reshape1_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %reshape1_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %reshape1_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%reshape1_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%reshape1_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%reshape1_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %25 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
         %62 = OpTypeFunction %void
%reshape1_kernel_inner = OpFunction %void None %25
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %26 = OpLabel
         %27 = OpCompositeExtract %uint %blockIdx 2
         %28 = OpCompositeExtract %uint %gridDim 0
         %29 = OpIMul %uint %27 %28
         %30 = OpCompositeExtract %uint %blockIdx 0
         %31 = OpIAdd %uint %29 %30
         %32 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_1
         %36 = OpLoad %uint %32 None
         %37 = OpUGreaterThan %bool %31 %36
               OpSelectionMerge %39 None
               OpBranchConditional %37 %40 %39
         %40 = OpLabel
               OpReturn
         %39 = OpLabel
         %41 = OpCompositeExtract %uint %blockIdx 2
         %42 = OpCompositeExtract %uint %gridDim 0
         %43 = OpIMul %uint %41 %42
         %44 = OpCompositeExtract %uint %blockIdx 0
         %45 = OpIAdd %uint %43 %44
       %v__1 = OpBitcast %int %45
         %47 = OpIMul %int %v__1 %int_256
         %49 = OpCompositeExtract %uint %threadIdx 0
         %50 = OpBitcast %int %49
         %51 = OpIAdd %int %47 %50
         %52 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %51
         %54 = OpIMul %int %v__1 %int_256
         %55 = OpCompositeExtract %uint %threadIdx 0
         %56 = OpBitcast %int %55
         %57 = OpIAdd %int %54 %56
         %58 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %57
         %60 = OpLoad %float %58 None
               OpStore %52 %60 None
               OpReturn
               OpFunctionEnd
%reshape1_kernel = OpFunction %void None %62
         %63 = OpLabel
         %64 = OpLoad %v3uint %reshape1_kernel_workgroup_id_Input None
         %65 = OpLoad %v3uint %reshape1_kernel_num_workgroups_Input None
         %66 = OpLoad %v3uint %reshape1_kernel_local_invocation_id_Input None
         %67 = OpFunctionCall %void %reshape1_kernel_inner %64 %65 %66
               OpReturn
               OpFunctionEnd

// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize_NT_matmul9_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv787 : array<u32>;
@group(0) @binding(2) var<storage, read> lv788 : array<f32>;
@group(0) @binding(3) var<storage, read> take1 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize_NT_matmul9_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 4>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 4>;
  var NT_matmul_intermediate_pad_local : array<f32, 4>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 2i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv787[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv788[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv787[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv788[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 2i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 2i) + 1i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(take1[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 2i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 2i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.batch_size + 1i)>>1u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 2i) + ax0) < podArgs.batch_size)) {
        NT_matmul[((((i32(blockIdx.y) * 304128i) + (ax0 * 152064i)) + (v__1 * 2i)) + ax1_fused_2)] = NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)];
      }
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_split2_silu2_multiply2_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_multiply : array<f32>;
@group(0) @binding(1) var<storage, read> lv341 : array<f32>;

struct PODArgs {
  packGridDimX: u32
}
@group(0) @binding(2) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn fused_split2_silu2_multiply2_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  T_multiply[((v__1 * 256i) + i32(threadIdx.x))] = ((lv341[((v__1 * 256i) + i32(threadIdx.x))] * (1.000000e+00f / (1.000000e+00f + exp((0.000000e+00f - lv341[((v__1 * 256i) + i32(threadIdx.x))]))))) * lv341[(((v__1 * 256i) + i32(threadIdx.x)) + 18944i)]);
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_rope_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> k : array<f32>;
@group(0) @binding(1) var<storage, read> position_map : array<i32>;
@group(0) @binding(2) var<storage, read_write> q : array<f32>;
@group(0) @binding(3) var<storage, read> qkv : array<f32>;
@group(0) @binding(4) var<storage, read_write> v : array<f32>;

struct PODArgs {
  apply_rope: i32,
  position_map_elem_offset: i32,
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn fused_rope_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  if ((v__1 % 18i) < 14i) {
    var condval : f32;
    if ((0i < podArgs.apply_rope)) {
      var condval_1 : f32;
      if (((i32(threadIdx.x) & 127i) < 64i)) {
        condval_1 = (qkv[(((v__1 * 256i) + i32(threadIdx.x)) + 64i)] * -1.000000e+00f);
} else {
        condval_1 = qkv[(((v__1 * 256i) + i32(threadIdx.x)) - 64i)];
}
      condval = fma(sin((f32(position_map[((v__1 / 18i) + podArgs.position_map_elem_offset)]) / pow(1.000000e+06f, (f32(((i32(threadIdx.x) & 63i) * 2i)) * 7.812500e-03f)))), condval_1, (cos((f32(position_map[((v__1 / 18i) + podArgs.position_map_elem_offset)]) / pow(1.000000e+06f, (f32(((i32(threadIdx.x) & 63i) * 2i)) * 7.812500e-03f)))) * qkv[((v__1 * 256i) + i32(threadIdx.x))]));
} else {
      condval = qkv[((v__1 * 256i) + i32(threadIdx.x))];
}
    q[((((v__1 / 18i) * 3584i) + ((v__1 % 18i) * 256i)) + i32(threadIdx.x))] = condval;
  } else {
    if ((v__1 % 18i) < 16i) {
      var condval_2 : f32;
      if ((0i < podArgs.apply_rope)) {
        var condval_3 : f32;
        if (((i32(threadIdx.x) & 127i) < 64i)) {
          condval_3 = (qkv[(((v__1 * 256i) + i32(threadIdx.x)) + 64i)] * -1.000000e+00f);
} else {
          condval_3 = qkv[(((v__1 * 256i) + i32(threadIdx.x)) - 64i)];
}
        condval_2 = fma(sin((f32(position_map[((v__1 / 18i) + podArgs.position_map_elem_offset)]) / pow(1.000000e+06f, (f32(((i32(threadIdx.x) & 63i) * 2i)) * 7.812500e-03f)))), condval_3, (cos((f32(position_map[((v__1 / 18i) + podArgs.position_map_elem_offset)]) / pow(1.000000e+06f, (f32(((i32(threadIdx.x) & 63i) * 2i)) * 7.812500e-03f)))) * qkv[((v__1 * 256i) + i32(threadIdx.x))]));
} else {
        condval_2 = qkv[((v__1 * 256i) + i32(threadIdx.x))];
}
      k[(((((v__1 / 18i) * 512i) + ((v__1 % 18i) * 256i)) + i32(threadIdx.x)) - 3584i)] = condval_2;
    } else {
      v[(((((v__1 / 18i) * 512i) + ((v__1 % 18i) * 256i)) + i32(threadIdx.x)) - 4096i)] = qkv[((v__1 * 256i) + i32(threadIdx.x))];
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 3886
; Schema: 0
               OpCapability Shader
        %155 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2 "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2" %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_workgroup_id_Input %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_num_workgroups_Input %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2 LocalSize 8 8 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %lv792_reindex_pad_shared "lv792_reindex_pad_shared"
               OpName %dequantize_reindex_shared "dequantize_reindex_shared"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_workgroup_id_Input "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_workgroup_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_num_workgroups_Input "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_num_workgroups_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_local_invocation_id_Input "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_local_invocation_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_inner "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_reindex_pad_local "NT_matmul_intermediate_reindex_pad_local"
               OpName %v__1 "v__1"
               OpName %var_1 "var_1"
               OpName %ax3_0 "ax3_0"
               OpName %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2 "fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_256 ArrayStride 4
               OpDecorate %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize4_fused_NT_matmul8_add3_kernel_2_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_16 ArrayStride 4
// Dumped WGSL:
//----------------------------------------
// Function: batch_prefill_ragged_kv_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read> k : array<f32>;
@group(0) @binding(1) var<storage, read> k_rope_pos_offset : array<i32>;
@group(0) @binding(2) var<storage, read> kv_indptr : array<i32>;
@group(0) @binding(3) var<storage, read_write> lse : array<f32>;
@group(0) @binding(4) var<storage, read_write> output : array<f32>;
@group(0) @binding(5) var<storage, read> q : array<f32>;
@group(0) @binding(6) var<storage, read> q_indptr : array<i32>;
@group(0) @binding(7) var<storage, read> q_rope_position : array<i32>;
@group(0) @binding(8) var<storage, read> v : array<vec2<f32>>;

struct PODArgs {
  attn_score_scaling_factor: f32,
  batch_size: i32,
  causal: i32,
  k_rope_pos_offset_elem_offset: i32,
  kv_indptr_elem_offset: i32,
  kv_len: i32,
  q_indptr_elem_offset: i32,
  q_rope_position_elem_offset: i32,
  qo_len: i32,
  rope_scale: f32,
  rope_theta: f32,
  rotary_mode: i32,
  packGridDimX: u32
}
@group(0) @binding(9) var<uniform> podArgs : PODArgs;

var<workgroup> m_smem : array<f32, 16>;
var<workgroup> d_smem : array<f32, 16>;
var<workgroup> Q_smem : array<f32, 2048>;
var<workgroup> K_smem : array<f32, 2048>;
var<workgroup> V_smem : array<f32, 2048>;
var<workgroup> S_smem : array<f32, 256>;
var<workgroup> m_prev_smem : array<f32, 16>;
@compute @workgroup_size(32, 4, 1)
fn batch_prefill_ragged_kv_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var tile_id : array<i32, 1>;
  var batch_idx : array<i32, 1>;
  var batch_rows : array<i32, 1>;
  var batch_tiles : array<i32, 1>;
  var kv_chunk_len : array<i32, 1>;
  var O_local : array<f32, 16>;
  var S_local : array<f32, 2>;
  var m_prev : array<f32, 1>;
  var m_new : array<f32, 1>;
  var d_new : array<f32, 1>;
  tile_id[0i] = v__1;
  batch_idx[0i] = 0i;
  batch_rows[0i] = ((q_indptr[(podArgs.q_indptr_elem_offset + 1i)] * 7i) - (q_indptr[podArgs.q_indptr_elem_offset] * 7i));
  batch_tiles[0i] = ((batch_rows[0i] + 15i)>>4u);
  while (true) {
    if (!(((batch_idx[0i] < podArgs.batch_size)))) { break; }
    while (true) {
      if (!(((batch_tiles[0i] <= tile_id[0i]) && (batch_idx[0i] < podArgs.batch_size)))) { break; }
      tile_id[0i] = (tile_id[0i] - batch_tiles[0i]);
      batch_idx[0i] = (batch_idx[0i] + 1i);
      if (batch_idx[0i] < podArgs.batch_size) {
        let b_idx : i32 = batch_idx[0i];
        batch_rows[0i] = ((q_indptr[((b_idx + podArgs.q_indptr_elem_offset) + 1i)] * 7i) - (q_indptr[(b_idx + podArgs.q_indptr_elem_offset)] * 7i));
        batch_tiles[0i] = ((batch_rows[0i] + 15i)>>4u);
      }
    }
    if ((batch_idx[0i] < podArgs.batch_size)) {
      let b_idx_1 : i32 = batch_idx[0i];
      let q_indptr_val : i32 = q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)];
      let LH_start : i32 = (tile_id[0i] * 16i);
      kv_chunk_len[0i] = (kv_indptr[((b_idx_1 + podArgs.kv_indptr_elem_offset) + 1i)] - kv_indptr[(b_idx_1 + podArgs.kv_indptr_elem_offset)]);
      workgroupBarrier();
      if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
        m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = -5.000000e+04f;
        d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = 1.000000e+00f;
      }
      for (var li_1 : i32 = 0; li_1 < 4i; li_1++) {
        for (var lj_1 : i32 = 0; lj_1 < 4i; lj_1++) {
          O_local[((li_1 * 4i) + lj_1)] = 0.000000e+00f;
        }
      }
      workgroupBarrier();
      for (var li_lj_fused_0 : i32 = 0; li_lj_fused_0 < 8i; li_lj_fused_0++) {
        if (((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) + q_indptr_val) < q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]) {
          for (var li_lj_fused_3_s : i32 = 0; li_lj_fused_3_s < 2i; li_lj_fused_3_s++) {
            var condval : f32;
            if ((podArgs.rotary_mode == 1i)) {
              var condval_1 : f32;
              if (((i32(threadIdx.y) & 1i) < 1i)) {
                condval_1 = (q[(((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i)) + 64i)] * -1.000000e+00f);
} else {
                condval_1 = q[(((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i)) - 64i)];
}
              condval = fma(sin(((f32(q_rope_position[(((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) + q_indptr_val) + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (li_lj_fused_3_s * 2i))) * 7.812500e-03f)))), condval_1, (cos(((f32(q_rope_position[(((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) + q_indptr_val) + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (li_lj_fused_3_s * 2i))) * 7.812500e-03f)))) * q[((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i))]));
} else {
              condval = q[((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i))];
}
            Q_smem[(((li_lj_fused_0 * 256i) + ((i32(threadIdx.y)>>1u) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i))] = condval;
          }
        } else {
          let v__2 : i32 = (((li_lj_fused_0 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
          Q_smem[v__2 + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
          Q_smem[v__2 + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
        }
      }
      workgroupBarrier();
      for (var iterator : i32 = 0; iterator < ((kv_chunk_len[0i] + 15i)>>4u); iterator++) {
        let L_kv_base : i32 = kv_indptr[(b_idx_1 + podArgs.kv_indptr_elem_offset)];
        for (var lz_ly_fused_0 : i32 = 0; lz_ly_fused_0 < 8i; lz_ly_fused_0++) {
          if ((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) < kv_chunk_len[0i]) {
            for (var lz_ly_fused_3_s : i32 = 0; lz_ly_fused_3_s < 2i; lz_ly_fused_3_s++) {
              var condval_2 : f32;
              if ((podArgs.rotary_mode == 1i)) {
                var condval_3 : f32;
                if (((i32(threadIdx.y) & 1i) < 1i)) {
                  condval_3 = (k[(((((((iterator * 8192i) + (lz_ly_fused_0 * 1024i)) + ((i32(threadIdx.y)>>1u) * 512i)) + (L_kv_base * 512i)) + (i32(blockIdx.y) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i)) + 64i)] * -1.000000e+00f);
} else {
                  condval_3 = k[(((((((iterator * 8192i) + (lz_ly_fused_0 * 1024i)) + ((i32(threadIdx.y)>>1u) * 512i)) + (L_kv_base * 512i)) + (i32(blockIdx.y) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i)) - 64i)];
}
                condval_2 = fma(sin(((f32(((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) + k_rope_pos_offset[(b_idx_1 + podArgs.k_rope_pos_offset_elem_offset)])) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (lz_ly_fused_3_s * 2i))) * 7.812500e-03f)))), condval_3, (cos(((f32(((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) + k_rope_pos_offset[(b_idx_1 + podArgs.k_rope_pos_offset_elem_offset)])) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (lz_ly_fused_3_s * 2i))) * 7.812500e-03f)))) * k[((((((iterator * 8192i) + (lz_ly_fused_0 * 1024i)) + ((i32(threadIdx.y)>>1u) * 512i)) + (L_kv_base * 512i)) + (i32(blockIdx.y) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i))]));
} else {
                condval_2 = k[((((((iterator * 8192i) + (lz_ly_fused_0 * 1024i)) + ((i32(threadIdx.y)>>1u) * 512i)) + (L_kv_base * 512i)) + (i32(blockIdx.y) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i))];
}
              K_smem[(((lz_ly_fused_0 * 256i) + ((i32(threadIdx.y)>>1u) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i))] = condval_2;
            }
          } else {
            let v__3 : i32 = (((lz_ly_fused_0 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
            K_smem[v__3 + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
            K_smem[v__3 + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
          }
        }
        workgroupBarrier();
        for (var lz_ly_fused_0_1 : i32 = 0; lz_ly_fused_0_1 < 8i; lz_ly_fused_0_1++) {
          if ((((iterator * 16i) + (lz_ly_fused_0_1 * 2i)) + (i32(threadIdx.y)>>1u)) < kv_chunk_len[0i]) {
            let v__4 : i32 = (((lz_ly_fused_0_1 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
            V_smem[v__4 + 0] = v[((((((((iterator * 8192i) + (lz_ly_fused_0_1 * 1024i)) + ((i32(threadIdx.y)>>1u) * 512i)) + (L_kv_base * 512i)) + (i32(blockIdx.y) * 128i)) + ((i32(threadIdx.y) & 1i) * 64i)) + (i32(threadIdx.x) * 2i)) / 2i)][0];
            V_smem[v__4 + 1] = v[((((((((iterator * 8192i) + (lz_ly_fused_0_1 * 1024i)) + ((i32(threadIdx.y)>>1u) * 512i)) + (L_kv_base * 512i)) + (i32(blockIdx.y) * 128i)) + ((i32(threadIdx.y) & 1i) * 64i)) + (i32(threadIdx.x) * 2i)) / 2i)][1];
          } else {
            let v__5 : i32 = (((lz_ly_fused_0_1 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
            V_smem[v__5 + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
            V_smem[v__5 + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
          }
        }
        workgroupBarrier();
        for (var lj_1_init : i32 = 0; lj_1_init < 2i; lj_1_init++) {
          S_local[lj_1_init] = 0.000000e+00f;
        }
        for (var lk_0 : i32 = 0; lk_0 < 16i; lk_0++) {
          for (var lj_1_1 : i32 = 0; lj_1_1 < 2i; lj_1_1++) {
            for (var lk_1 : i32 = 0; lk_1 < 8i; lk_1++) {
              S_local[lj_1_1] = fma(((Q_smem[((((i32(threadIdx.y) * 512i) + ((i32(threadIdx.x)>>3u) * 128i)) + (lk_0 * 8i)) + lk_1)] * K_smem[(((((i32(threadIdx.x) & 7i) * 256i) + (lj_1_1 * 128i)) + (lk_0 * 8i)) + lk_1)]) * podArgs.attn_score_scaling_factor), 1.275174e-01f, S_local[lj_1_1]);
            }
          }
        }
        workgroupBarrier();
        for (var lj_1_2 : i32 = 0; lj_1_2 < 2i; lj_1_2++) {
          S_smem[(((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lj_1_2)] = S_local[lj_1_2];
        }
        workgroupBarrier();
        if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
          m_prev[0i] = m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))];
          m_new[0i] = m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))];
          for (var j : i32 = 0; j < 16i; j++) {
            var condval_4 : bool;
            if ((0i < podArgs.causal)) {
              condval_4 = (((iterator * 16i) + j) <= ((((((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) / 7i) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u)) + kv_chunk_len[0i]) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]) - q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]));
} else {
              condval_4 = (((iterator * 16i) + j) < kv_chunk_len[0i]);
}
            if (condval_4) {
              m_new[0i] = max(m_new[0i], S_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j)]);
            }
          }
          d_new[0i] = (d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] * exp2((m_prev[0i] - m_new[0i])));
        }
        workgroupBarrier();
        for (var j_1 : i32 = 0; j_1 < 16i; j_1++) {
          if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
            var condval_5 : bool;
            if ((0i < podArgs.causal)) {
              condval_5 = (((iterator * 16i) + j_1) <= ((((((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) / 7i) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u)) + kv_chunk_len[0i]) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]) - q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]));
} else {
              condval_5 = (((iterator * 16i) + j_1) < kv_chunk_len[0i]);
}
            if (condval_5) {
              S_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_1)] = exp2((S_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_1)] - m_new[0i]));
            } else {
              S_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_1)] = exp2((-5.000000e+04f - m_new[0i]));
            }
          }
        }
        workgroupBarrier();
        if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
          for (var j_2 : i32 = 0; j_2 < 16i; j_2++) {
            d_new[0i] = (d_new[0i] + S_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_2)]);
          }
          m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = m_new[0i];
          d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = d_new[0i];
          m_prev_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = m_prev[0i];
        }
        workgroupBarrier();
        for (var li_1_init : i32 = 0; li_1_init < 4i; li_1_init++) {
          for (var lj_1_init_1 : i32 = 0; lj_1_init_1 < 4i; lj_1_init_1++) {
            O_local[((li_1_init * 4i) + lj_1_init_1)] = (O_local[((li_1_init * 4i) + lj_1_init_1)] * exp2((m_prev_smem[((i32(threadIdx.y) * 4i) + li_1_init)] - m_smem[((i32(threadIdx.y) * 4i) + li_1_init)])));
          }
        }
        for (var lk_0_1 : i32 = 0; lk_0_1 < 2i; lk_0_1++) {
          for (var lk_1_1 : i32 = 0; lk_1_1 < 8i; lk_1_1++) {
            for (var li_1_1 : i32 = 0; li_1_1 < 4i; li_1_1++) {
              for (var lj_1_3 : i32 = 0; lj_1_3 < 4i; lj_1_3++) {
                O_local[((li_1_1 * 4i) + lj_1_3)] = fma(S_smem[((((i32(threadIdx.y) * 64i) + (li_1_1 * 16i)) + (lk_0_1 * 8i)) + lk_1_1)], V_smem[((((lk_0_1 * 1024i) + (lk_1_1 * 128i)) + (i32(threadIdx.x) * 4i)) + lj_1_3)], O_local[((li_1_1 * 4i) + lj_1_3)]);
              }
            }
          }
        }
      }
      for (var li_1_2 : i32 = 0; li_1_2 < 4i; li_1_2++) {
        for (var lj_1_4 : i32 = 0; lj_1_4 < 4i; lj_1_4++) {
          let cur_L : i32 = ((((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) / 7i) + (((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) % 7i)>>31u)) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]);
          if (cur_L < q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]) {
            output[(((((cur_L * 3584i) + (i32(blockIdx.y) * 896i)) + ((((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) % 7i) + (7i & (((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) % 7i)>>31u))) * 128i)) + (i32(threadIdx.x) * 4i)) + lj_1_4)] = (O_local[((li_1_2 * 4i) + lj_1_4)] / d_smem[((i32(threadIdx.y) * 4i) + li_1_2)]);
          }
        }
      }
      if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
        let cur_L_1 : i32 = ((((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) / 7i) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u)) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]);
        if (cur_L_1 < q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]) {
          lse[(((cur_L_1 * 28i) + (i32(blockIdx.y) * 7i)) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i) + (7i & (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u))))] = (m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + log2(d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))]));
        }
      }
      tile_id[0i] = (tile_id[0i] + 16i);
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 90
; Schema: 0
               OpCapability Shader
         %69 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_split2_silu2_multiply2_kernel "fused_split2_silu2_multiply2_kernel" %fused_split2_silu2_multiply2_kernel_workgroup_id_Input %fused_split2_silu2_multiply2_kernel_num_workgroups_Input %fused_split2_silu2_multiply2_kernel_local_invocation_id_Input
               OpExecutionMode %fused_split2_silu2_multiply2_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %PODArgs 0 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpName %fused_split2_silu2_multiply2_kernel_workgroup_id_Input "fused_split2_silu2_multiply2_kernel_workgroup_id_Input"
               OpName %fused_split2_silu2_multiply2_kernel_num_workgroups_Input "fused_split2_silu2_multiply2_kernel_num_workgroups_Input"
               OpName %fused_split2_silu2_multiply2_kernel_local_invocation_id_Input "fused_split2_silu2_multiply2_kernel_local_invocation_id_Input"
               OpName %fused_split2_silu2_multiply2_kernel_inner "fused_split2_silu2_multiply2_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %fused_split2_silu2_multiply2_kernel "fused_split2_silu2_multiply2_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpDecorate %fused_split2_silu2_multiply2_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_split2_silu2_multiply2_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_split2_silu2_multiply2_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %uint
%tint_symbol_5 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_5 = OpTypePointer Uniform %tint_symbol_5
          %9 = OpVariable %_ptr_Uniform_tint_symbol_5 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%fused_split2_silu2_multiply2_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%fused_split2_silu2_multiply2_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%fused_split2_silu2_multiply2_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %24 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
       %bool = OpTypeBool
        %int = OpTypeInt 32 1
    %int_256 = OpConstant %int 256
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
    %float_0 = OpConstant %float 0
    %float_1 = OpConstant %float 1
  %int_18944 = OpConstant %int 18944
         %84 = OpTypeFunction %void
%fused_split2_silu2_multiply2_kernel_inner = OpFunction %void None %24
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %25 = OpLabel
         %26 = OpCompositeExtract %uint %blockIdx 2
         %27 = OpCompositeExtract %uint %gridDim 0
         %28 = OpIMul %uint %26 %27
         %29 = OpCompositeExtract %uint %blockIdx 0
         %30 = OpIAdd %uint %28 %29
         %31 = OpAccessChain %_ptr_Uniform_uint %9 %uint_0 %uint_0
         %34 = OpLoad %uint %31 None
         %35 = OpUGreaterThan %bool %30 %34
               OpSelectionMerge %37 None
               OpBranchConditional %35 %38 %37
         %38 = OpLabel
               OpReturn
         %37 = OpLabel
         %39 = OpCompositeExtract %uint %blockIdx 2
         %40 = OpCompositeExtract %uint %gridDim 0
         %41 = OpIMul %uint %39 %40
         %42 = OpCompositeExtract %uint %blockIdx 0
         %43 = OpIAdd %uint %41 %42
       %v__1 = OpBitcast %int %43
         %46 = OpIMul %int %v__1 %int_256
         %48 = OpCompositeExtract %uint %threadIdx 0
         %49 = OpBitcast %int %48
         %50 = OpIAdd %int %46 %49
         %51 = OpAccessChain %_ptr_StorageBuffer_float %1 %uint_0 %50
         %53 = OpIMul %int %v__1 %int_256
         %54 = OpCompositeExtract %uint %threadIdx 0
         %55 = OpBitcast %int %54
         %56 = OpIAdd %int %53 %55
         %57 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %56
         %59 = OpLoad %float %57 None
         %60 = OpIMul %int %v__1 %int_256
         %61 = OpCompositeExtract %uint %threadIdx 0
         %62 = OpBitcast %int %61
         %63 = OpIAdd %int %60 %62
         %64 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %63
         %65 = OpLoad %float %64 None
         %66 = OpFSub %float %float_0 %65
         %68 = OpExtInst %float %69 Exp %66
         %70 = OpFAdd %float %float_1 %68
         %72 = OpFDiv %float %float_1 %70
         %73 = OpFMul %float %59 %72
         %74 = OpIMul %int %v__1 %int_256
         %75 = OpCompositeExtract %uint %threadIdx 0
         %76 = OpBitcast %int %75
         %77 = OpIAdd %int %74 %76
         %78 = OpIAdd %int %77 %int_18944
         %80 = OpAccessChain %_ptr_StorageBuffer_float_0 %6 %uint_0 %78
         %81 = OpLoad %float %80 None
         %82 = OpFMul %float %73 %81
               OpStore %51 %82 None
               OpReturn
               OpFunctionEnd
%fused_split2_silu2_multiply2_kernel = OpFunction %void None %84
         %85 = OpLabel
         %86 = OpLoad %v3uint %fused_split2_silu2_multiply2_kernel_workgroup_id_Input None
         %87 = OpLoad %v3uint %fused_split2_silu2_multiply2_kernel_num_workgroups_Input None
         %88 = OpLoad %v3uint %fused_split2_silu2_multiply2_kernel_local_invocation_id_Input None
         %89 = OpFunctionCall %void %fused_split2_silu2_multiply2_kernel_inner %86 %87 %88
               OpReturn
               OpFunctionEnd

/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2298
; Schema: 0
               OpCapability Shader
        %104 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1 "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1" %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1_workgroup_id_Input %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1_num_workgroups_Input %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1 LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1_workgroup_id_Input "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1_workgroup_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1_num_workgroups_Input "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1_num_workgroups_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1_local_invocation_id_Input "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1_local_invocation_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1_inner "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1 "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_1"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize2_fused_NT_ma
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 3787
; Schema: 0
               OpCapability Shader
        %155 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2 "fused_fused_dequantize1_fused_NT_matmul_add_kernel_2" %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_workgroup_id_Input %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_num_workgroups_Input %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2 LocalSize 8 8 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %rms_norm171_reindex_pad_shared "rms_norm171_reindex_pad_shared"
               OpName %dequantize_reindex_shared "dequantize_reindex_shared"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_workgroup_id_Input "fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_workgroup_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_num_workgroups_Input "fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_num_workgroups_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_local_invocation_id_Input "fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_local_invocation_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_inner "fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_reindex_pad_local "NT_matmul_intermediate_reindex_pad_local"
               OpName %v__1 "v__1"
               OpName %var_1 "var_1"
               OpName %ax3_0 "ax3_0"
               OpName %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2 "fused_fused_dequantize1_fused_NT_matmul_add_kernel_2"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_256 ArrayStride 4
               OpDecorate %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize1_fused_NT_matmul_add_kernel_2_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeF
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1586
; Schema: 0
               OpCapability Shader
        %100 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize_NT_matmul4_kernel "fused_fused_dequantize_NT_matmul4_kernel" %fused_fused_dequantize_NT_matmul4_kernel_workgroup_id_Input %fused_fused_dequantize_NT_matmul4_kernel_num_workgroups_Input %fused_fused_dequantize_NT_matmul4_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize_NT_matmul4_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_workgroup_id_Input "fused_fused_dequantize_NT_matmul4_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_num_workgroups_Input "fused_fused_dequantize_NT_matmul4_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_local_invocation_id_Input "fused_fused_dequantize_NT_matmul4_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_inner "fused_fused_dequantize_NT_matmul4_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize_NT_matmul4_kernel "fused_fused_dequantize_NT_matmul4_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize_NT_matmul4_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize_NT_matmul4_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize_NT_matmul4_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_4 ArrayStride 4
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer Sto
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 316
; Schema: 0
               OpCapability Shader
        %124 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_rope_kernel "fused_rope_kernel" %fused_rope_kernel_workgroup_id_Input %fused_rope_kernel_num_workgroups_Input %fused_rope_kernel_local_invocation_id_Input
               OpExecutionMode %fused_rope_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "apply_rope"
               OpMemberName %PODArgs 1 "position_map_elem_offset"
               OpMemberName %PODArgs 2 "seq_len"
               OpMemberName %PODArgs 3 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %fused_rope_kernel_workgroup_id_Input "fused_rope_kernel_workgroup_id_Input"
               OpName %fused_rope_kernel_num_workgroups_Input "fused_rope_kernel_num_workgroups_Input"
               OpName %fused_rope_kernel_local_invocation_id_Input "fused_rope_kernel_local_invocation_id_Input"
               OpName %fused_rope_kernel_inner "fused_rope_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %condval "condval"
               OpName %condval_1 "condval_1"
               OpName %condval_2 "condval_2"
               OpName %condval_3 "condval_3"
               OpName %tint_mod_i32 "tint_mod_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs_0 "lhs"
               OpName %rhs_0 "rhs"
               OpName %fused_rope_kernel "fused_rope_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 Coherent
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 Coherent
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %PODArgs 2 Offset 8
               OpMemberDecorate %PODArgs 3 Offset 12
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %fused_rope_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_rope_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_rope_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
        %int = OpTypeInt 32 1
%_runtimearr_int = OpTypeRuntimeArray %int
%tint_symbol_3 = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_t
// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize3_NT_matmul7_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv457 : array<u32>;
@group(0) @binding(2) var<storage, read> lv458 : array<f32>;
@group(0) @binding(3) var<storage, read> rms_norm115 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize3_NT_matmul7_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 4>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 4>;
  var NT_matmul_intermediate_pad_local : array<f32, 4>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 2i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv457[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv458[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv457[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv458[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 2i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 2i) + 1i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(rms_norm115[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 2i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 2i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.seq_len + 1i)>>1u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 2i) + ax0) < podArgs.seq_len)) {
        NT_matmul[((((i32(blockIdx.y) * 75776i) + (ax0 * 37888i)) + (v__1 * 2i)) + ax1_fused_2)] = NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)];
      }
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: copy_single_page_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> pages : array<f32>;

struct PODArgs {
  copy_length: i32,
  num_pages: i32,
  page_size: i32,
  src_page_id: i32,
  tgt_page_id: i32,
  packGridDimX: u32
}
@group(0) @binding(1) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn copy_single_page_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  if ((v__1 - (podArgs.copy_length * 2i)) < 0i) {
    pages[((((select(((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) + (podArgs.copy_length * 128i)), (((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)), ((((podArgs.copy_length * 128i) >= 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) >= 0i)) || (((podArgs.copy_length * 128i) < 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) <= 0i))))>>7u) * 128i) + ((((podArgs.tgt_page_id * 8i) + select(((((v__1 * 256i) + i32(threadIdx.x)) / (podArgs.copy_length * 128i)) - 1i), (((v__1 * 256i) + i32(threadIdx.x)) / (podArgs.copy_length * 128i)), ((((podArgs.copy_length * 128i) >= 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) >= 0i)) || (((podArgs.copy_length * 128i) < 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) <= 0i))))) * podArgs.page_size) * 128i)) + (i32(threadIdx.x) & 127i))] = pages[((((select(((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) + (podArgs.copy_length * 128i)), (((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)), ((((podArgs.copy_length * 128i) >= 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) >= 0i)) || (((podArgs.copy_length * 128i) < 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) <= 0i))))>>7u) * 128i) + ((((podArgs.src_page_id * 8i) + select(((((v__1 * 256i) + i32(threadIdx.x)) / (podArgs.copy_length * 128i)) - 1i), (((v__1 * 256i) + i32(threadIdx.x)) / (podArgs.copy_length * 128i)), ((((podArgs.copy_length * 128i) >= 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) >= 0i)) || (((podArgs.copy_length * 128i) < 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) <= 0i))))) * podArgs.page_size) * 128i)) + (i32(threadIdx.x) & 127i))];
    pages[((((select(((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) + (podArgs.copy_length * 128i)), (((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)), ((((podArgs.copy_length * 128i) >= 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) >= 0i)) || (((podArgs.copy_length * 128i) < 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) <= 0i))))>>7u) * 128i) + (((((podArgs.tgt_page_id * 8i) + select(((((v__1 * 256i) + i32(threadIdx.x)) / (podArgs.copy_length * 128i)) - 1i), (((v__1 * 256i) + i32(threadIdx.x)) / (podArgs.copy_length * 128i)), ((((podArgs.copy_length * 128i) >= 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) >= 0i)) || (((podArgs.copy_length * 128i) < 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) <= 0i))))) + 4i) * podArgs.page_size) * 128i)) + (i32(threadIdx.x) & 127i))] = pages[((((select(((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) + (podArgs.copy_length * 128i)), (((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)), ((((podArgs.copy_length * 128i) >= 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) >= 0i)) || (((podArgs.copy_length * 128i) < 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) <= 0i))))>>7u) * 128i) + (((((podArgs.src_page_id * 8i) + select(((((v__1 * 256i) + i32(threadIdx.x)) / (podArgs.copy_length * 128i)) - 1i), (((v__1 * 256i) + i32(threadIdx.x)) / (podArgs.copy_length * 128i)), ((((podArgs.copy_length * 128i) >= 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) >= 0i)) || (((podArgs.copy_length * 128i) < 0i) && ((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.copy_length * 128i)) <= 0i))))) + 4i) * podArgs.page_size) * 128i)) + (i32(threadIdx.x) & 127i))];
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1905
; Schema: 0
               OpCapability Shader
        %116 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel "fused_fused_dequantize1_fused_NT_matmul10_add4_kernel" %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_workgroup_id_Input %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_num_workgroups_Input %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_workgroup_id_Input "fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_num_workgroups_Input "fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_local_invocation_id_Input "fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_inner "fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %NT_matmul_rf_local "NT_matmul_rf_local"
               OpName %lv1353_local "lv1353_local"
               OpName %NT_matmul_rf_local_1 "NT_matmul_rf_local_1"
               OpName %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel "fused_fused_dequantize1_fused_NT_matmul10_add4_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_1 ArrayStride 4
               OpDecorate %_arr_uint_uint_1 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
       %uint = OpTypeInt 32 0
%_runtimearr_uint = OpTypeRuntimeArray %uint
%tint_symbol_3 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
         %11 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
%tint_symbol_7 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_7 = OpTypePointer StorageBuffer %tint_symbol_7
         %14 = OpVariable %_ptr_StorageBuffer_tint_symbol_7 StorageBuffer
%tint_symbol_9 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_9 = OpTypePointer StorageBuffer %tint_symbol_9
         %17 = OpVariable %_ptr_StorageBuffer_tint_symbol_9 StorageBuffer
    %PODArgs = OpTypeStruct %uint
%tint_symbol_11 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_11 = OpTypePointer Uniform %tint_symbol_11
         %20 = OpVariable %_ptr_Uniform_tint_symbol_11 Uniform
    %uint_64 = OpConstant %uint 64
%_arr_float_uint_64 = OpTypeArray %float %uint_64
%_ptr_Workgroup__arr_float_uint_64 = OpTypePointer Workgroup %_arr_float_uint_64
         %28 = OpConstantNull %_arr_float_uint_64
   %red_buf0 = OpVariable %_ptr_Workgroup__arr_float_uint_64 Workgroup %28
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %39 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
       %bool = OpTypeBool
        %int = OpTypeInt 32 1
     %uint_1 = OpConstant %uint 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%_ptr_Function__arr_float_uint_1 = OpTypePointer Function %_arr_float_uint_1
         %65 = OpConstantNull %_arr_float_uint_1
%_arr_uint_uint_1 = OpTypeArray %uint %uint_1
%_ptr_Function__arr_uint_uint_1 = OpTypePointer Function %_arr_uint_uint_1
         %69 = OpConstantNull %_arr_uint_uint_1
%_ptr_Function_float = OpTypePointer Function %float
    %float_0 = OpConstant %float 0
%_ptr_Function_uint = OpTypePointer Function %uint
    %int_448 = OpConstant %int 448
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
      %int_8 = OpConstant %int 8
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
    %uint_31 = OpConstant %uint 31
    %uint_15 = OpConstant %uint 15
    %float_7 = OpConstant %float 7
    %int_112 = OpConstant %int 112
     %uint_2 = OpConstant %uint 2
      %int_1 = OpConstant %int 1
     %uint_4 = OpConstant %uint 4
      %int_2 = OpConstant %int 2
     %uint_8 = OpConstant %uint 8
      %int_3 = OpConstant %int 3
    %uint_12 = OpConstant %uint 12
      %int_4 = OpConstant %int 4
    %uint_16 = OpConstant %uint 16
      %int_5 = OpConstant %int 5
    %uint_20 = OpConstant %uint 20
      %int_6 = OpConstant %int 6
    %uint_24 = OpConstant %uint 24
      %int_7 = OpConstant %int 7
    %uint_28 = OpConstant %uint 28
     %int_64 = OpConstant %int 64
    %int_512 = OpConstant %int 512
     %int_16 = OpConstant %int 16
    %int_513 = OpConstant %int 513
    %int_514 = OpConstant %int 514
    %int_515 = OpConstant %int 515
    %int_516 = OpConstant %int 516
    %int_517 = OpConstant %int 517
    %int_518 = OpConstant %int 518
    %int_519 = OpConstant %int 519
    %int_128 = OpConstant %int 128
   %int_1024 = OpConstant %int 1024
     %int_32 = OpConstant %int 32
   %int_1025 = OpConstant %int 1025
   %int_1026 = OpConstant %int 1026
   %int_1027 = OpConstant %int 1027
   %int_1028 = OpConstant %int 1028
   %int_1029 = OpConstant %int 1029
   %int_1030 = OpConstant %int 1030
   %int_1031 = OpConstant %int 1031
    %int_192 = OpConstant %int 192
   %int_1536 = OpConstant %int 1536
     %int_48 = OpConstant %int 48
   %int_1537 = OpConstant %int 1537
   %int_1538 = OpConstant %int 1538
   %int_1539 = OpConstant %int 1539
   %int_1540 = OpConstant %int 1540
   %int_1541 = OpConstant %int 1541
   %int_1542 = OpConstant %int 1542
   %int_1543 = OpConstant %int 1543
    %int_256 = OpConstant %int 256
   %int_2048 = OpConstant %int 2048
   %int_2049 = OpConstant %int 2049
   %int_2050 = OpConstant %int 2050
   %int_2051 = OpConstant %int 2051
   %int_2052 = OpConstant %int 2052
   %int_2053 = OpConstant %int 2053
   %int_2054 = OpConstant %int 2054
   %int_2055 = OpConstant %int 2055
    %int_320 = OpConstant %int 320
   %int_2560 = OpConstant %int 2560
     %int_80 = OpConstant %int 80
   %int_2561 = OpConstant %int 2561
   %int_2562 = OpConstant %int 2562
   %int_2563 = OpConstant %int 2563
   %int_2564 = OpConstant %int 2564
   %int_2565 = OpConstant %int 2565
   %int_2566 = OpConstant %int 2566
   %int_2567 = OpConstant %int 2567
    %int_384 = OpConstant %int 384
   %int_3072 = OpConstant %int 3072
     %int_96 = OpConstant %int 96
   %int_3073 = OpConstant %int 3073
   %int_3074 = OpConstant %int 3074
   %int_3075 = OpConstant %int 3075
   %int_3076 = OpConstant %int 3076
   %int_3077 = OpConstant %int 3077
   %int_3078 = OpConstant %int 3078
   %int_3079 = OpConstant %int 3079
   %uint_264 = OpConstant %uint 264
    %uint_63 = OpConstant %uint 63
%_ptr_Workgroup_float = OpTypePointer Workgroup %float
      %int_0 = OpConstant %int 0
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
       %1899 = OpTypeFunction %void
%fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_inner = OpFunction %void None %39
   %blockIdx = OpFunctionParameter %v3uint
    %gridDim = OpFunctionParameter %v3uint
  %threadIdx = OpFunctionParameter %v3uint
         %40 = OpLabel
%NT_matmul_rf_local = OpVariable %_ptr_Function__arr_float_uint_1 Function %65
%lv1353_local = OpVariable %_ptr_Function__arr_uint_uint_1 Function %69
%NT_matmul_rf_local_1 = OpVariable %_ptr_Function__arr_float_uint_1 Function %65
         %41 = OpCompositeExtract %uint %blockIdx 2
         %42 = OpCompositeExtract %uint %gridDim 0
         %43 = OpIMul %uint %41 %42
         %44 = OpCompositeExtract %uint %blockIdx 0
         %45 = OpIAdd %uint %43 %44
         %46 = OpAccessChain %_ptr_Uniform_uint %20 %uint_0 %uint_0
         %49 = OpLoad %uint %46 None
         %50 = OpUGreaterThan %bool %45 %49
               OpSelectionMerge %52 None
               OpBranchConditional %50 %53 %52
         %53 = OpLabel
               OpReturn
         %52 = OpLabel
         %54 = OpCompositeExtract %uint %blockIdx 2
         %55 = OpCompositeExtract %uint %gridDim 0
         %56 = OpIMul %uint %54 %55
         %57 = OpCompositeExtract %uint %blockIdx 0
         %58 = OpIAdd %uint %56 %57
       %v__1 = OpBitcast %int %58
         %71 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
               OpStore %71 %float_0 None
         %74 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
         %76 = OpIMul %int %v__1 %int_448
         %78 = OpCompositeExtract %uint %threadIdx 0
         %79 = OpBitcast %int %78
         %80 = OpIAdd %int %76 %79
         %81 = OpAccessChain %_ptr_StorageBuffer_uint %6 %uint_0 %80
         %83 = OpLoad %uint %81 None
               OpStore %74 %83 None
         %84 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
         %85 = OpCompositeExtract %uint %threadIdx 0
         %86 = OpBitcast %int %85
         %87 = OpIMul %int %86 %int_8
         %89 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %87
         %91 = OpLoad %float %89 None
         %92 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
         %93 = OpLoad %uint %92 None
         %94 = OpBitwiseAnd %uint %uint_0 %uint_31
         %96 = OpShiftRightLogical %uint %93 %94
         %97 = OpBitwiseAnd %uint %96 %uint_15
         %99 = OpConvertUToF %float %97
        %100 = OpFSub %float %99 %float_7
        %102 = OpIMul %int %v__1 %int_112
        %104 = OpCompositeExtract %uint %threadIdx 0
        %105 = OpBitcast %int %104
        %106 = OpBitwiseAnd %uint %uint_2 %uint_31
        %108 = OpShiftRightArithmetic %int %105 %106
        %109 = OpIAdd %int %102 %108
        %110 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %109
        %111 = OpLoad %float %110 None
        %112 = OpFMul %float %100 %111
        %113 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %114 = OpLoad %float %113 None
        %115 = OpExtInst %float %116 Fma %91 %112 %114
               OpStore %84 %115 None
        %117 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %118 = OpCompositeExtract %uint %threadIdx 0
        %119 = OpBitcast %int %118
        %120 = OpIMul %int %119 %int_8
        %121 = OpIAdd %int %120 %int_1
        %123 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %121
        %124 = OpLoad %float %123 None
        %125 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %126 = OpLoad %uint %125 None
        %127 = OpBitwiseAnd %uint %uint_4 %uint_31
        %129 = OpShiftRightLogical %uint %126 %127
        %130 = OpBitwiseAnd %uint %129 %uint_15
        %131 = OpConvertUToF %float %130
        %132 = OpFSub %float %131 %float_7
        %133 = OpIMul %int %v__1 %int_112
        %134 = OpCompositeExtract %uint %threadIdx 0
        %135 = OpBitcast %int %134
        %136 = OpBitwiseAnd %uint %uint_2 %uint_31
        %137 = OpShiftRightArithmetic %int %135 %136
        %138 = OpIAdd %int %133 %137
        %139 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %138
        %140 = OpLoad %float %139 None
        %141 = OpFMul %float %132 %140
        %142 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %143 = OpLoad %float %142 None
        %144 = OpExtInst %float %116 Fma %124 %141 %143
               OpStore %117 %144 None
        %145 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %146 = OpCompositeExtract %uint %threadIdx 0
        %147 = OpBitcast %int %146
        %148 = OpIMul %int %147 %int_8
        %149 = OpIAdd %int %148 %int_2
        %151 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %149
        %152 = OpLoad %float %151 None
        %153 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %154 = OpLoad %uint %153 None
        %155 = OpBitwiseAnd %uint %uint_8 %uint_31
        %157 = OpShiftRightLogical %uint %154 %155
        %158 = OpBitwiseAnd %uint %157 %uint_15
        %159 = OpConvertUToF %float %158
        %160 = OpFSub %float %159 %float_7
        %161 = OpIMul %int %v__1 %int_112
        %162 = OpCompositeExtract %uint %threadIdx 0
        %163 = OpBitcast %int %162
        %164 = OpBitwiseAnd %uint %uint_2 %uint_31
        %165 = OpShiftRightArithmetic %int %163 %164
        %166 = OpIAdd %int %161 %165
        %167 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %166
        %168 = OpLoad %float %167 None
        %169 = OpFMul %float %160 %168
        %170 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %171 = OpLoad %float %170 None
        %172 = OpExtInst %float %116 Fma %152 %169 %171
               OpStore %145 %172 None
        %173 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %174 = OpCompositeExtract %uint %threadIdx 0
        %175 = OpBitcast %int %174
        %176 = OpIMul %int %175 %int_8
        %177 = OpIAdd %int %176 %int_3
        %179 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %177
        %180 = OpLoad %float %179 None
        %181 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %182 = OpLoad %uint %181 None
        %183 = OpBitwiseAnd %uint %uint_12 %uint_31
        %185 = OpShiftRightLogical %uint %182 %183
        %186 = OpBitwiseAnd %uint %185 %uint_15
        %187 = OpConvertUToF %float %186
        %188 = OpFSub %float %187 %float_7
        %189 = OpIMul %int %v__1 %int_112
        %190 = OpCompositeExtract %uint %threadIdx 0
        %191 = OpBitcast %int %190
        %192 = OpBitwiseAnd %uint %uint_2 %uint_31
        %193 = OpShiftRightArithmetic %int %191 %192
        %194 = OpIAdd %int %189 %193
        %195 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %194
        %196 = OpLoad %float %195 None
        %197 = OpFMul %float %188 %196
        %198 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %199 = OpLoad %float %198 None
        %200 = OpExtInst %float %116 Fma %180 %197 %199
               OpStore %173 %200 None
        %201 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %202 = OpCompositeExtract %uint %threadIdx 0
        %203 = OpBitcast %int %202
        %204 = OpIMul %int %203 %int_8
        %205 = OpIAdd %int %204 %int_4
        %207 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %205
        %208 = OpLoad %float %207 None
        %209 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %210 = OpLoad %uint %209 None
        %211 = OpBitwiseAnd %uint %uint_16 %uint_31
        %213 = OpShiftRightLogical %uint %210 %211
        %214 = OpBitwiseAnd %uint %213 %uint_15
        %215 = OpConvertUToF %float %214
        %216 = OpFSub %float %215 %float_7
        %217 = OpIMul %int %v__1 %int_112
        %218 = OpCompositeExtract %uint %threadIdx 0
        %219 = OpBitcast %int %218
        %220 = OpBitwiseAnd %uint %uint_2 %uint_31
        %221 = OpShiftRightArithmetic %int %219 %220
        %222 = OpIAdd %int %217 %221
        %223 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %222
        %224 = OpLoad %float %223 None
        %225 = OpFMul %float %216 %224
        %226 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %227 = OpLoad %float %226 None
        %228 = OpExtInst %float %116 Fma %208 %225 %227
               OpStore %201 %228 None
        %229 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %230 = OpCompositeExtract %uint %threadIdx 0
        %231 = OpBitcast %int %230
        %232 = OpIMul %int %231 %int_8
        %233 = OpIAdd %int %232 %int_5
        %235 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %233
        %236 = OpLoad %float %235 None
        %237 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %238 = OpLoad %uint %237 None
        %239 = OpBitwiseAnd %uint %uint_20 %uint_31
        %241 = OpShiftRightLogical %uint %238 %239
        %242 = OpBitwiseAnd %uint %241 %uint_15
        %243 = OpConvertUToF %float %242
        %244 = OpFSub %float %243 %float_7
        %245 = OpIMul %int %v__1 %int_112
        %246 = OpCompositeExtract %uint %threadIdx 0
        %247 = OpBitcast %int %246
        %248 = OpBitwiseAnd %uint %uint_2 %uint_31
        %249 = OpShiftRightArithmetic %int %247 %248
        %250 = OpIAdd %int %245 %249
        %251 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %250
        %252 = OpLoad %float %251 None
        %253 = OpFMul %float %244 %252
        %254 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %255 = OpLoad %float %254 None
        %256 = OpExtInst %float %116 Fma %236 %253 %255
               OpStore %229 %256 None
        %257 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %258 = OpCompositeExtract %uint %threadIdx 0
        %259 = OpBitcast %int %258
        %260 = OpIMul %int %259 %int_8
        %261 = OpIAdd %int %260 %int_6
        %263 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %261
        %264 = OpLoad %float %263 None
        %265 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %266 = OpLoad %uint %265 None
        %267 = OpBitwiseAnd %uint %uint_24 %uint_31
        %269 = OpShiftRightLogical %uint %266 %267
        %270 = OpBitwiseAnd %uint %269 %uint_15
        %271 = OpConvertUToF %float %270
        %272 = OpFSub %float %271 %float_7
        %273 = OpIMul %int %v__1 %int_112
        %274 = OpCompositeExtract %uint %threadIdx 0
        %275 = OpBitcast %int %274
        %276 = OpBitwiseAnd %uint %uint_2 %uint_31
        %277 = OpShiftRightArithmetic %int %275 %276
        %278 = OpIAdd %int %273 %277
        %279 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %278
        %280 = OpLoad %float %279 None
        %281 = OpFMul %float %272 %280
        %282 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %283 = OpLoad %float %282 None
        %284 = OpExtInst %float %116 Fma %264 %281 %283
               OpStore %257 %284 None
        %285 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %286 = OpCompositeExtract %uint %threadIdx 0
        %287 = OpBitcast %int %286
        %288 = OpIMul %int %287 %int_8
        %289 = OpIAdd %int %288 %int_7
        %291 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %289
        %292 = OpLoad %float %291 None
        %293 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %294 = OpLoad %uint %293 None
        %295 = OpBitwiseAnd %uint %uint_28 %uint_31
        %297 = OpShiftRightLogical %uint %294 %295
        %298 = OpBitwiseAnd %uint %297 %uint_15
        %299 = OpConvertUToF %float %298
        %300 = OpFSub %float %299 %float_7
        %301 = OpIMul %int %v__1 %int_112
        %302 = OpCompositeExtract %uint %threadIdx 0
        %303 = OpBitcast %int %302
        %304 = OpBitwiseAnd %uint %uint_2 %uint_31
        %305 = OpShiftRightArithmetic %int %303 %304
        %306 = OpIAdd %int %301 %305
        %307 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %306
        %308 = OpLoad %float %307 None
        %309 = OpFMul %float %300 %308
        %310 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %311 = OpLoad %float %310 None
        %312 = OpExtInst %float %116 Fma %292 %309 %311
               OpStore %285 %312 None
        %313 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %314 = OpIMul %int %v__1 %int_448
        %315 = OpCompositeExtract %uint %threadIdx 0
        %316 = OpBitcast %int %315
        %317 = OpIAdd %int %314 %316
        %318 = OpIAdd %int %317 %int_64
        %320 = OpAccessChain %_ptr_StorageBuffer_uint %6 %uint_0 %318
        %321 = OpLoad %uint %320 None
               OpStore %313 %321 None
        %322 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %323 = OpCompositeExtract %uint %threadIdx 0
        %324 = OpBitcast %int %323
        %325 = OpIMul %int %324 %int_8
        %326 = OpIAdd %int %325 %int_512
        %328 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %326
        %329 = OpLoad %float %328 None
        %330 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %331 = OpLoad %uint %330 None
        %332 = OpBitwiseAnd %uint %uint_0 %uint_31
        %333 = OpShiftRightLogical %uint %331 %332
        %334 = OpBitwiseAnd %uint %333 %uint_15
        %335 = OpConvertUToF %float %334
        %336 = OpFSub %float %335 %float_7
        %337 = OpIMul %int %v__1 %int_112
        %338 = OpCompositeExtract %uint %threadIdx 0
        %339 = OpBitcast %int %338
        %340 = OpBitwiseAnd %uint %uint_2 %uint_31
        %341 = OpShiftRightArithmetic %int %339 %340
        %342 = OpIAdd %int %337 %341
        %343 = OpIAdd %int %342 %int_16
        %345 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %343
        %346 = OpLoad %float %345 None
        %347 = OpFMul %float %336 %346
        %348 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %349 = OpLoad %float %348 None
        %350 = OpExtInst %float %116 Fma %329 %347 %349
               OpStore %322 %350 None
        %351 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %352 = OpCompositeExtract %uint %threadIdx 0
        %353 = OpBitcast %int %352
        %354 = OpIMul %int %353 %int_8
        %355 = OpIAdd %int %354 %int_513
        %357 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %355
        %358 = OpLoad %float %357 None
        %359 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %360 = OpLoad %uint %359 None
        %361 = OpBitwiseAnd %uint %uint_4 %uint_31
        %362 = OpShiftRightLogical %uint %360 %361
        %363 = OpBitwiseAnd %uint %362 %uint_15
        %364 = OpConvertUToF %float %363
        %365 = OpFSub %float %364 %float_7
        %366 = OpIMul %int %v__1 %int_112
        %367 = OpCompositeExtract %uint %threadIdx 0
        %368 = OpBitcast %int %367
        %369 = OpBitwiseAnd %uint %uint_2 %uint_31
        %370 = OpShiftRightArithmetic %int %368 %369
        %371 = OpIAdd %int %366 %370
        %372 = OpIAdd %int %371 %int_16
        %373 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %372
        %374 = OpLoad %float %373 None
        %375 = OpFMul %float %365 %374
        %376 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %377 = OpLoad %float %376 None
        %378 = OpExtInst %float %116 Fma %358 %375 %377
               OpStore %351 %378 None
        %379 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %380 = OpCompositeExtract %uint %threadIdx 0
        %381 = OpBitcast %int %380
        %382 = OpIMul %int %381 %int_8
        %383 = OpIAdd %int %382 %int_514
        %385 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %383
        %386 = OpLoad %float %385 None
        %387 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %388 = OpLoad %uint %387 None
        %389 = OpBitwiseAnd %uint %uint_8 %uint_31
        %390 = OpShiftRightLogical %uint %388 %389
        %391 = OpBitwiseAnd %uint %390 %uint_15
        %392 = OpConvertUToF %float %391
        %393 = OpFSub %float %392 %float_7
        %394 = OpIMul %int %v__1 %int_112
        %395 = OpCompositeExtract %uint %threadIdx 0
        %396 = OpBitcast %int %395
        %397 = OpBitwiseAnd %uint %uint_2 %uint_31
        %398 = OpShiftRightArithmetic %int %396 %397
        %399 = OpIAdd %int %394 %398
        %400 = OpIAdd %int %399 %int_16
        %401 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %400
        %402 = OpLoad %float %401 None
        %403 = OpFMul %float %393 %402
        %404 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %405 = OpLoad %float %404 None
        %406 = OpExtInst %float %116 Fma %386 %403 %405
               OpStore %379 %406 None
        %407 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %408 = OpCompositeExtract %uint %threadIdx 0
        %409 = OpBitcast %int %408
        %410 = OpIMul %int %409 %int_8
        %411 = OpIAdd %int %410 %int_515
        %413 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %411
        %414 = OpLoad %float %413 None
        %415 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %416 = OpLoad %uint %415 None
        %417 = OpBitwiseAnd %uint %uint_12 %uint_31
        %418 = OpShiftRightLogical %uint %416 %417
        %419 = OpBitwiseAnd %uint %418 %uint_15
        %420 = OpConvertUToF %float %419
        %421 = OpFSub %float %420 %float_7
        %422 = OpIMul %int %v__1 %int_112
        %423 = OpCompositeExtract %uint %threadIdx 0
        %424 = OpBitcast %int %423
        %425 = OpBitwiseAnd %uint %uint_2 %uint_31
        %426 = OpShiftRightArithmetic %int %424 %425
        %427 = OpIAdd %int %422 %426
        %428 = OpIAdd %int %427 %int_16
        %429 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %428
        %430 = OpLoad %float %429 None
        %431 = OpFMul %float %421 %430
        %432 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %433 = OpLoad %float %432 None
        %434 = OpExtInst %float %116 Fma %414 %431 %433
               OpStore %407 %434 None
        %435 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %436 = OpCompositeExtract %uint %threadIdx 0
        %437 = OpBitcast %int %436
        %438 = OpIMul %int %437 %int_8
        %439 = OpIAdd %int %438 %int_516
        %441 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %439
        %442 = OpLoad %float %441 None
        %443 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %444 = OpLoad %uint %443 None
        %445 = OpBitwiseAnd %uint %uint_16 %uint_31
        %446 = OpShiftRightLogical %uint %444 %445
        %447 = OpBitwiseAnd %uint %446 %uint_15
        %448 = OpConvertUToF %float %447
        %449 = OpFSub %float %448 %float_7
        %450 = OpIMul %int %v__1 %int_112
        %451 = OpCompositeExtract %uint %threadIdx 0
        %452 = OpBitcast %int %451
        %453 = OpBitwiseAnd %uint %uint_2 %uint_31
        %454 = OpShiftRightArithmetic %int %452 %453
        %455 = OpIAdd %int %450 %454
        %456 = OpIAdd %int %455 %int_16
        %457 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %456
        %458 = OpLoad %float %457 None
        %459 = OpFMul %float %449 %458
        %460 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %461 = OpLoad %float %460 None
        %462 = OpExtInst %float %116 Fma %442 %459 %461
               OpStore %435 %462 None
        %463 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %464 = OpCompositeExtract %uint %threadIdx 0
        %465 = OpBitcast %int %464
        %466 = OpIMul %int %465 %int_8
        %467 = OpIAdd %int %466 %int_517
        %469 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %467
        %470 = OpLoad %float %469 None
        %471 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %472 = OpLoad %uint %471 None
        %473 = OpBitwiseAnd %uint %uint_20 %uint_31
        %474 = OpShiftRightLogical %uint %472 %473
        %475 = OpBitwiseAnd %uint %474 %uint_15
        %476 = OpConvertUToF %float %475
        %477 = OpFSub %float %476 %float_7
        %478 = OpIMul %int %v__1 %int_112
        %479 = OpCompositeExtract %uint %threadIdx 0
        %480 = OpBitcast %int %479
        %481 = OpBitwiseAnd %uint %uint_2 %uint_31
        %482 = OpShiftRightArithmetic %int %480 %481
        %483 = OpIAdd %int %478 %482
        %484 = OpIAdd %int %483 %int_16
        %485 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %484
        %486 = OpLoad %float %485 None
        %487 = OpFMul %float %477 %486
        %488 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %489 = OpLoad %float %488 None
        %490 = OpExtInst %float %116 Fma %470 %487 %489
               OpStore %463 %490 None
        %491 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %492 = OpCompositeExtract %uint %threadIdx 0
        %493 = OpBitcast %int %492
        %494 = OpIMul %int %493 %int_8
        %495 = OpIAdd %int %494 %int_518
        %497 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %495
        %498 = OpLoad %float %497 None
        %499 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %500 = OpLoad %uint %499 None
        %501 = OpBitwiseAnd %uint %uint_24 %uint_31
        %502 = OpShiftRightLogical %uint %500 %501
        %503 = OpBitwiseAnd %uint %502 %uint_15
        %504 = OpConvertUToF %float %503
        %505 = OpFSub %float %504 %float_7
        %506 = OpIMul %int %v__1 %int_112
        %507 = OpCompositeExtract %uint %threadIdx 0
        %508 = OpBitcast %int %507
        %509 = OpBitwiseAnd %uint %uint_2 %uint_31
        %510 = OpShiftRightArithmetic %int %508 %509
        %511 = OpIAdd %int %506 %510
        %512 = OpIAdd %int %511 %int_16
        %513 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %512
        %514 = OpLoad %float %513 None
        %515 = OpFMul %float %505 %514
        %516 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %517 = OpLoad %float %516 None
        %518 = OpExtInst %float %116 Fma %498 %515 %517
               OpStore %491 %518 None
        %519 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %520 = OpCompositeExtract %uint %threadIdx 0
        %521 = OpBitcast %int %520
        %522 = OpIMul %int %521 %int_8
        %523 = OpIAdd %int %522 %int_519
        %525 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %523
        %526 = OpLoad %float %525 None
        %527 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %528 = OpLoad %uint %527 None
        %529 = OpBitwiseAnd %uint %uint_28 %uint_31
        %530 = OpShiftRightLogical %uint %528 %529
        %531 = OpBitwiseAnd %uint %530 %uint_15
        %532 = OpConvertUToF %float %531
        %533 = OpFSub %float %532 %float_7
        %534 = OpIMul %int %v__1 %int_112
        %535 = OpCompositeExtract %uint %threadIdx 0
        %536 = OpBitcast %int %535
        %537 = OpBitwiseAnd %uint %uint_2 %uint_31
        %538 = OpShiftRightArithmetic %int %536 %537
        %539 = OpIAdd %int %534 %538
        %540 = OpIAdd %int %539 %int_16
        %541 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %540
        %542 = OpLoad %float %541 None
        %543 = OpFMul %float %533 %542
        %544 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %545 = OpLoad %float %544 None
        %546 = OpExtInst %float %116 Fma %526 %543 %545
               OpStore %519 %546 None
        %547 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %548 = OpIMul %int %v__1 %int_448
        %549 = OpCompositeExtract %uint %threadIdx 0
        %550 = OpBitcast %int %549
        %551 = OpIAdd %int %548 %550
        %552 = OpIAdd %int %551 %int_128
        %554 = OpAccessChain %_ptr_StorageBuffer_uint %6 %uint_0 %552
        %555 = OpLoad %uint %554 None
               OpStore %547 %555 None
        %556 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %557 = OpCompositeExtract %uint %threadIdx 0
        %558 = OpBitcast %int %557
        %559 = OpIMul %int %558 %int_8
        %560 = OpIAdd %int %559 %int_1024
        %562 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %560
        %563 = OpLoad %float %562 None
        %564 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %565 = OpLoad %uint %564 None
        %566 = OpBitwiseAnd %uint %uint_0 %uint_31
        %567 = OpShiftRightLogical %uint %565 %566
        %568 = OpBitwiseAnd %uint %567 %uint_15
        %569 = OpConvertUToF %float %568
        %570 = OpFSub %float %569 %float_7
        %571 = OpIMul %int %v__1 %int_112
        %572 = OpCompositeExtract %uint %threadIdx 0
        %573 = OpBitcast %int %572
        %574 = OpBitwiseAnd %uint %uint_2 %uint_31
        %575 = OpShiftRightArithmetic %int %573 %574
        %576 = OpIAdd %int %571 %575
        %577 = OpIAdd %int %576 %int_32
        %579 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %577
        %580 = OpLoad %float %579 None
        %581 = OpFMul %float %570 %580
        %582 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %583 = OpLoad %float %582 None
        %584 = OpExtInst %float %116 Fma %563 %581 %583
               OpStore %556 %584 None
        %585 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %586 = OpCompositeExtract %uint %threadIdx 0
        %587 = OpBitcast %int %586
        %588 = OpIMul %int %587 %int_8
        %589 = OpIAdd %int %588 %int_1025
        %591 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %589
        %592 = OpLoad %float %591 None
        %593 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %594 = OpLoad %uint %593 None
        %595 = OpBitwiseAnd %uint %uint_4 %uint_31
        %596 = OpShiftRightLogical %uint %594 %595
        %597 = OpBitwiseAnd %uint %596 %uint_15
        %598 = OpConvertUToF %float %597
        %599 = OpFSub %float %598 %float_7
        %600 = OpIMul %int %v__1 %int_112
        %601 = OpCompositeExtract %uint %threadIdx 0
        %602 = OpBitcast %int %601
        %603 = OpBitwiseAnd %uint %uint_2 %uint_31
        %604 = OpShiftRightArithmetic %int %602 %603
        %605 = OpIAdd %int %600 %604
        %606 = OpIAdd %int %605 %int_32
        %607 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %606
        %608 = OpLoad %float %607 None
        %609 = OpFMul %float %599 %608
        %610 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %611 = OpLoad %float %610 None
        %612 = OpExtInst %float %116 Fma %592 %609 %611
               OpStore %585 %612 None
        %613 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %614 = OpCompositeExtract %uint %threadIdx 0
        %615 = OpBitcast %int %614
        %616 = OpIMul %int %615 %int_8
        %617 = OpIAdd %int %616 %int_1026
        %619 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %617
        %620 = OpLoad %float %619 None
        %621 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %622 = OpLoad %uint %621 None
        %623 = OpBitwiseAnd %uint %uint_8 %uint_31
        %624 = OpShiftRightLogical %uint %622 %623
        %625 = OpBitwiseAnd %uint %624 %uint_15
        %626 = OpConvertUToF %float %625
        %627 = OpFSub %float %626 %float_7
        %628 = OpIMul %int %v__1 %int_112
        %629 = OpCompositeExtract %uint %threadIdx 0
        %630 = OpBitcast %int %629
        %631 = OpBitwiseAnd %uint %uint_2 %uint_31
        %632 = OpShiftRightArithmetic %int %630 %631
        %633 = OpIAdd %int %628 %632
        %634 = OpIAdd %int %633 %int_32
        %635 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %634
        %636 = OpLoad %float %635 None
        %637 = OpFMul %float %627 %636
        %638 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %639 = OpLoad %float %638 None
        %640 = OpExtInst %float %116 Fma %620 %637 %639
               OpStore %613 %640 None
        %641 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %642 = OpCompositeExtract %uint %threadIdx 0
        %643 = OpBitcast %int %642
        %644 = OpIMul %int %643 %int_8
        %645 = OpIAdd %int %644 %int_1027
        %647 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %645
        %648 = OpLoad %float %647 None
        %649 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %650 = OpLoad %uint %649 None
        %651 = OpBitwiseAnd %uint %uint_12 %uint_31
        %652 = OpShiftRightLogical %uint %650 %651
        %653 = OpBitwiseAnd %uint %652 %uint_15
        %654 = OpConvertUToF %float %653
        %655 = OpFSub %float %654 %float_7
        %656 = OpIMul %int %v__1 %int_112
        %657 = OpCompositeExtract %uint %threadIdx 0
        %658 = OpBitcast %int %657
        %659 = OpBitwiseAnd %uint %uint_2 %uint_31
        %660 = OpShiftRightArithmetic %int %658 %659
        %661 = OpIAdd %int %656 %660
        %662 = OpIAdd %int %661 %int_32
        %663 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %662
        %664 = OpLoad %float %663 None
        %665 = OpFMul %float %655 %664
        %666 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %667 = OpLoad %float %666 None
        %668 = OpExtInst %float %116 Fma %648 %665 %667
               OpStore %641 %668 None
        %669 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %670 = OpCompositeExtract %uint %threadIdx 0
        %671 = OpBitcast %int %670
        %672 = OpIMul %int %671 %int_8
        %673 = OpIAdd %int %672 %int_1028
        %675 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %673
        %676 = OpLoad %float %675 None
        %677 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %678 = OpLoad %uint %677 None
        %679 = OpBitwiseAnd %uint %uint_16 %uint_31
        %680 = OpShiftRightLogical %uint %678 %679
        %681 = OpBitwiseAnd %uint %680 %uint_15
        %682 = OpConvertUToF %float %681
        %683 = OpFSub %float %682 %float_7
        %684 = OpIMul %int %v__1 %int_112
        %685 = OpCompositeExtract %uint %threadIdx 0
        %686 = OpBitcast %int %685
        %687 = OpBitwiseAnd %uint %uint_2 %uint_31
        %688 = OpShiftRightArithmetic %int %686 %687
        %689 = OpIAdd %int %684 %688
        %690 = OpIAdd %int %689 %int_32
        %691 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %690
        %692 = OpLoad %float %691 None
        %693 = OpFMul %float %683 %692
        %694 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %695 = OpLoad %float %694 None
        %696 = OpExtInst %float %116 Fma %676 %693 %695
               OpStore %669 %696 None
        %697 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %698 = OpCompositeExtract %uint %threadIdx 0
        %699 = OpBitcast %int %698
        %700 = OpIMul %int %699 %int_8
        %701 = OpIAdd %int %700 %int_1029
        %703 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %701
        %704 = OpLoad %float %703 None
        %705 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %706 = OpLoad %uint %705 None
        %707 = OpBitwiseAnd %uint %uint_20 %uint_31
        %708 = OpShiftRightLogical %uint %706 %707
        %709 = OpBitwiseAnd %uint %708 %uint_15
        %710 = OpConvertUToF %float %709
        %711 = OpFSub %float %710 %float_7
        %712 = OpIMul %int %v__1 %int_112
        %713 = OpCompositeExtract %uint %threadIdx 0
        %714 = OpBitcast %int %713
        %715 = OpBitwiseAnd %uint %uint_2 %uint_31
        %716 = OpShiftRightArithmetic %int %714 %715
        %717 = OpIAdd %int %712 %716
        %718 = OpIAdd %int %717 %int_32
        %719 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %718
        %720 = OpLoad %float %719 None
        %721 = OpFMul %float %711 %720
        %722 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %723 = OpLoad %float %722 None
        %724 = OpExtInst %float %116 Fma %704 %721 %723
               OpStore %697 %724 None
        %725 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %726 = OpCompositeExtract %uint %threadIdx 0
        %727 = OpBitcast %int %726
        %728 = OpIMul %int %727 %int_8
        %729 = OpIAdd %int %728 %int_1030
        %731 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %729
        %732 = OpLoad %float %731 None
        %733 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %734 = OpLoad %uint %733 None
        %735 = OpBitwiseAnd %uint %uint_24 %uint_31
        %736 = OpShiftRightLogical %uint %734 %735
        %737 = OpBitwiseAnd %uint %736 %uint_15
        %738 = OpConvertUToF %float %737
        %739 = OpFSub %float %738 %float_7
        %740 = OpIMul %int %v__1 %int_112
        %741 = OpCompositeExtract %uint %threadIdx 0
        %742 = OpBitcast %int %741
        %743 = OpBitwiseAnd %uint %uint_2 %uint_31
        %744 = OpShiftRightArithmetic %int %742 %743
        %745 = OpIAdd %int %740 %744
        %746 = OpIAdd %int %745 %int_32
        %747 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %746
        %748 = OpLoad %float %747 None
        %749 = OpFMul %float %739 %748
        %750 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %751 = OpLoad %float %750 None
        %752 = OpExtInst %float %116 Fma %732 %749 %751
               OpStore %725 %752 None
        %753 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %754 = OpCompositeExtract %uint %threadIdx 0
        %755 = OpBitcast %int %754
        %756 = OpIMul %int %755 %int_8
        %757 = OpIAdd %int %756 %int_1031
        %759 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %757
        %760 = OpLoad %float %759 None
        %761 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %762 = OpLoad %uint %761 None
        %763 = OpBitwiseAnd %uint %uint_28 %uint_31
        %764 = OpShiftRightLogical %uint %762 %763
        %765 = OpBitwiseAnd %uint %764 %uint_15
        %766 = OpConvertUToF %float %765
        %767 = OpFSub %float %766 %float_7
        %768 = OpIMul %int %v__1 %int_112
        %769 = OpCompositeExtract %uint %threadIdx 0
        %770 = OpBitcast %int %769
        %771 = OpBitwiseAnd %uint %uint_2 %uint_31
        %772 = OpShiftRightArithmetic %int %770 %771
        %773 = OpIAdd %int %768 %772
        %774 = OpIAdd %int %773 %int_32
        %775 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %774
        %776 = OpLoad %float %775 None
        %777 = OpFMul %float %767 %776
        %778 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %779 = OpLoad %float %778 None
        %780 = OpExtInst %float %116 Fma %760 %777 %779
               OpStore %753 %780 None
        %781 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %782 = OpIMul %int %v__1 %int_448
        %783 = OpCompositeExtract %uint %threadIdx 0
        %784 = OpBitcast %int %783
        %785 = OpIAdd %int %782 %784
        %786 = OpIAdd %int %785 %int_192
        %788 = OpAccessChain %_ptr_StorageBuffer_uint %6 %uint_0 %786
        %789 = OpLoad %uint %788 None
               OpStore %781 %789 None
        %790 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %791 = OpCompositeExtract %uint %threadIdx 0
        %792 = OpBitcast %int %791
        %793 = OpIMul %int %792 %int_8
        %794 = OpIAdd %int %793 %int_1536
        %796 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %794
        %797 = OpLoad %float %796 None
        %798 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %799 = OpLoad %uint %798 None
        %800 = OpBitwiseAnd %uint %uint_0 %uint_31
        %801 = OpShiftRightLogical %uint %799 %800
        %802 = OpBitwiseAnd %uint %801 %uint_15
        %803 = OpConvertUToF %float %802
        %804 = OpFSub %float %803 %float_7
        %805 = OpIMul %int %v__1 %int_112
        %806 = OpCompositeExtract %uint %threadIdx 0
        %807 = OpBitcast %int %806
        %808 = OpBitwiseAnd %uint %uint_2 %uint_31
        %809 = OpShiftRightArithmetic %int %807 %808
        %810 = OpIAdd %int %805 %809
        %811 = OpIAdd %int %810 %int_48
        %813 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %811
        %814 = OpLoad %float %813 None
        %815 = OpFMul %float %804 %814
        %816 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %817 = OpLoad %float %816 None
        %818 = OpExtInst %float %116 Fma %797 %815 %817
               OpStore %790 %818 None
        %819 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %820 = OpCompositeExtract %uint %threadIdx 0
        %821 = OpBitcast %int %820
        %822 = OpIMul %int %821 %int_8
        %823 = OpIAdd %int %822 %int_1537
        %825 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %823
        %826 = OpLoad %float %825 None
        %827 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %828 = OpLoad %uint %827 None
        %829 = OpBitwiseAnd %uint %uint_4 %uint_31
        %830 = OpShiftRightLogical %uint %828 %829
        %831 = OpBitwiseAnd %uint %830 %uint_15
        %832 = OpConvertUToF %float %831
        %833 = OpFSub %float %832 %float_7
        %834 = OpIMul %int %v__1 %int_112
        %835 = OpCompositeExtract %uint %threadIdx 0
        %836 = OpBitcast %int %835
        %837 = OpBitwiseAnd %uint %uint_2 %uint_31
        %838 = OpShiftRightArithmetic %int %836 %837
        %839 = OpIAdd %int %834 %838
        %840 = OpIAdd %int %839 %int_48
        %841 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %840
        %842 = OpLoad %float %841 None
        %843 = OpFMul %float %833 %842
        %844 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %845 = OpLoad %float %844 None
        %846 = OpExtInst %float %116 Fma %826 %843 %845
               OpStore %819 %846 None
        %847 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %848 = OpCompositeExtract %uint %threadIdx 0
        %849 = OpBitcast %int %848
        %850 = OpIMul %int %849 %int_8
        %851 = OpIAdd %int %850 %int_1538
        %853 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %851
        %854 = OpLoad %float %853 None
        %855 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %856 = OpLoad %uint %855 None
        %857 = OpBitwiseAnd %uint %uint_8 %uint_31
        %858 = OpShiftRightLogical %uint %856 %857
        %859 = OpBitwiseAnd %uint %858 %uint_15
        %860 = OpConvertUToF %float %859
        %861 = OpFSub %float %860 %float_7
        %862 = OpIMul %int %v__1 %int_112
        %863 = OpCompositeExtract %uint %threadIdx 0
        %864 = OpBitcast %int %863
        %865 = OpBitwiseAnd %uint %uint_2 %uint_31
        %866 = OpShiftRightArithmetic %int %864 %865
        %867 = OpIAdd %int %862 %866
        %868 = OpIAdd %int %867 %int_48
        %869 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %868
        %870 = OpLoad %float %869 None
        %871 = OpFMul %float %861 %870
        %872 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %873 = OpLoad %float %872 None
        %874 = OpExtInst %float %116 Fma %854 %871 %873
               OpStore %847 %874 None
        %875 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %876 = OpCompositeExtract %uint %threadIdx 0
        %877 = OpBitcast %int %876
        %878 = OpIMul %int %877 %int_8
        %879 = OpIAdd %int %878 %int_1539
        %881 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %879
        %882 = OpLoad %float %881 None
        %883 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %884 = OpLoad %uint %883 None
        %885 = OpBitwiseAnd %uint %uint_12 %uint_31
        %886 = OpShiftRightLogical %uint %884 %885
        %887 = OpBitwiseAnd %uint %886 %uint_15
        %888 = OpConvertUToF %float %887
        %889 = OpFSub %float %888 %float_7
        %890 = OpIMul %int %v__1 %int_112
        %891 = OpCompositeExtract %uint %threadIdx 0
        %892 = OpBitcast %int %891
        %893 = OpBitwiseAnd %uint %uint_2 %uint_31
        %894 = OpShiftRightArithmetic %int %892 %893
        %895 = OpIAdd %int %890 %894
        %896 = OpIAdd %int %895 %int_48
        %897 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %896
        %898 = OpLoad %float %897 None
        %899 = OpFMul %float %889 %898
        %900 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %901 = OpLoad %float %900 None
        %902 = OpExtInst %float %116 Fma %882 %899 %901
               OpStore %875 %902 None
        %903 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %904 = OpCompositeExtract %uint %threadIdx 0
        %905 = OpBitcast %int %904
        %906 = OpIMul %int %905 %int_8
        %907 = OpIAdd %int %906 %int_1540
        %909 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %907
        %910 = OpLoad %float %909 None
        %911 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %912 = OpLoad %uint %911 None
        %913 = OpBitwiseAnd %uint %uint_16 %uint_31
        %914 = OpShiftRightLogical %uint %912 %913
        %915 = OpBitwiseAnd %uint %914 %uint_15
        %916 = OpConvertUToF %float %915
        %917 = OpFSub %float %916 %float_7
        %918 = OpIMul %int %v__1 %int_112
        %919 = OpCompositeExtract %uint %threadIdx 0
        %920 = OpBitcast %int %919
        %921 = OpBitwiseAnd %uint %uint_2 %uint_31
        %922 = OpShiftRightArithmetic %int %920 %921
        %923 = OpIAdd %int %918 %922
        %924 = OpIAdd %int %923 %int_48
        %925 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %924
        %926 = OpLoad %float %925 None
        %927 = OpFMul %float %917 %926
        %928 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %929 = OpLoad %float %928 None
        %930 = OpExtInst %float %116 Fma %910 %927 %929
               OpStore %903 %930 None
        %931 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %932 = OpCompositeExtract %uint %threadIdx 0
        %933 = OpBitcast %int %932
        %934 = OpIMul %int %933 %int_8
        %935 = OpIAdd %int %934 %int_1541
        %937 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %935
        %938 = OpLoad %float %937 None
        %939 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %940 = OpLoad %uint %939 None
        %941 = OpBitwiseAnd %uint %uint_20 %uint_31
        %942 = OpShiftRightLogical %uint %940 %941
        %943 = OpBitwiseAnd %uint %942 %uint_15
        %944 = OpConvertUToF %float %943
        %945 = OpFSub %float %944 %float_7
        %946 = OpIMul %int %v__1 %int_112
        %947 = OpCompositeExtract %uint %threadIdx 0
        %948 = OpBitcast %int %947
        %949 = OpBitwiseAnd %uint %uint_2 %uint_31
        %950 = OpShiftRightArithmetic %int %948 %949
        %951 = OpIAdd %int %946 %950
        %952 = OpIAdd %int %951 %int_48
        %953 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %952
        %954 = OpLoad %float %953 None
        %955 = OpFMul %float %945 %954
        %956 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %957 = OpLoad %float %956 None
        %958 = OpExtInst %float %116 Fma %938 %955 %957
               OpStore %931 %958 None
        %959 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %960 = OpCompositeExtract %uint %threadIdx 0
        %961 = OpBitcast %int %960
        %962 = OpIMul %int %961 %int_8
        %963 = OpIAdd %int %962 %int_1542
        %965 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %963
        %966 = OpLoad %float %965 None
        %967 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %968 = OpLoad %uint %967 None
        %969 = OpBitwiseAnd %uint %uint_24 %uint_31
        %970 = OpShiftRightLogical %uint %968 %969
        %971 = OpBitwiseAnd %uint %970 %uint_15
        %972 = OpConvertUToF %float %971
        %973 = OpFSub %float %972 %float_7
        %974 = OpIMul %int %v__1 %int_112
        %975 = OpCompositeExtract %uint %threadIdx 0
        %976 = OpBitcast %int %975
        %977 = OpBitwiseAnd %uint %uint_2 %uint_31
        %978 = OpShiftRightArithmetic %int %976 %977
        %979 = OpIAdd %int %974 %978
        %980 = OpIAdd %int %979 %int_48
        %981 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %980
        %982 = OpLoad %float %981 None
        %983 = OpFMul %float %973 %982
        %984 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %985 = OpLoad %float %984 None
        %986 = OpExtInst %float %116 Fma %966 %983 %985
               OpStore %959 %986 None
        %987 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
        %988 = OpCompositeExtract %uint %threadIdx 0
        %989 = OpBitcast %int %988
        %990 = OpIMul %int %989 %int_8
        %991 = OpIAdd %int %990 %int_1543
        %993 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %991
        %994 = OpLoad %float %993 None
        %995 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
        %996 = OpLoad %uint %995 None
        %997 = OpBitwiseAnd %uint %uint_28 %uint_31
        %998 = OpShiftRightLogical %uint %996 %997
        %999 = OpBitwiseAnd %uint %998 %uint_15
       %1000 = OpConvertUToF %float %999
       %1001 = OpFSub %float %1000 %float_7
       %1002 = OpIMul %int %v__1 %int_112
       %1003 = OpCompositeExtract %uint %threadIdx 0
       %1004 = OpBitcast %int %1003
       %1005 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1006 = OpShiftRightArithmetic %int %1004 %1005
       %1007 = OpIAdd %int %1002 %1006
       %1008 = OpIAdd %int %1007 %int_48
       %1009 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1008
       %1010 = OpLoad %float %1009 None
       %1011 = OpFMul %float %1001 %1010
       %1012 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1013 = OpLoad %float %1012 None
       %1014 = OpExtInst %float %116 Fma %994 %1011 %1013
               OpStore %987 %1014 None
       %1015 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1016 = OpIMul %int %v__1 %int_448
       %1017 = OpCompositeExtract %uint %threadIdx 0
       %1018 = OpBitcast %int %1017
       %1019 = OpIAdd %int %1016 %1018
       %1020 = OpIAdd %int %1019 %int_256
       %1022 = OpAccessChain %_ptr_StorageBuffer_uint %6 %uint_0 %1020
       %1023 = OpLoad %uint %1022 None
               OpStore %1015 %1023 None
       %1024 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1025 = OpCompositeExtract %uint %threadIdx 0
       %1026 = OpBitcast %int %1025
       %1027 = OpIMul %int %1026 %int_8
       %1028 = OpIAdd %int %1027 %int_2048
       %1030 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1028
       %1031 = OpLoad %float %1030 None
       %1032 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1033 = OpLoad %uint %1032 None
       %1034 = OpBitwiseAnd %uint %uint_0 %uint_31
       %1035 = OpShiftRightLogical %uint %1033 %1034
       %1036 = OpBitwiseAnd %uint %1035 %uint_15
       %1037 = OpConvertUToF %float %1036
       %1038 = OpFSub %float %1037 %float_7
       %1039 = OpIMul %int %v__1 %int_112
       %1040 = OpCompositeExtract %uint %threadIdx 0
       %1041 = OpBitcast %int %1040
       %1042 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1043 = OpShiftRightArithmetic %int %1041 %1042
       %1044 = OpIAdd %int %1039 %1043
       %1045 = OpIAdd %int %1044 %int_64
       %1046 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1045
       %1047 = OpLoad %float %1046 None
       %1048 = OpFMul %float %1038 %1047
       %1049 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1050 = OpLoad %float %1049 None
       %1051 = OpExtInst %float %116 Fma %1031 %1048 %1050
               OpStore %1024 %1051 None
       %1052 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1053 = OpCompositeExtract %uint %threadIdx 0
       %1054 = OpBitcast %int %1053
       %1055 = OpIMul %int %1054 %int_8
       %1056 = OpIAdd %int %1055 %int_2049
       %1058 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1056
       %1059 = OpLoad %float %1058 None
       %1060 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1061 = OpLoad %uint %1060 None
       %1062 = OpBitwiseAnd %uint %uint_4 %uint_31
       %1063 = OpShiftRightLogical %uint %1061 %1062
       %1064 = OpBitwiseAnd %uint %1063 %uint_15
       %1065 = OpConvertUToF %float %1064
       %1066 = OpFSub %float %1065 %float_7
       %1067 = OpIMul %int %v__1 %int_112
       %1068 = OpCompositeExtract %uint %threadIdx 0
       %1069 = OpBitcast %int %1068
       %1070 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1071 = OpShiftRightArithmetic %int %1069 %1070
       %1072 = OpIAdd %int %1067 %1071
       %1073 = OpIAdd %int %1072 %int_64
       %1074 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1073
       %1075 = OpLoad %float %1074 None
       %1076 = OpFMul %float %1066 %1075
       %1077 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1078 = OpLoad %float %1077 None
       %1079 = OpExtInst %float %116 Fma %1059 %1076 %1078
               OpStore %1052 %1079 None
       %1080 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1081 = OpCompositeExtract %uint %threadIdx 0
       %1082 = OpBitcast %int %1081
       %1083 = OpIMul %int %1082 %int_8
       %1084 = OpIAdd %int %1083 %int_2050
       %1086 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1084
       %1087 = OpLoad %float %1086 None
       %1088 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1089 = OpLoad %uint %1088 None
       %1090 = OpBitwiseAnd %uint %uint_8 %uint_31
       %1091 = OpShiftRightLogical %uint %1089 %1090
       %1092 = OpBitwiseAnd %uint %1091 %uint_15
       %1093 = OpConvertUToF %float %1092
       %1094 = OpFSub %float %1093 %float_7
       %1095 = OpIMul %int %v__1 %int_112
       %1096 = OpCompositeExtract %uint %threadIdx 0
       %1097 = OpBitcast %int %1096
       %1098 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1099 = OpShiftRightArithmetic %int %1097 %1098
       %1100 = OpIAdd %int %1095 %1099
       %1101 = OpIAdd %int %1100 %int_64
       %1102 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1101
       %1103 = OpLoad %float %1102 None
       %1104 = OpFMul %float %1094 %1103
       %1105 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1106 = OpLoad %float %1105 None
       %1107 = OpExtInst %float %116 Fma %1087 %1104 %1106
               OpStore %1080 %1107 None
       %1108 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1109 = OpCompositeExtract %uint %threadIdx 0
       %1110 = OpBitcast %int %1109
       %1111 = OpIMul %int %1110 %int_8
       %1112 = OpIAdd %int %1111 %int_2051
       %1114 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1112
       %1115 = OpLoad %float %1114 None
       %1116 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1117 = OpLoad %uint %1116 None
       %1118 = OpBitwiseAnd %uint %uint_12 %uint_31
       %1119 = OpShiftRightLogical %uint %1117 %1118
       %1120 = OpBitwiseAnd %uint %1119 %uint_15
       %1121 = OpConvertUToF %float %1120
       %1122 = OpFSub %float %1121 %float_7
       %1123 = OpIMul %int %v__1 %int_112
       %1124 = OpCompositeExtract %uint %threadIdx 0
       %1125 = OpBitcast %int %1124
       %1126 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1127 = OpShiftRightArithmetic %int %1125 %1126
       %1128 = OpIAdd %int %1123 %1127
       %1129 = OpIAdd %int %1128 %int_64
       %1130 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1129
       %1131 = OpLoad %float %1130 None
       %1132 = OpFMul %float %1122 %1131
       %1133 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1134 = OpLoad %float %1133 None
       %1135 = OpExtInst %float %116 Fma %1115 %1132 %1134
               OpStore %1108 %1135 None
       %1136 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1137 = OpCompositeExtract %uint %threadIdx 0
       %1138 = OpBitcast %int %1137
       %1139 = OpIMul %int %1138 %int_8
       %1140 = OpIAdd %int %1139 %int_2052
       %1142 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1140
       %1143 = OpLoad %float %1142 None
       %1144 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1145 = OpLoad %uint %1144 None
       %1146 = OpBitwiseAnd %uint %uint_16 %uint_31
       %1147 = OpShiftRightLogical %uint %1145 %1146
       %1148 = OpBitwiseAnd %uint %1147 %uint_15
       %1149 = OpConvertUToF %float %1148
       %1150 = OpFSub %float %1149 %float_7
       %1151 = OpIMul %int %v__1 %int_112
       %1152 = OpCompositeExtract %uint %threadIdx 0
       %1153 = OpBitcast %int %1152
       %1154 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1155 = OpShiftRightArithmetic %int %1153 %1154
       %1156 = OpIAdd %int %1151 %1155
       %1157 = OpIAdd %int %1156 %int_64
       %1158 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1157
       %1159 = OpLoad %float %1158 None
       %1160 = OpFMul %float %1150 %1159
       %1161 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1162 = OpLoad %float %1161 None
       %1163 = OpExtInst %float %116 Fma %1143 %1160 %1162
               OpStore %1136 %1163 None
       %1164 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1165 = OpCompositeExtract %uint %threadIdx 0
       %1166 = OpBitcast %int %1165
       %1167 = OpIMul %int %1166 %int_8
       %1168 = OpIAdd %int %1167 %int_2053
       %1170 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1168
       %1171 = OpLoad %float %1170 None
       %1172 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1173 = OpLoad %uint %1172 None
       %1174 = OpBitwiseAnd %uint %uint_20 %uint_31
       %1175 = OpShiftRightLogical %uint %1173 %1174
       %1176 = OpBitwiseAnd %uint %1175 %uint_15
       %1177 = OpConvertUToF %float %1176
       %1178 = OpFSub %float %1177 %float_7
       %1179 = OpIMul %int %v__1 %int_112
       %1180 = OpCompositeExtract %uint %threadIdx 0
       %1181 = OpBitcast %int %1180
       %1182 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1183 = OpShiftRightArithmetic %int %1181 %1182
       %1184 = OpIAdd %int %1179 %1183
       %1185 = OpIAdd %int %1184 %int_64
       %1186 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1185
       %1187 = OpLoad %float %1186 None
       %1188 = OpFMul %float %1178 %1187
       %1189 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1190 = OpLoad %float %1189 None
       %1191 = OpExtInst %float %116 Fma %1171 %1188 %1190
               OpStore %1164 %1191 None
       %1192 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1193 = OpCompositeExtract %uint %threadIdx 0
       %1194 = OpBitcast %int %1193
       %1195 = OpIMul %int %1194 %int_8
       %1196 = OpIAdd %int %1195 %int_2054
       %1198 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1196
       %1199 = OpLoad %float %1198 None
       %1200 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1201 = OpLoad %uint %1200 None
       %1202 = OpBitwiseAnd %uint %uint_24 %uint_31
       %1203 = OpShiftRightLogical %uint %1201 %1202
       %1204 = OpBitwiseAnd %uint %1203 %uint_15
       %1205 = OpConvertUToF %float %1204
       %1206 = OpFSub %float %1205 %float_7
       %1207 = OpIMul %int %v__1 %int_112
       %1208 = OpCompositeExtract %uint %threadIdx 0
       %1209 = OpBitcast %int %1208
       %1210 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1211 = OpShiftRightArithmetic %int %1209 %1210
       %1212 = OpIAdd %int %1207 %1211
       %1213 = OpIAdd %int %1212 %int_64
       %1214 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1213
       %1215 = OpLoad %float %1214 None
       %1216 = OpFMul %float %1206 %1215
       %1217 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1218 = OpLoad %float %1217 None
       %1219 = OpExtInst %float %116 Fma %1199 %1216 %1218
               OpStore %1192 %1219 None
       %1220 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1221 = OpCompositeExtract %uint %threadIdx 0
       %1222 = OpBitcast %int %1221
       %1223 = OpIMul %int %1222 %int_8
       %1224 = OpIAdd %int %1223 %int_2055
       %1226 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1224
       %1227 = OpLoad %float %1226 None
       %1228 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1229 = OpLoad %uint %1228 None
       %1230 = OpBitwiseAnd %uint %uint_28 %uint_31
       %1231 = OpShiftRightLogical %uint %1229 %1230
       %1232 = OpBitwiseAnd %uint %1231 %uint_15
       %1233 = OpConvertUToF %float %1232
       %1234 = OpFSub %float %1233 %float_7
       %1235 = OpIMul %int %v__1 %int_112
       %1236 = OpCompositeExtract %uint %threadIdx 0
       %1237 = OpBitcast %int %1236
       %1238 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1239 = OpShiftRightArithmetic %int %1237 %1238
       %1240 = OpIAdd %int %1235 %1239
       %1241 = OpIAdd %int %1240 %int_64
       %1242 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1241
       %1243 = OpLoad %float %1242 None
       %1244 = OpFMul %float %1234 %1243
       %1245 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1246 = OpLoad %float %1245 None
       %1247 = OpExtInst %float %116 Fma %1227 %1244 %1246
               OpStore %1220 %1247 None
       %1248 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1249 = OpIMul %int %v__1 %int_448
       %1250 = OpCompositeExtract %uint %threadIdx 0
       %1251 = OpBitcast %int %1250
       %1252 = OpIAdd %int %1249 %1251
       %1253 = OpIAdd %int %1252 %int_320
       %1255 = OpAccessChain %_ptr_StorageBuffer_uint %6 %uint_0 %1253
       %1256 = OpLoad %uint %1255 None
               OpStore %1248 %1256 None
       %1257 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1258 = OpCompositeExtract %uint %threadIdx 0
       %1259 = OpBitcast %int %1258
       %1260 = OpIMul %int %1259 %int_8
       %1261 = OpIAdd %int %1260 %int_2560
       %1263 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1261
       %1264 = OpLoad %float %1263 None
       %1265 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1266 = OpLoad %uint %1265 None
       %1267 = OpBitwiseAnd %uint %uint_0 %uint_31
       %1268 = OpShiftRightLogical %uint %1266 %1267
       %1269 = OpBitwiseAnd %uint %1268 %uint_15
       %1270 = OpConvertUToF %float %1269
       %1271 = OpFSub %float %1270 %float_7
       %1272 = OpIMul %int %v__1 %int_112
       %1273 = OpCompositeExtract %uint %threadIdx 0
       %1274 = OpBitcast %int %1273
       %1275 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1276 = OpShiftRightArithmetic %int %1274 %1275
       %1277 = OpIAdd %int %1272 %1276
       %1278 = OpIAdd %int %1277 %int_80
       %1280 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1278
       %1281 = OpLoad %float %1280 None
       %1282 = OpFMul %float %1271 %1281
       %1283 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1284 = OpLoad %float %1283 None
       %1285 = OpExtInst %float %116 Fma %1264 %1282 %1284
               OpStore %1257 %1285 None
       %1286 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1287 = OpCompositeExtract %uint %threadIdx 0
       %1288 = OpBitcast %int %1287
       %1289 = OpIMul %int %1288 %int_8
       %1290 = OpIAdd %int %1289 %int_2561
       %1292 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1290
       %1293 = OpLoad %float %1292 None
       %1294 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1295 = OpLoad %uint %1294 None
       %1296 = OpBitwiseAnd %uint %uint_4 %uint_31
       %1297 = OpShiftRightLogical %uint %1295 %1296
       %1298 = OpBitwiseAnd %uint %1297 %uint_15
       %1299 = OpConvertUToF %float %1298
       %1300 = OpFSub %float %1299 %float_7
       %1301 = OpIMul %int %v__1 %int_112
       %1302 = OpCompositeExtract %uint %threadIdx 0
       %1303 = OpBitcast %int %1302
       %1304 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1305 = OpShiftRightArithmetic %int %1303 %1304
       %1306 = OpIAdd %int %1301 %1305
       %1307 = OpIAdd %int %1306 %int_80
       %1308 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1307
       %1309 = OpLoad %float %1308 None
       %1310 = OpFMul %float %1300 %1309
       %1311 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1312 = OpLoad %float %1311 None
       %1313 = OpExtInst %float %116 Fma %1293 %1310 %1312
               OpStore %1286 %1313 None
       %1314 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1315 = OpCompositeExtract %uint %threadIdx 0
       %1316 = OpBitcast %int %1315
       %1317 = OpIMul %int %1316 %int_8
       %1318 = OpIAdd %int %1317 %int_2562
       %1320 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1318
       %1321 = OpLoad %float %1320 None
       %1322 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1323 = OpLoad %uint %1322 None
       %1324 = OpBitwiseAnd %uint %uint_8 %uint_31
       %1325 = OpShiftRightLogical %uint %1323 %1324
       %1326 = OpBitwiseAnd %uint %1325 %uint_15
       %1327 = OpConvertUToF %float %1326
       %1328 = OpFSub %float %1327 %float_7
       %1329 = OpIMul %int %v__1 %int_112
       %1330 = OpCompositeExtract %uint %threadIdx 0
       %1331 = OpBitcast %int %1330
       %1332 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1333 = OpShiftRightArithmetic %int %1331 %1332
       %1334 = OpIAdd %int %1329 %1333
       %1335 = OpIAdd %int %1334 %int_80
       %1336 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1335
       %1337 = OpLoad %float %1336 None
       %1338 = OpFMul %float %1328 %1337
       %1339 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1340 = OpLoad %float %1339 None
       %1341 = OpExtInst %float %116 Fma %1321 %1338 %1340
               OpStore %1314 %1341 None
       %1342 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1343 = OpCompositeExtract %uint %threadIdx 0
       %1344 = OpBitcast %int %1343
       %1345 = OpIMul %int %1344 %int_8
       %1346 = OpIAdd %int %1345 %int_2563
       %1348 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1346
       %1349 = OpLoad %float %1348 None
       %1350 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1351 = OpLoad %uint %1350 None
       %1352 = OpBitwiseAnd %uint %uint_12 %uint_31
       %1353 = OpShiftRightLogical %uint %1351 %1352
       %1354 = OpBitwiseAnd %uint %1353 %uint_15
       %1355 = OpConvertUToF %float %1354
       %1356 = OpFSub %float %1355 %float_7
       %1357 = OpIMul %int %v__1 %int_112
       %1358 = OpCompositeExtract %uint %threadIdx 0
       %1359 = OpBitcast %int %1358
       %1360 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1361 = OpShiftRightArithmetic %int %1359 %1360
       %1362 = OpIAdd %int %1357 %1361
       %1363 = OpIAdd %int %1362 %int_80
       %1364 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1363
       %1365 = OpLoad %float %1364 None
       %1366 = OpFMul %float %1356 %1365
       %1367 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1368 = OpLoad %float %1367 None
       %1369 = OpExtInst %float %116 Fma %1349 %1366 %1368
               OpStore %1342 %1369 None
       %1370 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1371 = OpCompositeExtract %uint %threadIdx 0
       %1372 = OpBitcast %int %1371
       %1373 = OpIMul %int %1372 %int_8
       %1374 = OpIAdd %int %1373 %int_2564
       %1376 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1374
       %1377 = OpLoad %float %1376 None
       %1378 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1379 = OpLoad %uint %1378 None
       %1380 = OpBitwiseAnd %uint %uint_16 %uint_31
       %1381 = OpShiftRightLogical %uint %1379 %1380
       %1382 = OpBitwiseAnd %uint %1381 %uint_15
       %1383 = OpConvertUToF %float %1382
       %1384 = OpFSub %float %1383 %float_7
       %1385 = OpIMul %int %v__1 %int_112
       %1386 = OpCompositeExtract %uint %threadIdx 0
       %1387 = OpBitcast %int %1386
       %1388 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1389 = OpShiftRightArithmetic %int %1387 %1388
       %1390 = OpIAdd %int %1385 %1389
       %1391 = OpIAdd %int %1390 %int_80
       %1392 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1391
       %1393 = OpLoad %float %1392 None
       %1394 = OpFMul %float %1384 %1393
       %1395 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1396 = OpLoad %float %1395 None
       %1397 = OpExtInst %float %116 Fma %1377 %1394 %1396
               OpStore %1370 %1397 None
       %1398 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1399 = OpCompositeExtract %uint %threadIdx 0
       %1400 = OpBitcast %int %1399
       %1401 = OpIMul %int %1400 %int_8
       %1402 = OpIAdd %int %1401 %int_2565
       %1404 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1402
       %1405 = OpLoad %float %1404 None
       %1406 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1407 = OpLoad %uint %1406 None
       %1408 = OpBitwiseAnd %uint %uint_20 %uint_31
       %1409 = OpShiftRightLogical %uint %1407 %1408
       %1410 = OpBitwiseAnd %uint %1409 %uint_15
       %1411 = OpConvertUToF %float %1410
       %1412 = OpFSub %float %1411 %float_7
       %1413 = OpIMul %int %v__1 %int_112
       %1414 = OpCompositeExtract %uint %threadIdx 0
       %1415 = OpBitcast %int %1414
       %1416 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1417 = OpShiftRightArithmetic %int %1415 %1416
       %1418 = OpIAdd %int %1413 %1417
       %1419 = OpIAdd %int %1418 %int_80
       %1420 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1419
       %1421 = OpLoad %float %1420 None
       %1422 = OpFMul %float %1412 %1421
       %1423 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1424 = OpLoad %float %1423 None
       %1425 = OpExtInst %float %116 Fma %1405 %1422 %1424
               OpStore %1398 %1425 None
       %1426 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1427 = OpCompositeExtract %uint %threadIdx 0
       %1428 = OpBitcast %int %1427
       %1429 = OpIMul %int %1428 %int_8
       %1430 = OpIAdd %int %1429 %int_2566
       %1432 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1430
       %1433 = OpLoad %float %1432 None
       %1434 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1435 = OpLoad %uint %1434 None
       %1436 = OpBitwiseAnd %uint %uint_24 %uint_31
       %1437 = OpShiftRightLogical %uint %1435 %1436
       %1438 = OpBitwiseAnd %uint %1437 %uint_15
       %1439 = OpConvertUToF %float %1438
       %1440 = OpFSub %float %1439 %float_7
       %1441 = OpIMul %int %v__1 %int_112
       %1442 = OpCompositeExtract %uint %threadIdx 0
       %1443 = OpBitcast %int %1442
       %1444 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1445 = OpShiftRightArithmetic %int %1443 %1444
       %1446 = OpIAdd %int %1441 %1445
       %1447 = OpIAdd %int %1446 %int_80
       %1448 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1447
       %1449 = OpLoad %float %1448 None
       %1450 = OpFMul %float %1440 %1449
       %1451 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1452 = OpLoad %float %1451 None
       %1453 = OpExtInst %float %116 Fma %1433 %1450 %1452
               OpStore %1426 %1453 None
       %1454 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1455 = OpCompositeExtract %uint %threadIdx 0
       %1456 = OpBitcast %int %1455
       %1457 = OpIMul %int %1456 %int_8
       %1458 = OpIAdd %int %1457 %int_2567
       %1460 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1458
       %1461 = OpLoad %float %1460 None
       %1462 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1463 = OpLoad %uint %1462 None
       %1464 = OpBitwiseAnd %uint %uint_28 %uint_31
       %1465 = OpShiftRightLogical %uint %1463 %1464
       %1466 = OpBitwiseAnd %uint %1465 %uint_15
       %1467 = OpConvertUToF %float %1466
       %1468 = OpFSub %float %1467 %float_7
       %1469 = OpIMul %int %v__1 %int_112
       %1470 = OpCompositeExtract %uint %threadIdx 0
       %1471 = OpBitcast %int %1470
       %1472 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1473 = OpShiftRightArithmetic %int %1471 %1472
       %1474 = OpIAdd %int %1469 %1473
       %1475 = OpIAdd %int %1474 %int_80
       %1476 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1475
       %1477 = OpLoad %float %1476 None
       %1478 = OpFMul %float %1468 %1477
       %1479 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1480 = OpLoad %float %1479 None
       %1481 = OpExtInst %float %116 Fma %1461 %1478 %1480
               OpStore %1454 %1481 None
       %1482 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1483 = OpIMul %int %v__1 %int_448
       %1484 = OpCompositeExtract %uint %threadIdx 0
       %1485 = OpBitcast %int %1484
       %1486 = OpIAdd %int %1483 %1485
       %1487 = OpIAdd %int %1486 %int_384
       %1489 = OpAccessChain %_ptr_StorageBuffer_uint %6 %uint_0 %1487
       %1490 = OpLoad %uint %1489 None
               OpStore %1482 %1490 None
       %1491 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1492 = OpCompositeExtract %uint %threadIdx 0
       %1493 = OpBitcast %int %1492
       %1494 = OpIMul %int %1493 %int_8
       %1495 = OpIAdd %int %1494 %int_3072
       %1497 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1495
       %1498 = OpLoad %float %1497 None
       %1499 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1500 = OpLoad %uint %1499 None
       %1501 = OpBitwiseAnd %uint %uint_0 %uint_31
       %1502 = OpShiftRightLogical %uint %1500 %1501
       %1503 = OpBitwiseAnd %uint %1502 %uint_15
       %1504 = OpConvertUToF %float %1503
       %1505 = OpFSub %float %1504 %float_7
       %1506 = OpIMul %int %v__1 %int_112
       %1507 = OpCompositeExtract %uint %threadIdx 0
       %1508 = OpBitcast %int %1507
       %1509 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1510 = OpShiftRightArithmetic %int %1508 %1509
       %1511 = OpIAdd %int %1506 %1510
       %1512 = OpIAdd %int %1511 %int_96
       %1514 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1512
       %1515 = OpLoad %float %1514 None
       %1516 = OpFMul %float %1505 %1515
       %1517 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1518 = OpLoad %float %1517 None
       %1519 = OpExtInst %float %116 Fma %1498 %1516 %1518
               OpStore %1491 %1519 None
       %1520 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1521 = OpCompositeExtract %uint %threadIdx 0
       %1522 = OpBitcast %int %1521
       %1523 = OpIMul %int %1522 %int_8
       %1524 = OpIAdd %int %1523 %int_3073
       %1526 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1524
       %1527 = OpLoad %float %1526 None
       %1528 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1529 = OpLoad %uint %1528 None
       %1530 = OpBitwiseAnd %uint %uint_4 %uint_31
       %1531 = OpShiftRightLogical %uint %1529 %1530
       %1532 = OpBitwiseAnd %uint %1531 %uint_15
       %1533 = OpConvertUToF %float %1532
       %1534 = OpFSub %float %1533 %float_7
       %1535 = OpIMul %int %v__1 %int_112
       %1536 = OpCompositeExtract %uint %threadIdx 0
       %1537 = OpBitcast %int %1536
       %1538 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1539 = OpShiftRightArithmetic %int %1537 %1538
       %1540 = OpIAdd %int %1535 %1539
       %1541 = OpIAdd %int %1540 %int_96
       %1542 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1541
       %1543 = OpLoad %float %1542 None
       %1544 = OpFMul %float %1534 %1543
       %1545 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1546 = OpLoad %float %1545 None
       %1547 = OpExtInst %float %116 Fma %1527 %1544 %1546
               OpStore %1520 %1547 None
       %1548 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1549 = OpCompositeExtract %uint %threadIdx 0
       %1550 = OpBitcast %int %1549
       %1551 = OpIMul %int %1550 %int_8
       %1552 = OpIAdd %int %1551 %int_3074
       %1554 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1552
       %1555 = OpLoad %float %1554 None
       %1556 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1557 = OpLoad %uint %1556 None
       %1558 = OpBitwiseAnd %uint %uint_8 %uint_31
       %1559 = OpShiftRightLogical %uint %1557 %1558
       %1560 = OpBitwiseAnd %uint %1559 %uint_15
       %1561 = OpConvertUToF %float %1560
       %1562 = OpFSub %float %1561 %float_7
       %1563 = OpIMul %int %v__1 %int_112
       %1564 = OpCompositeExtract %uint %threadIdx 0
       %1565 = OpBitcast %int %1564
       %1566 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1567 = OpShiftRightArithmetic %int %1565 %1566
       %1568 = OpIAdd %int %1563 %1567
       %1569 = OpIAdd %int %1568 %int_96
       %1570 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1569
       %1571 = OpLoad %float %1570 None
       %1572 = OpFMul %float %1562 %1571
       %1573 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1574 = OpLoad %float %1573 None
       %1575 = OpExtInst %float %116 Fma %1555 %1572 %1574
               OpStore %1548 %1575 None
       %1576 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1577 = OpCompositeExtract %uint %threadIdx 0
       %1578 = OpBitcast %int %1577
       %1579 = OpIMul %int %1578 %int_8
       %1580 = OpIAdd %int %1579 %int_3075
       %1582 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1580
       %1583 = OpLoad %float %1582 None
       %1584 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1585 = OpLoad %uint %1584 None
       %1586 = OpBitwiseAnd %uint %uint_12 %uint_31
       %1587 = OpShiftRightLogical %uint %1585 %1586
       %1588 = OpBitwiseAnd %uint %1587 %uint_15
       %1589 = OpConvertUToF %float %1588
       %1590 = OpFSub %float %1589 %float_7
       %1591 = OpIMul %int %v__1 %int_112
       %1592 = OpCompositeExtract %uint %threadIdx 0
       %1593 = OpBitcast %int %1592
       %1594 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1595 = OpShiftRightArithmetic %int %1593 %1594
       %1596 = OpIAdd %int %1591 %1595
       %1597 = OpIAdd %int %1596 %int_96
       %1598 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1597
       %1599 = OpLoad %float %1598 None
       %1600 = OpFMul %float %1590 %1599
       %1601 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1602 = OpLoad %float %1601 None
       %1603 = OpExtInst %float %116 Fma %1583 %1600 %1602
               OpStore %1576 %1603 None
       %1604 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1605 = OpCompositeExtract %uint %threadIdx 0
       %1606 = OpBitcast %int %1605
       %1607 = OpIMul %int %1606 %int_8
       %1608 = OpIAdd %int %1607 %int_3076
       %1610 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1608
       %1611 = OpLoad %float %1610 None
       %1612 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1613 = OpLoad %uint %1612 None
       %1614 = OpBitwiseAnd %uint %uint_16 %uint_31
       %1615 = OpShiftRightLogical %uint %1613 %1614
       %1616 = OpBitwiseAnd %uint %1615 %uint_15
       %1617 = OpConvertUToF %float %1616
       %1618 = OpFSub %float %1617 %float_7
       %1619 = OpIMul %int %v__1 %int_112
       %1620 = OpCompositeExtract %uint %threadIdx 0
       %1621 = OpBitcast %int %1620
       %1622 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1623 = OpShiftRightArithmetic %int %1621 %1622
       %1624 = OpIAdd %int %1619 %1623
       %1625 = OpIAdd %int %1624 %int_96
       %1626 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1625
       %1627 = OpLoad %float %1626 None
       %1628 = OpFMul %float %1618 %1627
       %1629 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1630 = OpLoad %float %1629 None
       %1631 = OpExtInst %float %116 Fma %1611 %1628 %1630
               OpStore %1604 %1631 None
       %1632 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1633 = OpCompositeExtract %uint %threadIdx 0
       %1634 = OpBitcast %int %1633
       %1635 = OpIMul %int %1634 %int_8
       %1636 = OpIAdd %int %1635 %int_3077
       %1638 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1636
       %1639 = OpLoad %float %1638 None
       %1640 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1641 = OpLoad %uint %1640 None
       %1642 = OpBitwiseAnd %uint %uint_20 %uint_31
       %1643 = OpShiftRightLogical %uint %1641 %1642
       %1644 = OpBitwiseAnd %uint %1643 %uint_15
       %1645 = OpConvertUToF %float %1644
       %1646 = OpFSub %float %1645 %float_7
       %1647 = OpIMul %int %v__1 %int_112
       %1648 = OpCompositeExtract %uint %threadIdx 0
       %1649 = OpBitcast %int %1648
       %1650 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1651 = OpShiftRightArithmetic %int %1649 %1650
       %1652 = OpIAdd %int %1647 %1651
       %1653 = OpIAdd %int %1652 %int_96
       %1654 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1653
       %1655 = OpLoad %float %1654 None
       %1656 = OpFMul %float %1646 %1655
       %1657 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1658 = OpLoad %float %1657 None
       %1659 = OpExtInst %float %116 Fma %1639 %1656 %1658
               OpStore %1632 %1659 None
       %1660 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1661 = OpCompositeExtract %uint %threadIdx 0
       %1662 = OpBitcast %int %1661
       %1663 = OpIMul %int %1662 %int_8
       %1664 = OpIAdd %int %1663 %int_3078
       %1666 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1664
       %1667 = OpLoad %float %1666 None
       %1668 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1669 = OpLoad %uint %1668 None
       %1670 = OpBitwiseAnd %uint %uint_24 %uint_31
       %1671 = OpShiftRightLogical %uint %1669 %1670
       %1672 = OpBitwiseAnd %uint %1671 %uint_15
       %1673 = OpConvertUToF %float %1672
       %1674 = OpFSub %float %1673 %float_7
       %1675 = OpIMul %int %v__1 %int_112
       %1676 = OpCompositeExtract %uint %threadIdx 0
       %1677 = OpBitcast %int %1676
       %1678 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1679 = OpShiftRightArithmetic %int %1677 %1678
       %1680 = OpIAdd %int %1675 %1679
       %1681 = OpIAdd %int %1680 %int_96
       %1682 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1681
       %1683 = OpLoad %float %1682 None
       %1684 = OpFMul %float %1674 %1683
       %1685 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1686 = OpLoad %float %1685 None
       %1687 = OpExtInst %float %116 Fma %1667 %1684 %1686
               OpStore %1660 %1687 None
       %1688 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1689 = OpCompositeExtract %uint %threadIdx 0
       %1690 = OpBitcast %int %1689
       %1691 = OpIMul %int %1690 %int_8
       %1692 = OpIAdd %int %1691 %int_3079
       %1694 = OpAccessChain %_ptr_StorageBuffer_float %17 %uint_0 %1692
       %1695 = OpLoad %float %1694 None
       %1696 = OpAccessChain %_ptr_Function_uint %lv1353_local %uint_0
       %1697 = OpLoad %uint %1696 None
       %1698 = OpBitwiseAnd %uint %uint_28 %uint_31
       %1699 = OpShiftRightLogical %uint %1697 %1698
       %1700 = OpBitwiseAnd %uint %1699 %uint_15
       %1701 = OpConvertUToF %float %1700
       %1702 = OpFSub %float %1701 %float_7
       %1703 = OpIMul %int %v__1 %int_112
       %1704 = OpCompositeExtract %uint %threadIdx 0
       %1705 = OpBitcast %int %1704
       %1706 = OpBitwiseAnd %uint %uint_2 %uint_31
       %1707 = OpShiftRightArithmetic %int %1705 %1706
       %1708 = OpIAdd %int %1703 %1707
       %1709 = OpIAdd %int %1708 %int_96
       %1710 = OpAccessChain %_ptr_StorageBuffer_float %11 %uint_0 %1709
       %1711 = OpLoad %float %1710 None
       %1712 = OpFMul %float %1702 %1711
       %1713 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1714 = OpLoad %float %1713 None
       %1715 = OpExtInst %float %116 Fma %1695 %1712 %1714
               OpStore %1688 %1715 None
       %1716 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local_1 %uint_0
               OpStore %1716 %float_0 None
       %1717 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local_1 %uint_0
       %1718 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local_1 %uint_0
       %1719 = OpLoad %float %1718 None
       %1720 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local %uint_0
       %1721 = OpLoad %float %1720 None
       %1722 = OpFAdd %float %1719 %1721
               OpStore %1717 %1722 None
               OpControlBarrier %uint_2 %uint_2 %uint_264
       %1725 = OpCompositeExtract %uint %threadIdx 0
       %1726 = OpBitcast %int %1725
       %1727 = OpBitcast %uint %1726
       %1728 = OpExtInst %uint %116 UMin %1727 %uint_63
       %1730 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1728
       %1732 = OpAccessChain %_ptr_Function_float %NT_matmul_rf_local_1 %uint_0
       %1733 = OpLoad %float %1732 None
               OpStore %1730 %1733 None
               OpControlBarrier %uint_2 %uint_2 %uint_264
       %1735 = OpCompositeExtract %uint %threadIdx 0
       %1736 = OpBitcast %int %1735
       %1737 = OpSLessThan %bool %1736 %int_32
               OpSelectionMerge %1738 None
               OpBranchConditional %1737 %1739 %1738
       %1739 = OpLabel
       %1740 = OpCompositeExtract %uint %threadIdx 0
       %1741 = OpBitcast %int %1740
       %1742 = OpBitcast %uint %1741
       %1743 = OpExtInst %uint %116 UMin %1742 %uint_63
       %1744 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1743
       %1745 = OpCompositeExtract %uint %threadIdx 0
       %1746 = OpBitcast %int %1745
       %1747 = OpBitcast %uint %1746
       %1748 = OpExtInst %uint %116 UMin %1747 %uint_63
       %1749 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1748
       %1750 = OpLoad %float %1749 None
       %1751 = OpCompositeExtract %uint %threadIdx 0
       %1752 = OpBitcast %int %1751
       %1753 = OpIAdd %int %1752 %int_32
       %1754 = OpBitcast %uint %1753
       %1755 = OpExtInst %uint %116 UMin %1754 %uint_63
       %1756 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1755
       %1757 = OpLoad %float %1756 None
       %1758 = OpFAdd %float %1750 %1757
               OpStore %1744 %1758 None
               OpBranch %1738
       %1738 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
       %1760 = OpCompositeExtract %uint %threadIdx 0
       %1761 = OpBitcast %int %1760
       %1762 = OpSLessThan %bool %1761 %int_16
               OpSelectionMerge %1763 None
               OpBranchConditional %1762 %1764 %1763
       %1764 = OpLabel
       %1765 = OpCompositeExtract %uint %threadIdx 0
       %1766 = OpBitcast %int %1765
       %1767 = OpBitcast %uint %1766
       %1768 = OpExtInst %uint %116 UMin %1767 %uint_63
       %1769 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1768
       %1770 = OpCompositeExtract %uint %threadIdx 0
       %1771 = OpBitcast %int %1770
       %1772 = OpBitcast %uint %1771
       %1773 = OpExtInst %uint %116 UMin %1772 %uint_63
       %1774 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1773
       %1775 = OpLoad %float %1774 None
       %1776 = OpCompositeExtract %uint %threadIdx 0
       %1777 = OpBitcast %int %1776
       %1778 = OpIAdd %int %1777 %int_16
       %1779 = OpBitcast %uint %1778
       %1780 = OpExtInst %uint %116 UMin %1779 %uint_63
       %1781 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1780
       %1782 = OpLoad %float %1781 None
       %1783 = OpFAdd %float %1775 %1782
               OpStore %1769 %1783 None
               OpBranch %1763
       %1763 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
       %1785 = OpCompositeExtract %uint %threadIdx 0
       %1786 = OpBitcast %int %1785
       %1787 = OpSLessThan %bool %1786 %int_8
               OpSelectionMerge %1788 None
               OpBranchConditional %1787 %1789 %1788
       %1789 = OpLabel
       %1790 = OpCompositeExtract %uint %threadIdx 0
       %1791 = OpBitcast %int %1790
       %1792 = OpBitcast %uint %1791
       %1793 = OpExtInst %uint %116 UMin %1792 %uint_63
       %1794 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1793
       %1795 = OpCompositeExtract %uint %threadIdx 0
       %1796 = OpBitcast %int %1795
       %1797 = OpBitcast %uint %1796
       %1798 = OpExtInst %uint %116 UMin %1797 %uint_63
       %1799 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1798
       %1800 = OpLoad %float %1799 None
       %1801 = OpCompositeExtract %uint %threadIdx 0
       %1802 = OpBitcast %int %1801
       %1803 = OpIAdd %int %1802 %int_8
       %1804 = OpBitcast %uint %1803
       %1805 = OpExtInst %uint %116 UMin %1804 %uint_63
       %1806 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1805
       %1807 = OpLoad %float %1806 None
       %1808 = OpFAdd %float %1800 %1807
               OpStore %1794 %1808 None
               OpBranch %1788
       %1788 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
       %1810 = OpCompositeExtract %uint %threadIdx 0
       %1811 = OpBitcast %int %1810
       %1812 = OpSLessThan %bool %1811 %int_4
               OpSelectionMerge %1813 None
               OpBranchConditional %1812 %1814 %1813
       %1814 = OpLabel
       %1815 = OpCompositeExtract %uint %threadIdx 0
       %1816 = OpBitcast %int %1815
       %1817 = OpBitcast %uint %1816
       %1818 = OpExtInst %uint %116 UMin %1817 %uint_63
       %1819 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1818
       %1820 = OpCompositeExtract %uint %threadIdx 0
       %1821 = OpBitcast %int %1820
       %1822 = OpBitcast %uint %1821
       %1823 = OpExtInst %uint %116 UMin %1822 %uint_63
       %1824 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1823
       %1825 = OpLoad %float %1824 None
       %1826 = OpCompositeExtract %uint %threadIdx 0
       %1827 = OpBitcast %int %1826
       %1828 = OpIAdd %int %1827 %int_4
       %1829 = OpBitcast %uint %1828
       %1830 = OpExtInst %uint %116 UMin %1829 %uint_63
       %1831 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1830
       %1832 = OpLoad %float %1831 None
       %1833 = OpFAdd %float %1825 %1832
               OpStore %1819 %1833 None
               OpBranch %1813
       %1813 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
       %1835 = OpCompositeExtract %uint %threadIdx 0
       %1836 = OpBitcast %int %1835
       %1837 = OpSLessThan %bool %1836 %int_2
               OpSelectionMerge %1838 None
               OpBranchConditional %1837 %1839 %1838
       %1839 = OpLabel
       %1840 = OpCompositeExtract %uint %threadIdx 0
       %1841 = OpBitcast %int %1840
       %1842 = OpBitcast %uint %1841
       %1843 = OpExtInst %uint %116 UMin %1842 %uint_63
       %1844 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1843
       %1845 = OpCompositeExtract %uint %threadIdx 0
       %1846 = OpBitcast %int %1845
       %1847 = OpBitcast %uint %1846
       %1848 = OpExtInst %uint %116 UMin %1847 %uint_63
       %1849 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1848
       %1850 = OpLoad %float %1849 None
       %1851 = OpCompositeExtract %uint %threadIdx 0
       %1852 = OpBitcast %int %1851
       %1853 = OpIAdd %int %1852 %int_2
       %1854 = OpBitcast %uint %1853
       %1855 = OpExtInst %uint %116 UMin %1854 %uint_63
       %1856 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1855
       %1857 = OpLoad %float %1856 None
       %1858 = OpFAdd %float %1850 %1857
               OpStore %1844 %1858 None
               OpBranch %1838
       %1838 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
       %1860 = OpCompositeExtract %uint %threadIdx 0
       %1861 = OpBitcast %int %1860
       %1862 = OpSLessThan %bool %1861 %int_1
               OpSelectionMerge %1863 None
               OpBranchConditional %1862 %1864 %1863
       %1864 = OpLabel
       %1865 = OpCompositeExtract %uint %threadIdx 0
       %1866 = OpBitcast %int %1865
       %1867 = OpBitcast %uint %1866
       %1868 = OpExtInst %uint %116 UMin %1867 %uint_63
       %1869 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1868
       %1870 = OpCompositeExtract %uint %threadIdx 0
       %1871 = OpBitcast %int %1870
       %1872 = OpBitcast %uint %1871
       %1873 = OpExtInst %uint %116 UMin %1872 %uint_63
       %1874 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1873
       %1875 = OpLoad %float %1874 None
       %1876 = OpCompositeExtract %uint %threadIdx 0
       %1877 = OpBitcast %int %1876
       %1878 = OpIAdd %int %1877 %int_1
       %1879 = OpBitcast %uint %1878
       %1880 = OpExtInst %uint %116 UMin %1879 %uint_63
       %1881 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %1880
       %1882 = OpLoad %float %1881 None
       %1883 = OpFAdd %float %1875 %1882
               OpStore %1869 %1883 None
               OpBranch %1863
       %1863 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
       %1885 = OpCompositeExtract %uint %threadIdx 0
       %1886 = OpBitcast %int %1885
       %1887 = OpIEqual %bool %1886 %int_0
               OpSelectionMerge %1889 None
               OpBranchConditional %1887 %1890 %1889
       %1890 = OpLabel
       %1891 = OpAccessChain %_ptr_StorageBuffer_float_0 %1 %uint_0 %v__1
       %1893 = OpAccessChain %_ptr_Workgroup_float %red_buf0 %uint_0
       %1894 = OpLoad %float %1893 None
       %1895 = OpAccessChain %_ptr_StorageBuffer_float %14 %uint_0 %v__1
       %1896 = OpLoad %float %1895 None
       %1897 = OpFAdd %float %1894 %1896
               OpStore %1891 %1897 None
               OpBranch %1889
       %1889 = OpLabel
               OpReturn
               OpFunctionEnd
%fused_fused_dequantize1_fused_NT_matmul10_add4_kernel = OpFunction %void None %1899
       %1900 = OpLabel
       %1901 = OpLoad %v3uint %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_workgroup_id_Input None
       %1902 = OpLoad %v3uint %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_num_workgroups_Input None
       %1903 = OpLoad %v3uint %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_local_invocation_id_Input None
       %1904 = OpFunctionCall %void %fused_fused_dequantize1_fused_NT_matmul10_add4_kernel_inner %1901 %1902 %1903
               OpReturn
               OpFunctionEnd

// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> input_embeds : array<f32>;
@group(0) @binding(2) var<storage, read> lv3 : array<u32>;
@group(0) @binding(3) var<storage, read> lv4 : array<f32>;
@group(0) @binding(4) var<storage, read> reshape339 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> reshape339_reindex_pad_shared : array<f32, 256>;
var<workgroup> dequantize_reindex_shared : array<f32, 256>;
@compute @workgroup_size(8, 8, 1)
fn fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_reindex_pad_local : array<f32, 16>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var var_1 : i32 = 0; var_1 < 1i; var_1++) {
    NT_matmul_intermediate_reindex_pad_local[0i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[1i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[2i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[3i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[4i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[5i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[6i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[7i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[8i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[9i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[10i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[11i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[12i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[13i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[14i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[15i] = 0.000000e+00f;
    for (var ax3_0 : i32 = 0; ax3_0 < 448i; ax3_0++) {
      workgroupBarrier();
      if ((((v__1 * 32i) + (i32(threadIdx.y) * 4i)) + (i32(threadIdx.x)>>1u)) < podArgs.batch_size) {
        reshape339_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = reshape339[(((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i))];
        reshape339_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = reshape339[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 1i)];
        reshape339_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = reshape339[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 2i)];
        reshape339_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = reshape339[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 3i)];
      } else {
        reshape339_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = 0.000000e+00f;
        reshape339_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = 0.000000e+00f;
        reshape339_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = 0.000000e+00f;
        reshape339_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = 0.000000e+00f;
      }
      dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = ((f32(((lv3[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32(((i32(threadIdx.x) & 1i) * 16i))) & 15u)) - 7.000000e+00f) * lv4[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = ((f32(((lv3[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 4i))) & 15u)) - 7.000000e+00f) * lv4[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = ((f32(((lv3[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 8i))) & 15u)) - 7.000000e+00f) * lv4[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = ((f32(((lv3[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 12i))) & 15u)) - 7.000000e+00f) * lv4[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      workgroupBarrier();
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape339_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape339_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape339_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape339_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(reshape339_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[15i]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      T_add[((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))] = (NT_matmul_intermediate_reindex_pad_local[0i] + input_embeds[((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)] = (NT_matmul_intermediate_reindex_pad_local[1i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)] = (NT_matmul_intermediate_reindex_pad_local[2i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)] = (NT_matmul_intermediate_reindex_pad_local[3i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3584i)] = (NT_matmul_intermediate_reindex_pad_local[4i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3584i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3585i)] = (NT_matmul_intermediate_reindex_pad_local[5i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3585i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3586i)] = (NT_matmul_intermediate_reindex_pad_local[6i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3586i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3587i)] = (NT_matmul_intermediate_reindex_pad_local[7i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3587i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7168i)] = (NT_matmul_intermediate_reindex_pad_local[8i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7168i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7169i)] = (NT_matmul_intermediate_reindex_pad_local[9i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7169i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7170i)] = (NT_matmul_intermediate_reindex_pad_local[10i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7170i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7171i)] = (NT_matmul_intermediate_reindex_pad_local[11i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 7171i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10752i)] = (NT_matmul_intermediate_reindex_pad_local[12i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10752i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10753i)] = (NT_matmul_intermediate_reindex_pad_local[13i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10753i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10754i)] = (NT_matmul_intermediate_reindex_pad_local[14i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10754i)]);
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      T_add[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10755i)] = (NT_matmul_intermediate_reindex_pad_local[15i] + input_embeds[(((((v__1 * 114688i) + (i32(threadIdx.x) * 14336i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 10755i)]);
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1586
; Schema: 0
               OpCapability Shader
        %100 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize_NT_matmul9_kernel "fused_fused_dequantize_NT_matmul9_kernel" %fused_fused_dequantize_NT_matmul9_kernel_workgroup_id_Input %fused_fused_dequantize_NT_matmul9_kernel_num_workgroups_Input %fused_fused_dequantize_NT_matmul9_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize_NT_matmul9_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_workgroup_id_Input "fused_fused_dequantize_NT_matmul9_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_num_workgroups_Input "fused_fused_dequantize_NT_matmul9_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_local_invocation_id_Input "fused_fused_dequantize_NT_matmul9_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_inner "fused_fused_dequantize_NT_matmul9_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize_NT_matmul9_kernel "fused_fused_dequantize_NT_matmul9_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize_NT_matmul9_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize_NT_matmul9_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize_NT_matmul9_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_4 ArrayStride 4
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer Sto
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 3612
; Schema: 0
               OpCapability Shader
        %152 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize_NT_matmul9_kernel_2 "fused_fused_dequantize_NT_matmul9_kernel_2" %fused_fused_dequantize_NT_matmul9_kernel_2_workgroup_id_Input %fused_fused_dequantize_NT_matmul9_kernel_2_num_workgroups_Input %fused_fused_dequantize_NT_matmul9_kernel_2_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize_NT_matmul9_kernel_2 LocalSize 8 8 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %take1_reindex_pad_shared "take1_reindex_pad_shared"
               OpName %dequantize_reindex_shared "dequantize_reindex_shared"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_2_workgroup_id_Input "fused_fused_dequantize_NT_matmul9_kernel_2_workgroup_id_Input"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_2_num_workgroups_Input "fused_fused_dequantize_NT_matmul9_kernel_2_num_workgroups_Input"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_2_local_invocation_id_Input "fused_fused_dequantize_NT_matmul9_kernel_2_local_invocation_id_Input"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_2_inner "fused_fused_dequantize_NT_matmul9_kernel_2_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_reindex_pad_local "NT_matmul_intermediate_reindex_pad_local"
               OpName %v__1 "v__1"
               OpName %var_1 "var_1"
               OpName %ax3_0 "ax3_0"
               OpName %fused_fused_dequantize_NT_matmul9_kernel_2 "fused_fused_dequantize_NT_matmul9_kernel_2"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_256 ArrayStride 4
               OpDecorate %fused_fused_dequantize_NT_matmul9_kernel_2_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize_NT_matmul9_kernel_2_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize_NT_matmul9_kernel_2_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
       %uint = OpTypeInt 32 0
%_runtimearr_uint = OpTypeRuntimeArray %uint
%tint_symbol_3 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTyp
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 634
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %copy_single_page_kernel "copy_single_page_kernel" %copy_single_page_kernel_workgroup_id_Input %copy_single_page_kernel_num_workgroups_Input %copy_single_page_kernel_local_invocation_id_Input
               OpExecutionMode %copy_single_page_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %PODArgs 0 "copy_length"
               OpMemberName %PODArgs 1 "num_pages"
               OpMemberName %PODArgs 2 "page_size"
               OpMemberName %PODArgs 3 "src_page_id"
               OpMemberName %PODArgs 4 "tgt_page_id"
               OpMemberName %PODArgs 5 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpName %copy_single_page_kernel_workgroup_id_Input "copy_single_page_kernel_workgroup_id_Input"
               OpName %copy_single_page_kernel_num_workgroups_Input "copy_single_page_kernel_num_workgroups_Input"
               OpName %copy_single_page_kernel_local_invocation_id_Input "copy_single_page_kernel_local_invocation_id_Input"
               OpName %copy_single_page_kernel_inner "copy_single_page_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %tint_mod_i32 "tint_mod_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs_0 "lhs"
               OpName %rhs_0 "rhs"
               OpName %copy_single_page_kernel "copy_single_page_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %PODArgs 2 Offset 8
               OpMemberDecorate %PODArgs 3 Offset 12
               OpMemberDecorate %PODArgs 4 Offset 16
               OpMemberDecorate %PODArgs 5 Offset 20
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpDecorate %copy_single_page_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %copy_single_page_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %copy_single_page_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %int %int %int %int %uint
%tint_symbol_3 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_3 = OpTypePointer Uniform %tint_symbol_3
          %6 = OpVariable %_ptr_Uniform_tint_symbol_3 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%copy_single_page_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%copy_single_page_kernel_num_workgroups_Input = OpVariable %_ptr_Input_v3uint Input
%copy_single_page_kernel_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
       %void = OpTypeVoid
         %22 = OpTypeFunction %void %v3uint %v3uint %v3uint
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_0 = OpConstant %uint 0
     %uint_5 = OpConstant %uint 5
       %bool = OpTypeBool
%_ptr_Uniform_int = OpTypePointer Uniform %int
      %int_2 = OpConstant %int 2
      %int_0 = OpConstant %int 0
    %int_256 = OpConstant %int 256
    %int_128 = OpConstant %int 128
      %false = OpConstantFalse %bool
       %true = OpConstantTrue %bool
     %uint_7 = OpConstant %uint 7
    %uint_31 = OpConstant %uint 31
     %uint_4 = OpConstant %uint 4
      %int_8 = OpConstant %int 8
      %int_1 = OpConstant %int 1
     %uint_2 = OpConstant %uint 2
    %int_127 = OpConstant %int 127
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
     %uint_3 = OpConstant %uint 3
      %int_4 = OpConstant %int 4
        %604 = OpTypeFunction %int %int %int
%int_n2147483648 = OpConstant %int -2147483648
     %int_n1 = OpConstant %
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2715
; Schema: 0
               OpCapability Shader
         %82 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %rms_norm1_kernel "rms_norm1_kernel" %rms_norm1_kernel_workgroup_id_Input %rms_norm1_kernel_num_workgroups_Input %rms_norm1_kernel_local_invocation_id_Input
               OpExecutionMode %rms_norm1_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpName %red_buf0 "red_buf0"
               OpName %T_multiply_red_shared "T_multiply_red_shared"
               OpName %rms_norm1_kernel_workgroup_id_Input "rms_norm1_kernel_workgroup_id_Input"
               OpName %rms_norm1_kernel_num_workgroups_Input "rms_norm1_kernel_num_workgroups_Input"
               OpName %rms_norm1_kernel_local_invocation_id_Input "rms_norm1_kernel_local_invocation_id_Input"
               OpName %rms_norm1_kernel_inner "rms_norm1_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %T_multiply_red_rf_local "T_multiply_red_rf_local"
               OpName %rms_norm1_kernel "rms_norm1_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %12 DescriptorSet 0
               OpDecorate %12 Binding 3
               OpDecorate %12 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %_arr_float_uint_1 ArrayStride 4
               OpDecorate %rms_norm1_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %rms_norm1_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %rms_norm1_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
          %9 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %uint
%tint_symbol_7 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_7 = OpTypePointer Uniform %tint_symbol_7
         %12 = OpVariable %_ptr_Uniform_tint_symbol_7 Uniform
    %uint_64 = OpConstant %uint 64
%_arr_float_uint_64 = OpTypeArray %float %uint_64
%_ptr_Workgroup__arr_float_uint_64 = OpTypePointer Workgroup %_arr_float_uint_64
         %22 = OpConstantNull %_arr_float_uint_64
   %red_buf0 = OpVariable %_ptr_Workgroup__arr_float_uint_64 Workgroup %22
     %uint_1 = OpConstant %uint 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%_ptr_Workgroup__arr_float_uint_1 = OpTypePointer Workgroup %_arr_float_uint_1
         %27 = OpConstantNull %_arr_float_uint_1
%T_multiply_red_shared = OpVariable %_ptr_Workgroup__arr_float_uint_1 Workgroup %27
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%rms_norm1_
// Dumped WGSL:
//----------------------------------------
// Function: batch_prefill_paged_kv_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read> k_rope_pos_offset : array<i32>;
@group(0) @binding(1) var<storage, read> length_info : array<i32>;
@group(0) @binding(2) var<storage, read_write> lse : array<f32>;
@group(0) @binding(3) var<storage, read_write> output : array<f32>;
@group(0) @binding(4) var<storage, read> page_indptr : array<i32>;
@group(0) @binding(5) var<storage, read> page_values : array<i32>;
@group(0) @binding(6) var<storage, read> pages : array<f32>;
@group(0) @binding(7) var<storage, read> q : array<f32>;
@group(0) @binding(8) var<storage, read> q_indptr : array<i32>;
@group(0) @binding(9) var<storage, read> q_rope_position : array<i32>;

struct PODArgs {
  attn_score_scaling_factor: f32,
  batch_size: i32,
  causal: i32,
  k_rope_pos_offset_elem_offset: i32,
  length_info_elem_offset: i32,
  max_num_pages: i32,
  nnz_pages: i32,
  page_indptr_elem_offset: i32,
  page_values_elem_offset: i32,
  q_indptr_elem_offset: i32,
  q_rope_position_elem_offset: i32,
  rope_scale: f32,
  rope_theta: f32,
  rotary_mode: i32,
  total_len: i32,
  packGridDimX: u32
}
@group(0) @binding(10) var<uniform> podArgs : PODArgs;

var<workgroup> m_smem : array<f32, 16>;
var<workgroup> d_smem : array<f32, 16>;
var<workgroup> Q_smem : array<f32, 2048>;
var<workgroup> K_smem : array<f32, 2048>;
var<workgroup> V_smem : array<f32, 2048>;
var<workgroup> m_prev_smem : array<f32, 16>;
@compute @workgroup_size(32, 4, 1)
fn batch_prefill_paged_kv_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var tile_id : array<i32, 1>;
  var batch_idx : array<i32, 1>;
  var batch_rows : array<i32, 1>;
  var batch_tiles : array<i32, 1>;
  var kv_chunk_len : array<i32, 1>;
  var O_local : array<f32, 16>;
  var S_local : array<f32, 2>;
  var m_prev : array<f32, 1>;
  var m_new : array<f32, 1>;
  var d_new : array<f32, 1>;
  tile_id[0i] = v__1;
  batch_idx[0i] = 0i;
  batch_rows[0i] = ((q_indptr[(podArgs.q_indptr_elem_offset + 1i)] * 7i) - (q_indptr[podArgs.q_indptr_elem_offset] * 7i));
  batch_tiles[0i] = ((batch_rows[0i] + 15i)>>4u);
  while (true) {
    if (!(((batch_idx[0i] < podArgs.batch_size)))) { break; }
    while (true) {
      if (!(((batch_tiles[0i] <= tile_id[0i]) && (batch_idx[0i] < podArgs.batch_size)))) { break; }
      tile_id[0i] = (tile_id[0i] - batch_tiles[0i]);
      batch_idx[0i] = (batch_idx[0i] + 1i);
      if (batch_idx[0i] < podArgs.batch_size) {
        let b_idx : i32 = batch_idx[0i];
        batch_rows[0i] = ((q_indptr[((b_idx + podArgs.q_indptr_elem_offset) + 1i)] * 7i) - (q_indptr[(b_idx + podArgs.q_indptr_elem_offset)] * 7i));
        batch_tiles[0i] = ((batch_rows[0i] + 15i)>>4u);
      }
    }
    if ((batch_idx[0i] < podArgs.batch_size)) {
      let b_idx_1 : i32 = batch_idx[0i];
      let LH_start : i32 = (tile_id[0i] * 16i);
      let q_indptr_val : i32 = q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)];
      let cur_page_indptr_begin : i32 = page_indptr[(b_idx_1 + podArgs.page_indptr_elem_offset)];
      let cur_page_indptr_end : i32 = page_indptr[((b_idx_1 + podArgs.page_indptr_elem_offset) + 1i)];
      var condval : i32;
      if ((cur_page_indptr_begin != cur_page_indptr_end)) {
        condval = ((((cur_page_indptr_end * 16i) + length_info[(b_idx_1 + podArgs.length_info_elem_offset)]) - (cur_page_indptr_begin * 16i)) - 16i);
} else {
        condval = 0i;
}
      kv_chunk_len[0i] = condval;
      workgroupBarrier();
      if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
        m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = -5.000000e+04f;
        d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = 1.000000e+00f;
      }
      for (var li_1 : i32 = 0; li_1 < 4i; li_1++) {
        for (var lj_1 : i32 = 0; lj_1 < 4i; lj_1++) {
          O_local[((li_1 * 4i) + lj_1)] = 0.000000e+00f;
        }
      }
      workgroupBarrier();
      for (var li_lj_fused_0 : i32 = 0; li_lj_fused_0 < 8i; li_lj_fused_0++) {
        if (((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) + q_indptr_val) < q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]) {
          for (var li_lj_fused_3_s : i32 = 0; li_lj_fused_3_s < 2i; li_lj_fused_3_s++) {
            var condval_1 : f32;
            if ((podArgs.rotary_mode == 1i)) {
              var condval_2 : f32;
              if (((i32(threadIdx.y) & 1i) < 1i)) {
                condval_2 = (q[(((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i)) + 64i)] * -1.000000e+00f);
} else {
                condval_2 = q[(((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i)) - 64i)];
}
              condval_1 = fma(sin(((f32(q_rope_position[(((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) + q_indptr_val) + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (li_lj_fused_3_s * 2i))) * 7.812500e-03f)))), condval_2, (cos(((f32(q_rope_position[(((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) + q_indptr_val) + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (li_lj_fused_3_s * 2i))) * 7.812500e-03f)))) * q[((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i))]));
} else {
              condval_1 = q[((((((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) / 7i) + (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u)) * 3584i) + (q_indptr_val * 3584i)) + (i32(blockIdx.y) * 896i)) + ((((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i) + (7i & (((((li_lj_fused_0 * 2i) + (i32(threadIdx.y)>>1u)) + LH_start) % 7i)>>31u))) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i))];
}
            Q_smem[(((li_lj_fused_0 * 256i) + ((i32(threadIdx.y)>>1u) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + li_lj_fused_3_s) & 127i))] = condval_1;
          }
        } else {
          let v__2 : i32 = (((li_lj_fused_0 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
          Q_smem[v__2 + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
          Q_smem[v__2 + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
        }
      }
      workgroupBarrier();
      for (var iterator : i32 = 0; iterator < ((kv_chunk_len[0i] + 15i)>>4u); iterator++) {
        workgroupBarrier();
        for (var lz_ly_fused_0 : i32 = 0; lz_ly_fused_0 < 8i; lz_ly_fused_0++) {
          if ((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) < kv_chunk_len[0i]) {
            let page_no : i32 = page_values[((iterator + cur_page_indptr_begin) + podArgs.page_values_elem_offset)];
            for (var lz_ly_fused_3_s : i32 = 0; lz_ly_fused_3_s < 2i; lz_ly_fused_3_s++) {
              var condval_3 : f32;
              if ((podArgs.rotary_mode == 1i)) {
                var condval_4 : f32;
                if (((i32(threadIdx.y) & 1i) < 1i)) {
                  condval_4 = (pages[((((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + (lz_ly_fused_0 * 256i)) + ((i32(threadIdx.y)>>1u) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i)) + 64i)] * -1.000000e+00f);
} else {
                  condval_4 = pages[((((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + (lz_ly_fused_0 * 256i)) + ((i32(threadIdx.y)>>1u) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i)) - 64i)];
}
                condval_3 = fma(sin(((f32(((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) + k_rope_pos_offset[(b_idx_1 + podArgs.k_rope_pos_offset_elem_offset)])) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (lz_ly_fused_3_s * 2i))) * 7.812500e-03f)))), condval_4, (cos(((f32(((((iterator * 16i) + (lz_ly_fused_0 * 2i)) + (i32(threadIdx.y)>>1u)) + k_rope_pos_offset[(b_idx_1 + podArgs.k_rope_pos_offset_elem_offset)])) * podArgs.rope_scale) / pow(podArgs.rope_theta, (f32(((i32(threadIdx.x) * 4i) + (lz_ly_fused_3_s * 2i))) * 7.812500e-03f)))) * pages[(((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + (lz_ly_fused_0 * 256i)) + ((i32(threadIdx.y)>>1u) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i))]));
} else {
                condval_3 = pages[(((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + (lz_ly_fused_0 * 256i)) + ((i32(threadIdx.y)>>1u) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i))];
}
              K_smem[(((lz_ly_fused_0 * 256i) + ((i32(threadIdx.y)>>1u) * 128i)) + ((((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lz_ly_fused_3_s) & 127i))] = condval_3;
            }
          } else {
            let v__3 : i32 = (((lz_ly_fused_0 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
            K_smem[v__3 + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
            K_smem[v__3 + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
          }
        }
        workgroupBarrier();
        for (var lz_ly_fused_0_1 : i32 = 0; lz_ly_fused_0_1 < 8i; lz_ly_fused_0_1++) {
          if ((((iterator * 16i) + (lz_ly_fused_0_1 * 2i)) + (i32(threadIdx.y)>>1u)) < kv_chunk_len[0i]) {
            let page_no_1 : i32 = page_values[((iterator + cur_page_indptr_begin) + podArgs.page_values_elem_offset)];
            let v__4 : i32 = ((((((page_no_1 * 16384i) + (i32(blockIdx.y) * 2048i)) + (lz_ly_fused_0_1 * 256i)) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i)) + 8192i);
            let v__5 : i32 = (((lz_ly_fused_0_1 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
            V_smem[v__5 + 0] = vec2<f32>(pages[v__4 + 0], pages[v__4 + 1])[0];
            V_smem[v__5 + 1] = vec2<f32>(pages[v__4 + 0], pages[v__4 + 1])[1];
          } else {
            let v__6 : i32 = (((lz_ly_fused_0_1 * 256i) + (i32(threadIdx.y) * 64i)) + (i32(threadIdx.x) * 2i));
            V_smem[v__6 + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
            V_smem[v__6 + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
          }
        }
        workgroupBarrier();
        for (var lj_1_init : i32 = 0; lj_1_init < 2i; lj_1_init++) {
          S_local[lj_1_init] = 0.000000e+00f;
        }
        for (var lk_0 : i32 = 0; lk_0 < 16i; lk_0++) {
          for (var lj_1_1 : i32 = 0; lj_1_1 < 2i; lj_1_1++) {
            for (var lk_1 : i32 = 0; lk_1 < 8i; lk_1++) {
              S_local[lj_1_1] = fma(((Q_smem[((((i32(threadIdx.y) * 512i) + ((i32(threadIdx.x)>>3u) * 128i)) + (lk_0 * 8i)) + lk_1)] * K_smem[(((((i32(threadIdx.x) & 7i) * 256i) + (lj_1_1 * 128i)) + (lk_0 * 8i)) + lk_1)]) * podArgs.attn_score_scaling_factor), 1.275174e-01f, S_local[lj_1_1]);
            }
          }
        }
        workgroupBarrier();
        for (var lj_1_2 : i32 = 0; lj_1_2 < 2i; lj_1_2++) {
          K_smem[(((i32(threadIdx.y) * 64i) + (i32(threadIdx.x) * 2i)) + lj_1_2)] = S_local[lj_1_2];
        }
        workgroupBarrier();
        if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
          m_prev[0i] = m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))];
          m_new[0i] = m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))];
          for (var j : i32 = 0; j < 16i; j++) {
            var condval_5 : bool;
            if ((0i < podArgs.causal)) {
              condval_5 = (((iterator * 16i) + j) <= ((((((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) / 7i) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u)) + kv_chunk_len[0i]) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]) - q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]));
} else {
              condval_5 = (((iterator * 16i) + j) < kv_chunk_len[0i]);
}
            if (condval_5) {
              m_new[0i] = max(m_new[0i], K_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j)]);
            }
          }
          d_new[0i] = (d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] * exp2((m_prev[0i] - m_new[0i])));
        }
        workgroupBarrier();
        for (var j_1 : i32 = 0; j_1 < 16i; j_1++) {
          if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
            var condval_6 : bool;
            if ((0i < podArgs.causal)) {
              condval_6 = (((iterator * 16i) + j_1) <= ((((((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) / 7i) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u)) + kv_chunk_len[0i]) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]) - q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]));
} else {
              condval_6 = (((iterator * 16i) + j_1) < kv_chunk_len[0i]);
}
            if (condval_6) {
              K_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_1)] = exp2((K_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_1)] - m_new[0i]));
            } else {
              K_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_1)] = exp2((-5.000000e+04f - m_new[0i]));
            }
          }
        }
        workgroupBarrier();
        if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
          for (var j_2 : i32 = 0; j_2 < 16i; j_2++) {
            d_new[0i] = (d_new[0i] + K_smem[(((i32(threadIdx.y) * 512i) + (i32(threadIdx.x) * 16i)) + j_2)]);
          }
          m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = m_new[0i];
          d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = d_new[0i];
          m_prev_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = m_prev[0i];
        }
        workgroupBarrier();
        for (var li_1_init : i32 = 0; li_1_init < 4i; li_1_init++) {
          for (var lj_1_init_1 : i32 = 0; lj_1_init_1 < 4i; lj_1_init_1++) {
            O_local[((li_1_init * 4i) + lj_1_init_1)] = (O_local[((li_1_init * 4i) + lj_1_init_1)] * exp2((m_prev_smem[((i32(threadIdx.y) * 4i) + li_1_init)] - m_smem[((i32(threadIdx.y) * 4i) + li_1_init)])));
          }
        }
        for (var lk_0_1 : i32 = 0; lk_0_1 < 2i; lk_0_1++) {
          for (var lk_1_1 : i32 = 0; lk_1_1 < 8i; lk_1_1++) {
            for (var li_1_1 : i32 = 0; li_1_1 < 4i; li_1_1++) {
              for (var lj_1_3 : i32 = 0; lj_1_3 < 4i; lj_1_3++) {
                O_local[((li_1_1 * 4i) + lj_1_3)] = fma(K_smem[((((i32(threadIdx.y) * 64i) + (li_1_1 * 16i)) + (lk_0_1 * 8i)) + lk_1_1)], V_smem[((((lk_0_1 * 1024i) + (lk_1_1 * 128i)) + (i32(threadIdx.x) * 4i)) + lj_1_3)], O_local[((li_1_1 * 4i) + lj_1_3)]);
              }
            }
          }
        }
      }
      for (var li_1_2 : i32 = 0; li_1_2 < 4i; li_1_2++) {
        for (var lj_1_4 : i32 = 0; lj_1_4 < 4i; lj_1_4++) {
          let cur_L : i32 = ((((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) / 7i) + (((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) % 7i)>>31u)) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]);
          if (cur_L < q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]) {
            output[(((((cur_L * 3584i) + (i32(blockIdx.y) * 896i)) + ((((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) % 7i) + (7i & (((((i32(threadIdx.y) * 4i) + LH_start) + li_1_2) % 7i)>>31u))) * 128i)) + (i32(threadIdx.x) * 4i)) + lj_1_4)] = (O_local[((li_1_2 * 4i) + lj_1_4)] / d_smem[((i32(threadIdx.y) * 4i) + li_1_2)]);
          }
        }
      }
      if (((i32(threadIdx.y) * 2i) + (i32(threadIdx.x)>>4u)) < 1i) {
        let cur_L_1 : i32 = ((((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) / 7i) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u)) + q_indptr[(b_idx_1 + podArgs.q_indptr_elem_offset)]);
        if (cur_L_1 < q_indptr[((b_idx_1 + podArgs.q_indptr_elem_offset) + 1i)]) {
          lse[(((cur_L_1 * 28i) + (i32(blockIdx.y) * 7i)) + (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i) + (7i & (((((i32(threadIdx.y) * 32i) + LH_start) + i32(threadIdx.x)) % 7i)>>31u))))] = (m_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + log2(d_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))]));
        }
      }
      tile_id[0i] = (tile_id[0i] + 16i);
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1586
; Schema: 0
               OpCapability Shader
        %100 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize3_NT_matmul7_kernel "fused_fused_dequantize3_NT_matmul7_kernel" %fused_fused_dequantize3_NT_matmul7_kernel_workgroup_id_Input %fused_fused_dequantize3_NT_matmul7_kernel_num_workgroups_Input %fused_fused_dequantize3_NT_matmul7_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize3_NT_matmul7_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_workgroup_id_Input "fused_fused_dequantize3_NT_matmul7_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_num_workgroups_Input "fused_fused_dequantize3_NT_matmul7_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_local_invocation_id_Input "fused_fused_dequantize3_NT_matmul7_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel_inner "fused_fused_dequantize3_NT_matmul7_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize3_NT_matmul7_kernel "fused_fused_dequantize3_NT_matmul7_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize3_NT_matmul7_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize3_NT_matmul7_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize3_NT_matmul7_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_4 ArrayStride 4
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = O
// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize2_fused_NT_matmul6_add3_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> input_embeds : array<f32>;
@group(0) @binding(2) var<storage, read> lv454 : array<u32>;
@group(0) @binding(3) var<storage, read> lv455 : array<f32>;
@group(0) @binding(4) var<storage, read> reshape227 : array<f32>;

struct PODArgs {
  seq_len: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize2_fused_NT_matmul6_add3_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 4>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 4>;
  var NT_matmul_intermediate_pad_local : array<f32, 4>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 2i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 7i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv454[(((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv455[(((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>0u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[9i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>4u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[10i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>8u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[11i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>12u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[12i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>16u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[13i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>20u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[14i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>24u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    dequantize_local[15i] = ((f32(((lv454[((((v__1 * 896i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 448i)]>>28u) & 15u)) - 7.000000e+00f) * lv455[((((v__1 * 224i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 112i)]);
    if ((i32(blockIdx.y) * 2i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[(((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 2i) + 1i) < podArgs.seq_len) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3584i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3585i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3586i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3587i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3588i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3589i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3590i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(reshape227[((((i32(blockIdx.y) * 7168i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3591i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 2i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 2i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.seq_len + 1i)>>1u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 2i) + ax0) < podArgs.seq_len)) {
        T_add[((((i32(blockIdx.y) * 7168i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)] = (NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)] + input_embeds[((((i32(blockIdx.y) * 7168i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)]);
      }
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize_NT_matmul4_kernel_2
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> NT_matmul : array<f32>;
@group(0) @binding(1) var<storage, read> lv336 : array<u32>;
@group(0) @binding(2) var<storage, read> lv337 : array<f32>;
@group(0) @binding(3) var<storage, read> rms_norm227 : array<f32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(4) var<uniform> podArgs : PODArgs;

var<workgroup> rms_norm227_reindex_pad_shared : array<f32, 256>;
var<workgroup> dequantize_reindex_shared : array<f32, 256>;
@compute @workgroup_size(8, 8, 1)
fn fused_fused_dequantize_NT_matmul4_kernel_2(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_reindex_pad_local : array<f32, 16>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var var_1 : i32 = 0; var_1 < 1i; var_1++) {
    NT_matmul_intermediate_reindex_pad_local[0i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[1i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[2i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[3i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[4i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[5i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[6i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[7i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[8i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[9i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[10i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[11i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[12i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[13i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[14i] = 0.000000e+00f;
    NT_matmul_intermediate_reindex_pad_local[15i] = 0.000000e+00f;
    for (var ax3_0 : i32 = 0; ax3_0 < 448i; ax3_0++) {
      workgroupBarrier();
      if ((((v__1 * 32i) + (i32(threadIdx.y) * 4i)) + (i32(threadIdx.x)>>1u)) < podArgs.batch_size) {
        rms_norm227_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = rms_norm227[(((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i))];
        rms_norm227_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = rms_norm227[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 1i)];
        rms_norm227_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = rms_norm227[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 2i)];
        rms_norm227_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = rms_norm227[((((((v__1 * 114688i) + (i32(threadIdx.y) * 14336i)) + ((i32(threadIdx.x)>>1u) * 3584i)) + (ax3_0 * 8i)) + ((i32(threadIdx.x) & 1i) * 4i)) + 3i)];
      } else {
        rms_norm227_reindex_pad_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = 0.000000e+00f;
        rms_norm227_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = 0.000000e+00f;
        rms_norm227_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = 0.000000e+00f;
        rms_norm227_reindex_pad_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = 0.000000e+00f;
      }
      dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i))] = ((f32(((lv336[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32(((i32(threadIdx.x) & 1i) * 16i))) & 15u)) - 7.000000e+00f) * lv337[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 1i)] = ((f32(((lv336[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 4i))) & 15u)) - 7.000000e+00f) * lv337[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 2i)] = ((f32(((lv336[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 8i))) & 15u)) - 7.000000e+00f) * lv337[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      dequantize_reindex_shared[(((i32(threadIdx.y) * 32i) + (i32(threadIdx.x) * 4i)) + 3i)] = ((f32(((lv336[((((i32(blockIdx.y) * 14336i) + (i32(threadIdx.y) * 1792i)) + ((i32(threadIdx.x)>>1u) * 448i)) + ax3_0)]>>u32((((i32(threadIdx.x) & 1i) * 16i) + 12i))) & 15u)) - 7.000000e+00f) * lv337[((((i32(blockIdx.y) * 3584i) + (i32(threadIdx.y) * 448i)) + ((i32(threadIdx.x)>>1u) * 112i)) + (ax3_0>>2u))]);
      workgroupBarrier();
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm227_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm227_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm227_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm227_reindex_pad_shared[(i32(threadIdx.x) * 32i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 8i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 16i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[(i32(threadIdx.y) * 32i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 8i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 16i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 24i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 24i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 1i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 9i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 17i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 1i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 9i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 17i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 25i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 25i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 2i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 10i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 18i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 2i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 10i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 18i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 26i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 26i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 3i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 11i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 19i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 3i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 11i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 19i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 27i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 27i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 4i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 12i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 20i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 4i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 12i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 20i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 28i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 28i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 5i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 13i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 21i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 5i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 13i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 21i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 29i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 29i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 6i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 14i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 22i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 6i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 14i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 22i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 30i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 30i)], NT_matmul_intermediate_reindex_pad_local[15i]);
      NT_matmul_intermediate_reindex_pad_local[0i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[0i]);
      NT_matmul_intermediate_reindex_pad_local[1i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[1i]);
      NT_matmul_intermediate_reindex_pad_local[2i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[2i]);
      NT_matmul_intermediate_reindex_pad_local[3i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 7i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[3i]);
      NT_matmul_intermediate_reindex_pad_local[4i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[4i]);
      NT_matmul_intermediate_reindex_pad_local[5i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[5i]);
      NT_matmul_intermediate_reindex_pad_local[6i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[6i]);
      NT_matmul_intermediate_reindex_pad_local[7i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 15i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[7i]);
      NT_matmul_intermediate_reindex_pad_local[8i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[8i]);
      NT_matmul_intermediate_reindex_pad_local[9i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[9i]);
      NT_matmul_intermediate_reindex_pad_local[10i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[10i]);
      NT_matmul_intermediate_reindex_pad_local[11i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 23i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[11i]);
      NT_matmul_intermediate_reindex_pad_local[12i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 7i)], NT_matmul_intermediate_reindex_pad_local[12i]);
      NT_matmul_intermediate_reindex_pad_local[13i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 15i)], NT_matmul_intermediate_reindex_pad_local[13i]);
      NT_matmul_intermediate_reindex_pad_local[14i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 23i)], NT_matmul_intermediate_reindex_pad_local[14i]);
      NT_matmul_intermediate_reindex_pad_local[15i] = fma(rms_norm227_reindex_pad_shared[((i32(threadIdx.x) * 32i) + 31i)], dequantize_reindex_shared[((i32(threadIdx.y) * 32i) + 31i)], NT_matmul_intermediate_reindex_pad_local[15i]);
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      NT_matmul[((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i))] = NT_matmul_intermediate_reindex_pad_local[0i];
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 1i)] = NT_matmul_intermediate_reindex_pad_local[1i];
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 2i)] = NT_matmul_intermediate_reindex_pad_local[2i];
    }
    if (((v__1 * 32i) + (i32(threadIdx.x) * 4i)) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 3i)] = NT_matmul_intermediate_reindex_pad_local[3i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 152064i)] = NT_matmul_intermediate_reindex_pad_local[4i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 152065i)] = NT_matmul_intermediate_reindex_pad_local[5i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 152066i)] = NT_matmul_intermediate_reindex_pad_local[6i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 1i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 152067i)] = NT_matmul_intermediate_reindex_pad_local[7i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 304128i)] = NT_matmul_intermediate_reindex_pad_local[8i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 304129i)] = NT_matmul_intermediate_reindex_pad_local[9i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 304130i)] = NT_matmul_intermediate_reindex_pad_local[10i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 2i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 304131i)] = NT_matmul_intermediate_reindex_pad_local[11i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 456192i)] = NT_matmul_intermediate_reindex_pad_local[12i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 456193i)] = NT_matmul_intermediate_reindex_pad_local[13i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 456194i)] = NT_matmul_intermediate_reindex_pad_local[14i];
    }
    if ((((v__1 * 32i) + (i32(threadIdx.x) * 4i)) + 3i) < podArgs.batch_size) {
      NT_matmul[(((((v__1 * 4866048i) + (i32(threadIdx.x) * 608256i)) + (i32(blockIdx.y) * 32i)) + (i32(threadIdx.y) * 4i)) + 456195i)] = NT_matmul_intermediate_reindex_pad_local[15i];
    }
  }
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2119
; Schema: 0
               OpCapability Shader
        %276 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %batch_prefill_ragged_kv_kernel "batch_prefill_ragged_kv_kernel" %batch_prefill_ragged_kv_kernel_workgroup_id_Input %batch_prefill_ragged_kv_kernel_num_workgroups_Input %batch_prefill_ragged_kv_kernel_local_invocation_id_Input
               OpExecutionMode %batch_prefill_ragged_kv_kernel LocalSize 32 4 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpMemberName %tint_symbol_13 0 "tint_symbol_12"
               OpName %tint_symbol_13 "tint_symbol_13"
               OpMemberName %tint_symbol_15 0 "tint_symbol_14"
               OpName %tint_symbol_15 "tint_symbol_15"
               OpMemberName %tint_symbol_17 0 "tint_symbol_16"
               OpName %tint_symbol_17 "tint_symbol_17"
               OpMemberName %PODArgs 0 "attn_score_scaling_factor"
               OpMemberName %PODArgs 1 "batch_size"
               OpMemberName %PODArgs 2 "causal"
               OpMemberName %PODArgs 3 "k_rope_pos_offset_elem_offset"
               OpMemberName %PODArgs 4 "kv_indptr_elem_offset"
               OpMemberName %PODArgs 5 "kv_len"
               OpMemberName %PODArgs 6 "q_indptr_elem_offset"
               OpMemberName %PODArgs 7 "q_rope_position_elem_offset"
               OpMemberName %PODArgs 8 "qo_len"
               OpMemberName %PODArgs 9 "rope_scale"
               OpMemberName %PODArgs 10 "rope_theta"
               OpMemberName %PODArgs 11 "rotary_mode"
               OpMemberName %PODArgs 12 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_19 0 "tint_symbol_18"
               OpName %tint_symbol_19 "tint_symbol_19"
               OpName %m_smem "m_smem"
               OpName %d_smem "d_smem"
               OpName %Q_smem "Q_smem"
               OpName %K_smem "K_smem"
               OpName %V_smem "V_smem"
               OpName %S_smem "S_smem"
               OpName %m_prev_smem "m_prev_smem"
               OpName %batch_prefill_ragged_kv_kernel_workgroup_id_Input "batch_prefill_ragged_kv_kernel_workgroup_id_Input"
               OpName %batch_prefill_ragged_kv_kernel_num_workgroups_Input "batch_prefill_ragged_kv_kernel_num_workgroups_Input"
               OpName %batch_prefill_ragged_kv_kernel_local_invocation_id_Input "batch_prefill_ragged_kv_kernel_local_invocation_id_Input"
               OpName %batch_prefill_ragged_kv_kernel_inner "batch_prefill_ragged_kv_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %tile_id "tile_id"
               OpName %batch_idx "batch_idx"
               OpName %batch_rows "batch_rows"
               OpName %batch_tiles "batch_tiles"
               OpName %kv_chunk_len "kv_chunk_len"
               OpName %O_local "O_local"
               OpName %S_local "S_local"
               OpName %m_prev "m_prev"
               OpName %m_new "m_new"
               OpName %d_new "d_new"
               OpName %b_idx "b_idx"
               OpName %b_idx_1 "b_idx_1"
               OpName %q_indptr_val "q_indptr_val"
               OpName %LH_start "LH_start"
               OpName %li_1 "li_1"
               OpName %lj_1 "lj_1"
               OpName %li_lj_fused_0 "li_lj_fused_0"
               OpName %li_lj_fused_3_s "li_lj_fused_3_s"
               OpName %condval "condval"
               OpName %condval_1 "condval_1"
               OpName %v__2 "v__2"
               OpName %iterator "iterator"
               OpName %L_kv_base "L_kv_base"
               OpName %lz_ly_fused_0 "lz_ly_fused_0"
               OpName %lz_ly_fused_3_s "lz_ly_fused_3_s"
               OpName %condval_2 "condval_2"
               OpName %condval_3 "condval_3"
               OpName %v__3 "v__3"
               OpName %lz_ly_fused_0_1 "lz_ly_fused_0_1"
               OpName %v__4 "v__4"
               OpName %v__5 "v__5"
               OpName %lj_1_init "lj_1_init"
               OpName %lk_0 "lk_0"
               OpName %lj_1_1 "lj_1_1"
               OpName %lk_1 "lk_1"
               O
// Dumped WGSL:
//----------------------------------------
// Function: fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1
//----------------------------------------
@group(0) @binding(0) var<storage, read_write> T_add : array<f32>;
@group(0) @binding(1) var<storage, read> lv10 : array<f32>;
@group(0) @binding(2) var<storage, read> lv340 : array<f32>;
@group(0) @binding(3) var<storage, read> lv341 : array<f32>;
@group(0) @binding(4) var<storage, read> lv9 : array<u32>;

struct PODArgs {
  batch_size: i32,
  packGridDimX: u32
}
@group(0) @binding(5) var<uniform> podArgs : PODArgs;

var<workgroup> red_buf0 : array<f32, 64>;
@compute @workgroup_size(64, 1, 1)
fn fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  var NT_matmul_intermediate_pad_rf_local : array<f32, 8>;
  var dequantize_local : array<f32, 16>;
  var NT_matmul_intermediate_pad_rf_local_1 : array<f32, 8>;
  var NT_matmul_intermediate_pad_local : array<f32, 8>;
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  for (var ax0_1_init : i32 = 0; ax0_1_init < 4i; ax0_1_init++) {
    for (var ax1_fused_2_init : i32 = 0; ax1_fused_2_init < 2i; ax1_fused_2_init++) {
      NT_matmul_intermediate_pad_rf_local[((ax0_1_init * 2i) + ax1_fused_2_init)] = 0.000000e+00f;
    }
  }
  for (var ax2_fused_0 : i32 = 0; ax2_fused_0 < 37i; ax2_fused_0++) {
    dequantize_local[0i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>0u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[1i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>4u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[2i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>8u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[3i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>12u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[4i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>16u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[5i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>20u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[6i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>24u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[7i] = ((f32(((lv9[(((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x))]>>28u) & 15u)) - 7.000000e+00f) * lv10[(((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u))]);
    dequantize_local[8i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>0u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[9i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>4u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[10i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>8u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[11i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>12u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[12i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>16u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[13i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>20u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[14i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>24u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    dequantize_local[15i] = ((f32(((lv9[((((v__1 * 4736i) + (ax2_fused_0 * 64i)) + i32(threadIdx.x)) + 2368i)]>>28u) & 15u)) - 7.000000e+00f) * lv10[((((v__1 * 1184i) + (ax2_fused_0 * 16i)) + (i32(threadIdx.x)>>2u)) + 592i)]);
    if ((i32(blockIdx.y) * 4i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[(((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[0i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[0i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[(((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i))], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 1i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 2i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 3i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 4i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 5i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 6i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[1i]);
      NT_matmul_intermediate_pad_rf_local[1i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 7i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[1i]);
    }
    if (((i32(blockIdx.y) * 4i) + 1i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18944i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18945i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18946i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18947i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18948i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18949i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18950i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[2i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18951i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[2i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18944i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18945i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18946i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18947i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18948i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18949i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18950i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[3i]);
      NT_matmul_intermediate_pad_rf_local[3i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 18951i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[3i]);
    }
    if (((i32(blockIdx.y) * 4i) + 2i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37888i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37889i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37890i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37891i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37892i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37893i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37894i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[4i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37895i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[4i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37888i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37889i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37890i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37891i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37892i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37893i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37894i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[5i]);
      NT_matmul_intermediate_pad_rf_local[5i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 37895i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[5i]);
    }
    if (((i32(blockIdx.y) * 4i) + 3i) < podArgs.batch_size) {
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56832i)], dequantize_local[0i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56833i)], dequantize_local[1i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56834i)], dequantize_local[2i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56835i)], dequantize_local[3i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56836i)], dequantize_local[4i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56837i)], dequantize_local[5i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56838i)], dequantize_local[6i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[6i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56839i)], dequantize_local[7i], NT_matmul_intermediate_pad_rf_local[6i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56832i)], dequantize_local[8i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56833i)], dequantize_local[9i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56834i)], dequantize_local[10i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56835i)], dequantize_local[11i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56836i)], dequantize_local[12i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56837i)], dequantize_local[13i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56838i)], dequantize_local[14i], NT_matmul_intermediate_pad_rf_local[7i]);
      NT_matmul_intermediate_pad_rf_local[7i] = fma(lv341[((((i32(blockIdx.y) * 75776i) + (ax2_fused_0 * 512i)) + (i32(threadIdx.x) * 8i)) + 56839i)], dequantize_local[15i], NT_matmul_intermediate_pad_rf_local[7i]);
    }
  }
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[0i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[0i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[0i + 0], NT_matmul_intermediate_pad_rf_local_1[0i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[0i + 0], NT_matmul_intermediate_pad_rf_local[0i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[2i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[2i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[2i + 0], NT_matmul_intermediate_pad_rf_local_1[2i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[2i + 0], NT_matmul_intermediate_pad_rf_local[2i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[4i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[4i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[4i + 0], NT_matmul_intermediate_pad_rf_local_1[4i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[4i + 0], NT_matmul_intermediate_pad_rf_local[4i + 1]))[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = vec2<f32>(0.000000e+00f, 0.000000e+00f)[1];
  NT_matmul_intermediate_pad_rf_local_1[6i + 0] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[0];
  NT_matmul_intermediate_pad_rf_local_1[6i + 1] = (vec2<f32>(NT_matmul_intermediate_pad_rf_local_1[6i + 0], NT_matmul_intermediate_pad_rf_local_1[6i + 1]) + vec2<f32>(NT_matmul_intermediate_pad_rf_local[6i + 0], NT_matmul_intermediate_pad_rf_local[6i + 1]))[1];
  for (var ax2_fused_2 : i32 = 0; ax2_fused_2 < 2i; ax2_fused_2++) {
    for (var ax1 : i32 = 0; ax1 < 4i; ax1++) {
      workgroupBarrier();
      red_buf0[i32(threadIdx.x)] = NT_matmul_intermediate_pad_rf_local_1[((ax1 * 2i) + ax2_fused_2)];
      workgroupBarrier();
      if (i32(threadIdx.x) < 32i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 32i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[i32(threadIdx.x)] = (red_buf0[i32(threadIdx.x)] + red_buf0[(i32(threadIdx.x) + 1i)]);
      }
      workgroupBarrier();
      NT_matmul_intermediate_pad_local[((ax1 * 2i) + ax2_fused_2)] = red_buf0[0i];
    }
  }
  for (var ax0 : i32 = 0; ax0 < 4i; ax0++) {
    for (var ax1_fused_2 : i32 = 0; ax1_fused_2 < 2i; ax1_fused_2++) {
      if (((i32(threadIdx.x) == 0i) && (((i32(blockIdx.y) - ((podArgs.batch_size + 3i)>>2u)) < 0i) || (i32(blockIdx.y) == 0i))) && (((i32(blockIdx.y) * 4i) + ax0) < podArgs.batch_size)) {
        T_add[((((i32(blockIdx.y) * 14336i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)] = (NT_matmul_intermediate_pad_local[((ax0 * 2i) + ax1_fused_2)] + lv340[((((i32(blockIdx.y) * 14336i) + (ax0 * 3584i)) + (v__1 * 2i)) + ax1_fused_2)]);
      }
    }
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: apply_bitmask_inplace_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read> bitmask : array<i32>;
@group(0) @binding(1) var<storage, read_write> logits : array<f32>;
@group(0) @binding(2) var<storage, read> seq_ids : array<i32>;

struct PODArgs {
  batch_size: i32,
  num_seq: i32,
  vocab_size: i32,
  packGridDimX: u32
}
@group(0) @binding(3) var<uniform> podArgs : PODArgs;

@compute @workgroup_size(256, 1, 1)
fn apply_bitmask_inplace_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  if (((v__1 * 256i) + i32(threadIdx.x)) < (podArgs.num_seq * podArgs.vocab_size)) {
    var condval : f32;
    if ((((bitmask[(((((v__1 * 256i) + i32(threadIdx.x)) % podArgs.vocab_size)>>5u) + (seq_ids[((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.vocab_size * podArgs.num_seq)) / podArgs.vocab_size)] * ((podArgs.vocab_size + 31i)>>5u)))]>>u32(((((v__1 * 256i) + i32(threadIdx.x)) % podArgs.vocab_size) & 31i))) & 1i) == 1i)) {
      condval = logits[((seq_ids[(((v__1 * 256i) + i32(threadIdx.x)) / podArgs.vocab_size)] * podArgs.vocab_size) + (((v__1 * 256i) + i32(threadIdx.x)) % podArgs.vocab_size))];
} else {
      condval = -3.402823e+38f;
}
    logits[((seq_ids[((((v__1 * 256i) + i32(threadIdx.x)) % (podArgs.vocab_size * podArgs.num_seq)) / podArgs.vocab_size)] * podArgs.vocab_size) + (((v__1 * 256i) + i32(threadIdx.x)) % podArgs.vocab_size))] = condval;
  }
}



// Dumped WGSL:
//----------------------------------------
// Function: batch_decode_paged_kv_kernel
//----------------------------------------
@group(0) @binding(0) var<storage, read> Q : array<vec4<f32>>;
@group(0) @binding(1) var<storage, read> k_rope_pos_offset : array<i32>;
@group(0) @binding(2) var<storage, read> length_info : array<i32>;
@group(0) @binding(3) var<storage, read_write> lse : array<f32>;
@group(0) @binding(4) var<storage, read_write> output : array<vec4<f32>>;
@group(0) @binding(5) var<storage, read> page_table_indptr : array<i32>;
@group(0) @binding(6) var<storage, read> page_table_values : array<i32>;
@group(0) @binding(7) var<storage, read> pages : array<vec4<f32>>;
@group(0) @binding(8) var<storage, read> q_rope_position : array<i32>;

struct PODArgs {
  B: i32,
  attn_score_scaling_factor: f32,
  k_rope_pos_offset_elem_offset: i32,
  length_info_elem_offset: i32,
  max_num_pages: i32,
  nnz_pages: i32,
  page_indptr_elem_offset: i32,
  page_values_elem_offset: i32,
  q_rope_position_elem_offset: i32,
  rope_scale: f32,
  rope_theta: f32,
  rotary_mode: i32,
  packGridDimX: u32
}
@group(0) @binding(9) var<uniform> podArgs : PODArgs;

var<workgroup> K_smem : array<vec4<f32>, 224>;
var<workgroup> V_smem : array<vec4<f32>, 224>;
var<workgroup> red_buf0 : array<f32, 224>;
@compute @workgroup_size(32, 7, 1)
fn batch_decode_paged_kv_kernel(
  @builtin(workgroup_id) blockIdx : vec3<u32>,
  @builtin(num_workgroups) gridDim : vec3<u32>,
  @builtin(local_invocation_id) threadIdx : vec3<u32>
) {
  if (blockIdx.z * gridDim.x + blockIdx.x > podArgs.packGridDimX) { return; }
  let v__1 : i32 = i32(blockIdx.z * gridDim.x + blockIdx.x);
  var kv_chunk_len : array<i32, 1>;
  var st_m : array<f32, 1>;
  var st_d : array<f32, 1>;
  var O_local : array<vec4<f32>, 1>;
  var Q_local : array<vec4<f32>, 1>;
  var m_prev : array<f32, 1>;
  var S_local : array<f32, 7>;
  var QK_local : array<vec4<f32>, 1>;
  var S_reduce_local : array<f32, 1>;
  var V_local : array<vec4<f32>, 1>;
  let cur_page_indptr_begin : i32 = page_table_indptr[(v__1 + podArgs.page_indptr_elem_offset)];
  let cur_page_indptr_end : i32 = page_table_indptr[((v__1 + podArgs.page_indptr_elem_offset) + 1i)];
  var condval : i32;
  if ((cur_page_indptr_begin != cur_page_indptr_end)) {
    condval = ((((cur_page_indptr_end * 16i) + length_info[(v__1 + podArgs.length_info_elem_offset)]) - (cur_page_indptr_begin * 16i)) - 16i);
} else {
    condval = 0i;
}
  kv_chunk_len[0i] = condval;
  st_m[0i] = -5.000000e+04f;
  st_d[0i] = 1.000000e+00f;
  O_local[0i] = vec4<f32>(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f);
  var condval_1 : vec4<f32>;
  if ((podArgs.rotary_mode == 1i)) {
    var condval_2 : vec4<f32>;
    if ((i32(threadIdx.x) < 16i)) {
      condval_2 = (Q[((((((v__1 * 3584i) + (i32(blockIdx.y) * 896i)) + (i32(threadIdx.y) * 128i)) + (i32(threadIdx.x) * 4i)) + 64i) / 4i)] * vec4<f32>(-1.000000e+00f, -1.000000e+00f, -1.000000e+00f, -1.000000e+00f));
} else {
      condval_2 = Q[((((((v__1 * 3584i) + (i32(blockIdx.y) * 896i)) + (i32(threadIdx.y) * 128i)) + (i32(threadIdx.x) * 4i)) - 64i) / 4i)];
}
    condval_1 = fma(sin((vec4<f32>((f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale), (f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale), (f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale), (f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale)) / pow(vec4<f32>(podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta), (vec4<f32>(vec4<i32>((((i32(threadIdx.x) & 15i) * 8i))+(2i*0), (((i32(threadIdx.x) & 15i) * 8i))+(2i*1), (((i32(threadIdx.x) & 15i) * 8i))+(2i*2), (((i32(threadIdx.x) & 15i) * 8i))+(2i*3))) * vec4<f32>(7.812500e-03f, 7.812500e-03f, 7.812500e-03f, 7.812500e-03f))))), condval_2, (cos((vec4<f32>((f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale), (f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale), (f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale), (f32(q_rope_position[(v__1 + podArgs.q_rope_position_elem_offset)]) * podArgs.rope_scale)) / pow(vec4<f32>(podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta), (vec4<f32>(vec4<i32>((((i32(threadIdx.x) & 15i) * 8i))+(2i*0), (((i32(threadIdx.x) & 15i) * 8i))+(2i*1), (((i32(threadIdx.x) & 15i) * 8i))+(2i*2), (((i32(threadIdx.x) & 15i) * 8i))+(2i*3))) * vec4<f32>(7.812500e-03f, 7.812500e-03f, 7.812500e-03f, 7.812500e-03f))))) * Q[(((((v__1 * 3584i) + (i32(blockIdx.y) * 896i)) + (i32(threadIdx.y) * 128i)) + (i32(threadIdx.x) * 4i)) / 4i)]));
} else {
    condval_1 = Q[(((((v__1 * 3584i) + (i32(blockIdx.y) * 896i)) + (i32(threadIdx.y) * 128i)) + (i32(threadIdx.x) * 4i)) / 4i)];
}
  Q_local[0i] = condval_1;
  for (var iterator : i32 = 0; iterator < (((kv_chunk_len[0i] - 2147483640i) / 7i) - -306783378i); iterator++) {
    workgroupBarrier();
    if (((iterator * 7i) + i32(threadIdx.y)) < kv_chunk_len[0i]) {
      let page_no : i32 = page_table_values[(((((iterator * 7i) + i32(threadIdx.y))>>4u) + cur_page_indptr_begin) + podArgs.page_values_elem_offset)];
      var condval_3 : vec4<f32>;
      if ((podArgs.rotary_mode == 1i)) {
        var condval_4 : vec4<f32>;
        if ((i32(threadIdx.x) < 16i)) {
          condval_4 = (pages[((((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((((iterator * 7i) + i32(threadIdx.y)) & 15i) * 128i)) + (i32(threadIdx.x) * 4i)) + 64i) / 4i)] * vec4<f32>(-1.000000e+00f, -1.000000e+00f, -1.000000e+00f, -1.000000e+00f));
} else {
          condval_4 = pages[((((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((((iterator * 7i) + i32(threadIdx.y)) & 15i) * 128i)) + (i32(threadIdx.x) * 4i)) - 64i) / 4i)];
}
        condval_3 = fma(sin((vec4<f32>((f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale), (f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale), (f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale), (f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale)) / pow(vec4<f32>(podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta), (vec4<f32>(vec4<i32>((((i32(threadIdx.x) & 15i) * 8i))+(2i*0), (((i32(threadIdx.x) & 15i) * 8i))+(2i*1), (((i32(threadIdx.x) & 15i) * 8i))+(2i*2), (((i32(threadIdx.x) & 15i) * 8i))+(2i*3))) * vec4<f32>(7.812500e-03f, 7.812500e-03f, 7.812500e-03f, 7.812500e-03f))))), condval_4, (cos((vec4<f32>((f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale), (f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale), (f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale), (f32((((iterator * 7i) + k_rope_pos_offset[(v__1 + podArgs.k_rope_pos_offset_elem_offset)]) + i32(threadIdx.y))) * podArgs.rope_scale)) / pow(vec4<f32>(podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta, podArgs.rope_theta), (vec4<f32>(vec4<i32>((((i32(threadIdx.x) & 15i) * 8i))+(2i*0), (((i32(threadIdx.x) & 15i) * 8i))+(2i*1), (((i32(threadIdx.x) & 15i) * 8i))+(2i*2), (((i32(threadIdx.x) & 15i) * 8i))+(2i*3))) * vec4<f32>(7.812500e-03f, 7.812500e-03f, 7.812500e-03f, 7.812500e-03f))))) * pages[(((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((((iterator * 7i) + i32(threadIdx.y)) & 15i) * 128i)) + (i32(threadIdx.x) * 4i)) / 4i)]));
} else {
        condval_3 = pages[(((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((((iterator * 7i) + i32(threadIdx.y)) & 15i) * 128i)) + (i32(threadIdx.x) * 4i)) / 4i)];
}
      K_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = condval_3;
      V_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = pages[((((((page_no * 16384i) + (i32(blockIdx.y) * 2048i)) + ((((iterator * 7i) + i32(threadIdx.y)) & 15i) * 128i)) + (i32(threadIdx.x) * 4i)) + 8192i) / 4i)];
    } else {
      K_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = vec4<f32>(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f);
      V_smem[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = vec4<f32>(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f);
    }
    workgroupBarrier();
    m_prev[0i] = st_m[0i];
    for (var j : i32 = 0; j < 7i; j++) {
      QK_local[0i] = (((Q_local[0i] * K_smem[((j * 32i) + i32(threadIdx.x))]) * vec4<f32>(podArgs.attn_score_scaling_factor, podArgs.attn_score_scaling_factor, podArgs.attn_score_scaling_factor, podArgs.attn_score_scaling_factor)) * vec4<f32>(1.275174e-01f, 1.275174e-01f, 1.275174e-01f, 1.275174e-01f));
      S_reduce_local[0i] = 0.000000e+00f;
      S_reduce_local[0i] = (S_reduce_local[0i] + QK_local[0i][0]);
      S_reduce_local[0i] = (S_reduce_local[0i] + QK_local[0i][1]);
      S_reduce_local[0i] = (S_reduce_local[0i] + QK_local[0i][2]);
      S_reduce_local[0i] = (S_reduce_local[0i] + QK_local[0i][3]);
      workgroupBarrier();
      red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = S_reduce_local[0i];
      workgroupBarrier();
      if (i32(threadIdx.x) < 16i) {
        red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 16i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 8i) {
        red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 8i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 4i) {
        red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 4i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 2i) {
        red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 2i)]);
      }
      workgroupBarrier();
      if (i32(threadIdx.x) < 1i) {
        red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] = (red_buf0[((i32(threadIdx.y) * 32i) + i32(threadIdx.x))] + red_buf0[(((i32(threadIdx.y) * 32i) + i32(threadIdx.x)) + 1i)]);
      }
      workgroupBarrier();
      S_local[j] = -5.000000e+04f;
      if (((iterator * 7i) + j) < kv_chunk_len[0i]) {
        S_local[j] = red_buf0[(i32(threadIdx.y) * 32i)];
      }
      st_m[0i] = max(st_m[0i], S_local[j]);
    }
    let o_scale : f32 = exp2((m_prev[0i] - st_m[0i]));
    st_d[0i] = (st_d[0i] * o_scale);
    for (var j_1 : i32 = 0; j_1 < 7i; j_1++) {
      S_local[j_1] = exp2((S_local[j_1] - st_m[0i]));
      st_d[0i] = (st_d[0i] + S_local[j_1]);
    }
    O_local[0i] = (O_local[0i] * vec4<f32>(o_scale, o_scale, o_scale, o_scale));
    for (var j_2 : i32 = 0; j_2 < 7i; j_2++) {
      V_local[0i] = V_smem[((j_2 * 32i) + i32(threadIdx.x))];
      O_local[0i] = fma(V_local[0i], vec4<f32>(S_local[j_2], S_local[j_2], S_local[j_2], S_local[j_2]), O_local[0i]);
    }
  }
  O_local[0i] = (O_local[0i] / vec4<f32>(st_d[0i], st_d[0i], st_d[0i], st_d[0i]));
  output[(((((v__1 * 3584i) + (i32(blockIdx.y) * 896i)) + (i32(threadIdx.y) * 128i)) + (i32(threadIdx.x) * 4i)) / 4i)] = O_local[0i];
  lse[(((v__1 * 28i) + (i32(blockIdx.y) * 7i)) + i32(threadIdx.y))] = (st_m[0i] + log2(st_d[0i]));
}



/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 211
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %apply_bitmask_inplace_kernel "apply_bitmask_inplace_kernel" %apply_bitmask_inplace_kernel_workgroup_id_Input %apply_bitmask_inplace_kernel_num_workgroups_Input %apply_bitmask_inplace_kernel_local_invocation_id_Input
               OpExecutionMode %apply_bitmask_inplace_kernel LocalSize 256 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "num_seq"
               OpMemberName %PODArgs 2 "vocab_size"
               OpMemberName %PODArgs 3 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpName %apply_bitmask_inplace_kernel_workgroup_id_Input "apply_bitmask_inplace_kernel_workgroup_id_Input"
               OpName %apply_bitmask_inplace_kernel_num_workgroups_Input "apply_bitmask_inplace_kernel_num_workgroups_Input"
               OpName %apply_bitmask_inplace_kernel_local_invocation_id_Input "apply_bitmask_inplace_kernel_local_invocation_id_Input"
               OpName %apply_bitmask_inplace_kernel_inner "apply_bitmask_inplace_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %condval "condval"
               OpName %tint_mod_i32 "tint_mod_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs_0 "lhs"
               OpName %rhs_0 "rhs"
               OpName %apply_bitmask_inplace_kernel "apply_bitmask_inplace_kernel"
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 Coherent
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %PODArgs 2 Offset 8
               OpMemberDecorate %PODArgs 3 Offset 12
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpDecorate %apply_bitmask_inplace_kernel_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %apply_bitmask_inplace_kernel_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %apply_bitmask_inplace_kernel_local_invocation_id_Input BuiltIn LocalInvocationId
        %int = OpTypeInt 32 1
%_runtimearr_int = OpTypeRuntimeArray %int
%tint_symbol_1 = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symbol_5 = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer_tint_symbol_5 = OpTypePointer StorageBuffer %tint_symbol_5
         %11 = OpVariable %_ptr_StorageBuffer_tint_symbol_5 StorageBuffer
       %uint = OpTypeInt 32 0
    %PODArgs = OpTypeStruct %int %int %int %uint
%tint_symbol_7 = OpTypeStruct %PODArgs
%_ptr_Uniform_tint_symbol_7 = OpTypePointer Uniform %tint_symbol_7
         %14 = OpVariable %_ptr_Uniform_tint_symbol_7 Uniform
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%apply_bitmask_inplace_kernel_workgroup_id_Input = OpVariable %_ptr_Input_v3uint Input
%apply_bitmask_inplace_kernel_num_
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1600
; Schema: 0
               OpCapability Shader
        %103 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel" %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_workgroup_id_Input %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_num_workgroups_Input %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "seq_len"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_workgroup_id_Input "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_workgroup_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_num_workgroups_Input "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_num_workgroups_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_local_invocation_id_Input "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_local_invocation_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_inner "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel "fused_fused_dequantize2_fused_NT_matmul6_add3_kernel"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize2_fused_NT_matmul6_add3_kernel_workgroup_id_Inpu
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2104
; Schema: 0
               OpCapability Shader
        %289 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %batch_prefill_paged_kv_kernel "batch_prefill_paged_kv_kernel" %batch_prefill_paged_kv_kernel_workgroup_id_Input %batch_prefill_paged_kv_kernel_num_workgroups_Input %batch_prefill_paged_kv_kernel_local_invocation_id_Input
               OpExecutionMode %batch_prefill_paged_kv_kernel LocalSize 32 4 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpMemberName %tint_symbol_13 0 "tint_symbol_12"
               OpName %tint_symbol_13 "tint_symbol_13"
               OpMemberName %tint_symbol_15 0 "tint_symbol_14"
               OpName %tint_symbol_15 "tint_symbol_15"
               OpMemberName %tint_symbol_17 0 "tint_symbol_16"
               OpName %tint_symbol_17 "tint_symbol_17"
               OpMemberName %tint_symbol_19 0 "tint_symbol_18"
               OpName %tint_symbol_19 "tint_symbol_19"
               OpMemberName %PODArgs 0 "attn_score_scaling_factor"
               OpMemberName %PODArgs 1 "batch_size"
               OpMemberName %PODArgs 2 "causal"
               OpMemberName %PODArgs 3 "k_rope_pos_offset_elem_offset"
               OpMemberName %PODArgs 4 "length_info_elem_offset"
               OpMemberName %PODArgs 5 "max_num_pages"
               OpMemberName %PODArgs 6 "nnz_pages"
               OpMemberName %PODArgs 7 "page_indptr_elem_offset"
               OpMemberName %PODArgs 8 "page_values_elem_offset"
               OpMemberName %PODArgs 9 "q_indptr_elem_offset"
               OpMemberName %PODArgs 10 "q_rope_position_elem_offset"
               OpMemberName %PODArgs 11 "rope_scale"
               OpMemberName %PODArgs 12 "rope_theta"
               OpMemberName %PODArgs 13 "rotary_mode"
               OpMemberName %PODArgs 14 "total_len"
               OpMemberName %PODArgs 15 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_21 0 "tint_symbol_20"
               OpName %tint_symbol_21 "tint_symbol_21"
               OpName %m_smem "m_smem"
               OpName %d_smem "d_smem"
               OpName %Q_smem "Q_smem"
               OpName %K_smem "K_smem"
               OpName %V_smem "V_smem"
               OpName %m_prev_smem "m_prev_smem"
               OpName %batch_prefill_paged_kv_kernel_workgroup_id_Input "batch_prefill_paged_kv_kernel_workgroup_id_Input"
               OpName %batch_prefill_paged_kv_kernel_num_workgroups_Input "batch_prefill_paged_kv_kernel_num_workgroups_Input"
               OpName %batch_prefill_paged_kv_kernel_local_invocation_id_Input "batch_prefill_paged_kv_kernel_local_invocation_id_Input"
               OpName %batch_prefill_paged_kv_kernel_inner "batch_prefill_paged_kv_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %tile_id "tile_id"
               OpName %batch_idx "batch_idx"
               OpName %batch_rows "batch_rows"
               OpName %batch_tiles "batch_tiles"
               OpName %kv_chunk_len "kv_chunk_len"
               OpName %O_local "O_local"
               OpName %S_local "S_local"
               OpName %m_prev "m_prev"
               OpName %m_new "m_new"
               OpName %d_new "d_new"
               OpName %b_idx "b_idx"
               OpName %b_idx_1 "b_idx_1"
               OpName %LH_start "LH_start"
               OpName %q_indptr_val "q_indptr_val"
               OpName %cur_page_indptr_begin "cur_page_indptr_begin"
               OpName %cur_page_indptr_end "cur_page_indptr_end"
               OpName %condval "condval"
               OpName %li_1 "li_1"
               OpName %lj_1 "lj_1"
               OpName %li_lj_fused_0 "li_lj_fused_0"
               OpName %li_lj_fused_3_s "li_lj_fused_3_s"
               OpName %condval_1 "condval_1"
               OpName %condval_2 "condval_2"
               OpName %v__2 "v__2"
               OpName %iterator "iterator"
               OpName %lz_ly_fused_0 "lz_ly_fused_0"
               OpName %page_no "page_no"
               OpName %lz_ly_fused_3_s "lz_
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 19108
; Schema: 0
               OpCapability Shader
        %171 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %chunk_lse_kernel "chunk_lse_kernel" %chunk_lse_kernel_workgroup_id_Input %chunk_lse_kernel_num_workgroups_Input %chunk_lse_kernel_local_invocation_id_Input
               OpExecutionMode %chunk_lse_kernel LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "num_chunks"
               OpMemberName %PODArgs 2 "vocab_size"
               OpMemberName %PODArgs 3 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %red_buf0 "red_buf0"
               OpName %temp_max_shared "temp_max_shared"
               OpName %red_buf0_1 "red_buf0_1"
               OpName %temp_sum_shared "temp_sum_shared"
               OpName %chunk_lse_kernel_workgroup_id_Input "chunk_lse_kernel_workgroup_id_Input"
               OpName %chunk_lse_kernel_num_workgroups_Input "chunk_lse_kernel_num_workgroups_Input"
               OpName %chunk_lse_kernel_local_invocation_id_Input "chunk_lse_kernel_local_invocation_id_Input"
               OpName %chunk_lse_kernel_inner "chunk_lse_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %in_thread_temp_max_shared "in_thread_temp_max_shared"
               OpName %in_thread_temp_sum_shared "in_thread_temp_sum_shared"
               OpName %condval "condval"
               OpName %condval_1 "condval_1"
               OpName %condval_2 "condval_2"
               OpName %condval_3 "condval_3"
               OpName %condval_4 "condval_4"
               OpName %condval_5 "condval_5"
               OpName %condval_6 "condval_6"
               OpName %condval_7 "condval_7"
               OpName %condval_8 "condval_8"
               OpName %condval_9 "condval_9"
               OpName %condval_10 "condval_10"
               OpName %condval_11 "condval_11"
               OpName %condval_12 "condval_12"
               OpName %condval_13 "condval_13"
               OpName %condval_14 "condval_14"
               OpName %condval_15 "condval_15"
               OpName %condval_16 "condval_16"
               OpName %condval_17 "condval_17"
               OpName %condval_18 "condval_18"
               OpName %condval_19 "condval_19"
               OpName %condval_20 "condval_20"
               OpName %condval_21 "condval_21"
               OpName %condval_22 "condval_22"
               OpName %condval_23 "condval_23"
               OpName %condval_24 "condval_24"
               OpName %condval_25 "condval_25"
               OpName %condval_26 "condval_26"
               OpName %condval_27 "condval_27"
               OpName %condval_28 "condval_28"
               OpName %condval_29 "condval_29"
               OpName %condval_30 "condval_30"
               OpName %condval_31 "condval_31"
               OpName %condval_32 "condval_32"
               OpName %condval_33 "condval_33"
               OpName %condval_34 "condval_34"
               OpName %condval_35 "condval_35"
               OpName %condval_36 "condval_36"
               OpName %condval_37 "condval_37"
               OpName %condval_38 "condval_38"
               OpName %condval_39 "condval_39"
               OpName %condval_40 "condval_40"
               OpName %condval_41 "condval_41"
               OpName %condval_42 "condval_42"
               OpName %condval_43 "condval_43"
               OpName %condval_44 "condval_44"
               OpName %condval_45 "condval_45"
               OpName %condval_46 "condval_46"
               OpName %condval_47 "condval_47"
               OpName %condval_48 "condval_48"
               OpName %condval_49 "condval_49"
               OpName %condval_50 "condval_50"
               OpName %condval_51 "condval_51"
               OpName %condval_52 "condval_52"
               OpName %condval_53 "condval_53"
               OpName %condval_54 "condval_54"
               OpName %condval_55 "condval_55"
               OpName %condval_56 "condval_56"
               OpName %condval_57 "condval_57"
               OpName %condval_58 "condval_58"
              
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 3883
; Schema: 0
               OpCapability Shader
        %155 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2 "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2" %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_workgroup_id_Input %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_num_workgroups_Input %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2 LocalSize 8 8 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %reshape339_reindex_pad_shared "reshape339_reindex_pad_shared"
               OpName %dequantize_reindex_shared "dequantize_reindex_shared"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_workgroup_id_Input "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_workgroup_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_num_workgroups_Input "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_num_workgroups_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_local_invocation_id_Input "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_local_invocation_id_Input"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_inner "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_reindex_pad_local "NT_matmul_intermediate_reindex_pad_local"
               OpName %v__1 "v__1"
               OpName %var_1 "var_1"
               OpName %ax3_0 "ax3_0"
               OpName %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2 "fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_256 ArrayStride 4
               OpDecorate %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize2_fused_NT_matmul1_add1_kernel_2_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_16 Arr
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1277
; Schema: 0
               OpCapability Shader
        %290 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %batch_decode_paged_kv_kernel "batch_decode_paged_kv_kernel" %batch_decode_paged_kv_kernel_workgroup_id_Input %batch_decode_paged_kv_kernel_num_workgroups_Input %batch_decode_paged_kv_kernel_local_invocation_id_Input
               OpExecutionMode %batch_decode_paged_kv_kernel LocalSize 32 7 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpMemberName %tint_symbol_13 0 "tint_symbol_12"
               OpName %tint_symbol_13 "tint_symbol_13"
               OpMemberName %tint_symbol_15 0 "tint_symbol_14"
               OpName %tint_symbol_15 "tint_symbol_15"
               OpMemberName %tint_symbol_17 0 "tint_symbol_16"
               OpName %tint_symbol_17 "tint_symbol_17"
               OpMemberName %PODArgs 0 "B"
               OpMemberName %PODArgs 1 "attn_score_scaling_factor"
               OpMemberName %PODArgs 2 "k_rope_pos_offset_elem_offset"
               OpMemberName %PODArgs 3 "length_info_elem_offset"
               OpMemberName %PODArgs 4 "max_num_pages"
               OpMemberName %PODArgs 5 "nnz_pages"
               OpMemberName %PODArgs 6 "page_indptr_elem_offset"
               OpMemberName %PODArgs 7 "page_values_elem_offset"
               OpMemberName %PODArgs 8 "q_rope_position_elem_offset"
               OpMemberName %PODArgs 9 "rope_scale"
               OpMemberName %PODArgs 10 "rope_theta"
               OpMemberName %PODArgs 11 "rotary_mode"
               OpMemberName %PODArgs 12 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_19 0 "tint_symbol_18"
               OpName %tint_symbol_19 "tint_symbol_19"
               OpName %K_smem "K_smem"
               OpName %V_smem "V_smem"
               OpName %red_buf0 "red_buf0"
               OpName %batch_decode_paged_kv_kernel_workgroup_id_Input "batch_decode_paged_kv_kernel_workgroup_id_Input"
               OpName %batch_decode_paged_kv_kernel_num_workgroups_Input "batch_decode_paged_kv_kernel_num_workgroups_Input"
               OpName %batch_decode_paged_kv_kernel_local_invocation_id_Input "batch_decode_paged_kv_kernel_local_invocation_id_Input"
               OpName %batch_decode_paged_kv_kernel_inner "batch_decode_paged_kv_kernel_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %v__1 "v__1"
               OpName %kv_chunk_len "kv_chunk_len"
               OpName %st_m "st_m"
               OpName %st_d "st_d"
               OpName %O_local "O_local"
               OpName %Q_local "Q_local"
               OpName %m_prev "m_prev"
               OpName %S_local "S_local"
               OpName %QK_local "QK_local"
               OpName %S_reduce_local "S_reduce_local"
               OpName %V_local "V_local"
               OpName %cur_page_indptr_begin "cur_page_indptr_begin"
               OpName %cur_page_indptr_end "cur_page_indptr_end"
               OpName %condval "condval"
               OpName %condval_1 "condval_1"
               OpName %condval_2 "condval_2"
               OpName %iterator "iterator"
               OpName %page_no "page_no"
               OpName %condval_3 "condval_3"
               OpName %condval_4 "condval_4"
               OpName %j "j"
               OpName %o_scale "o_scale"
               OpName %j_1 "j_1"
               OpName %j_2 "j_2"
               OpName %tint_div_i32 "tint_div_i32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %batch_decode_paged_kv_kernel "batch_decode_paged_kv_kernel"
               OpDecorate %_runtimearr_v4float ArrayStride 16
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %7 Descript
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 2301
; Schema: 0
               OpCapability Shader
        %104 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1 "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1" %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1_workgroup_id_Input %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1_num_workgroups_Input %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1 LocalSize 64 1 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_11 0 "tint_symbol_10"
               OpName %tint_symbol_11 "tint_symbol_11"
               OpName %red_buf0 "red_buf0"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1_workgroup_id_Input "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1_workgroup_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1_num_workgroups_Input "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1_num_workgroups_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1_local_invocation_id_Input "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1_local_invocation_id_Input"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1_inner "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_pad_rf_local "NT_matmul_intermediate_pad_rf_local"
               OpName %dequantize_local "dequantize_local"
               OpName %NT_matmul_intermediate_pad_rf_local_1 "NT_matmul_intermediate_pad_rf_local_1"
               OpName %NT_matmul_intermediate_pad_local "NT_matmul_intermediate_pad_local"
               OpName %v__1 "v__1"
               OpName %ax0_1_init "ax0_1_init"
               OpName %ax1_fused_2_init "ax1_fused_2_init"
               OpName %ax2_fused_0 "ax2_fused_0"
               OpName %ax2_fused_2 "ax2_fused_2"
               OpName %ax1 "ax1"
               OpName %ax0 "ax0"
               OpName %ax1_fused_2 "ax1_fused_2"
               OpName %fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1 "fused_fused_dequantize4_fused_NT_matmul3_add1_kernel_1"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 2
               OpDecorate %9 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %12 DescriptorSet 0
               OpDecorate %12 Binding 3
               OpDecorate %12 NonWritable
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %15 DescriptorSet 0
               OpDecorate %15 Binding 4
               OpDecorate %15 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_11 0 Offset 0
               OpDecorate %tint_symbol_11 Block
               OpDecorate %20 DescriptorSet 0
               OpDecorate %20 Binding 5
               OpDecorate %20 NonWritable
               OpDecorate %_arr_float_uint_64 ArrayStride 4
               OpDecorate %fused_fused_dequantize4_fused_NT_ma
/* Dumped generated SPIRV disassembly */
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 3612
; Schema: 0
               OpCapability Shader
        %152 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %fused_fused_dequantize_NT_matmul4_kernel_2 "fused_fused_dequantize_NT_matmul4_kernel_2" %fused_fused_dequantize_NT_matmul4_kernel_2_workgroup_id_Input %fused_fused_dequantize_NT_matmul4_kernel_2_num_workgroups_Input %fused_fused_dequantize_NT_matmul4_kernel_2_local_invocation_id_Input
               OpExecutionMode %fused_fused_dequantize_NT_matmul4_kernel_2 LocalSize 8 8 1
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpMemberName %tint_symbol_5 0 "tint_symbol_4"
               OpName %tint_symbol_5 "tint_symbol_5"
               OpMemberName %tint_symbol_7 0 "tint_symbol_6"
               OpName %tint_symbol_7 "tint_symbol_7"
               OpMemberName %PODArgs 0 "batch_size"
               OpMemberName %PODArgs 1 "packGridDimX"
               OpName %PODArgs "PODArgs"
               OpMemberName %tint_symbol_9 0 "tint_symbol_8"
               OpName %tint_symbol_9 "tint_symbol_9"
               OpName %rms_norm227_reindex_pad_shared "rms_norm227_reindex_pad_shared"
               OpName %dequantize_reindex_shared "dequantize_reindex_shared"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_2_workgroup_id_Input "fused_fused_dequantize_NT_matmul4_kernel_2_workgroup_id_Input"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_2_num_workgroups_Input "fused_fused_dequantize_NT_matmul4_kernel_2_num_workgroups_Input"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_2_local_invocation_id_Input "fused_fused_dequantize_NT_matmul4_kernel_2_local_invocation_id_Input"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_2_inner "fused_fused_dequantize_NT_matmul4_kernel_2_inner"
               OpName %blockIdx "blockIdx"
               OpName %gridDim "gridDim"
               OpName %threadIdx "threadIdx"
               OpName %NT_matmul_intermediate_reindex_pad_local "NT_matmul_intermediate_reindex_pad_local"
               OpName %v__1 "v__1"
               OpName %var_1 "var_1"
               OpName %ax3_0 "ax3_0"
               OpName %fused_fused_dequantize_NT_matmul4_kernel_2 "fused_fused_dequantize_NT_matmul4_kernel_2"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 1
               OpDecorate %6 NonWritable
               OpMemberDecorate %tint_symbol_5 0 Offset 0
               OpDecorate %tint_symbol_5 Block
               OpDecorate %11 DescriptorSet 0
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
               OpMemberDecorate %tint_symbol_7 0 Offset 0
               OpDecorate %tint_symbol_7 Block
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 3
               OpDecorate %14 NonWritable
               OpMemberDecorate %PODArgs 0 Offset 0
               OpMemberDecorate %PODArgs 1 Offset 4
               OpMemberDecorate %tint_symbol_9 0 Offset 0
               OpDecorate %tint_symbol_9 Block
               OpDecorate %17 DescriptorSet 0
               OpDecorate %17 Binding 4
               OpDecorate %17 NonWritable
               OpDecorate %_arr_float_uint_256 ArrayStride 4
               OpDecorate %fused_fused_dequantize_NT_matmul4_kernel_2_workgroup_id_Input BuiltIn WorkgroupId
               OpDecorate %fused_fused_dequantize_NT_matmul4_kernel_2_num_workgroups_Input BuiltIn NumWorkgroups
               OpDecorate %fused_fused_dequantize_NT_matmul4_kernel_2_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %_arr_float_uint_16 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%tint_symbol_1 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
       %uint = OpTypeInt 32 0
%_runtimearr_uint = OpTypeRuntimeArray %uint
%tint_symbol_3 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %6 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
%tint_symb
sw.js:76 Multiround chatting, reuse KVCache.
